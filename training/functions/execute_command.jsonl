{"prompt": "Regarding kubernetes, Scale deployment 'webapp' to zero replicas.", "completion": "\n<execute_command>\nkubectl scale deployment webapp --replicas=0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get detailed information about the service 'payments' in namespace 'production'.", "completion": "\n<execute_command>\nkubectl describe service payments -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all running pods with label 'env=staging'.", "completion": "\n<execute_command>\nkubectl get pods -l env=staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the YAML configuration of pod 'api-server'.", "completion": "\n<execute_command>\nkubectl get pod api-server -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete namespace 'old-env'.", "completion": "\n<execute_command>\nkubectl delete namespace old-env\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all deployments in the 'test' namespace.", "completion": "\n<execute_command>\nkubectl get deployments -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods sorted by creation timestamp.", "completion": "\n<execute_command>\nkubectl get pods --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get resource usage details for pod 'data-processor'.", "completion": "\n<execute_command>\nkubectl describe pod data-processor\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch real-time logs of pod 'auth-service'.", "completion": "\n<execute_command>\nkubectl logs -f auth-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe ConfigMap 'app-settings' in 'default' namespace.", "completion": "\n<execute_command>\nkubectl describe configmap app-settings -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all services of type 'LoadBalancer'.", "completion": "\n<execute_command>\nkubectl get services --field-selector spec.type=LoadBalancer\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get container names of pod 'frontend-app'.", "completion": "\n<execute_command>\nkubectl get pod frontend-app -o jsonpath='{.spec.containers[*].name}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Cordon nodes 'node-a' and 'node-b'.", "completion": "\n<execute_command>\nkubectl cordon node-a node-b\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the events for pod 'redis-cache'.", "completion": "\n<execute_command>\nkubectl describe pod redis-cache | grep Events -A 10\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create ConfigMap 'app-config' from file 'config.properties'.", "completion": "\n<execute_command>\nkubectl create configmap app-config --from-file=config.properties\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all pods in namespace 'staging'.", "completion": "\n<execute_command>\nkubectl delete pods --all -n staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the cluster's API server version.", "completion": "\n<execute_command>\nkubectl version --short\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch deployment 'api-gateway' with file 'patch.json'.", "completion": "\n<execute_command>\nkubectl patch deployment api-gateway --patch-file=patch.json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List pods along with their CPU and memory usage.", "completion": "\n<execute_command>\nkubectl top pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Find the node of pod 'backend'.", "completion": "\n<execute_command>\nkubectl get pod backend -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a secret named 'db-credentials' with username 'admin' and password 'P@ssw0rd'.", "completion": "\n<execute_command>\nkubectl create secret generic db-credentials --from-literal=username=admin --from-literal=password=P@ssw0rd\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all pods in 'default' namespace in JSON format.", "completion": "\n<execute_command>\nkubectl get pods -n default -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label pod 'web-client' with 'tier=frontend'.", "completion": "\n<execute_command>\nkubectl label pod web-client tier=frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get status of StatefulSet 'mysql'.", "completion": "\n<execute_command>\nkubectl rollout status statefulset/mysql\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all nodes and their labels.", "completion": "\n<execute_command>\nkubectl get nodes --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get endpoints for service 'mongodb'.", "completion": "\n<execute_command>\nkubectl get endpoints mongodb\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete ConfigMap 'app-config'.", "completion": "\n<execute_command>\nkubectl delete configmap app-config\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all daemonsets running in the cluster.", "completion": "\n<execute_command>\nkubectl get daemonsets --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe PersistentVolume 'pv-data'.", "completion": "\n<execute_command>\nkubectl describe pv pv-data\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the logs of all pods with label 'app=nginx'.", "completion": "\n<execute_command>\nkubectl logs -l app=nginx\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I get the list of API resources available?", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the cluster ID and server address.", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get rollout history of deployment 'order-service'.", "completion": "\n<execute_command>\nkubectl rollout history deployment/order-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Rollback deployment 'order-service' to revision 3.", "completion": "\n<execute_command>\nkubectl rollout undo deployment/order-service --to-revision=3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events in namespace 'qa'.", "completion": "\n<execute_command>\nkubectl get events -n qa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in 'default' namespace with their labels.", "completion": "\n<execute_command>\nkubectl get pods -n default --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Edit ConfigMap 'app-settings'.", "completion": "\n<execute_command>\nkubectl edit configmap app-settings\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all nodes in JSON format.", "completion": "\n<execute_command>\nkubectl get nodes -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Taint node 'node-1' with 'key=value:NoSchedule'.", "completion": "\n<execute_command>\nkubectl taint nodes node-1 key=value:NoSchedule\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove taint from node 'node-1'.", "completion": "\n<execute_command>\nkubectl taint nodes node-1 key:NoSchedule-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create pod from 'mypod.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f mypod.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get cluster roles in the cluster.", "completion": "\n<execute_command>\nkubectl get clusterroles\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe service account 'default' in namespace 'logging'.", "completion": "\n<execute_command>\nkubectl describe serviceaccount default -n logging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get roles in namespace 'monitoring'.", "completion": "\n<execute_command>\nkubectl get roles -n monitoring\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create role binding 'read-pods' assigning role 'pod-reader' to user 'jane' in namespace 'dev'.", "completion": "\n<execute_command>\nkubectl create rolebinding read-pods --role=pod-reader --user=jane -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get cluster information.", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Force delete pod 'stuck-pod'.", "completion": "\n<execute_command>\nkubectl delete pod stuck-pod --grace-period=0 --force\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all ingresses in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get ingress -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set a new context with user 'admin', cluster 'kubernetes', and namespace 'dev'.", "completion": "\n<execute_command>\nkubectl config set-context dev --cluster=kubernetes --user=admin --namespace=dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Switch to context 'dev'.", "completion": "\n<execute_command>\nkubectl config use-context dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete PersistentVolumeClaim 'data-pvc' in namespace 'db'.", "completion": "\n<execute_command>\nkubectl delete pvc data-pvc -n db\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods with their restart count.", "completion": "\n<execute_command>\nkubectl get pods --sort-by='{.status.containerStatuses[0].restartCount}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the status of all API services.", "completion": "\n<execute_command>\nkubectl get apiservices\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I list all resource types in Kubernetes?", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all the pods in 'kube-system' namespace along with their node selectors.", "completion": "\n<execute_command>\nkubectl get pods -n kube-system -o jsonpath='{range .items[*]}{.metadata.name}:{.spec.nodeSelector}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update deployment 'web-app' with image 'web-app:v2'.", "completion": "\n<execute_command>\nkubectl set image deployment/web-app web-app=web-app:v2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale StatefulSet 'mongo' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale statefulset mongo --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of pods that are not ready.", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.phase!=Running\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch rollout status of deployment 'payment-service'.", "completion": "\n<execute_command>\nkubectl rollout status deployment/payment-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get a list of all secrets.", "completion": "\n<execute_command>\nkubectl get secrets\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the external IP addresses of services?", "completion": "\n<execute_command>\nkubectl get services -o jsonpath='{.items[*].status.loadBalancer.ingress[0].ip}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the node resources usage.", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I check which pods are consuming the most CPU?", "completion": "\n<execute_command>\nkubectl top pods --sort-by=cpu\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the ReplicaSet 'frontend'.", "completion": "\n<execute_command>\nkubectl describe replicaset frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain 'deployment.spec.template'.", "completion": "\n<execute_command>\nkubectl explain deployment.spec.template\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the logs of a job named 'batch-process'.", "completion": "\n<execute_command>\nkubectl logs job/batch-process\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a job from CronJob 'daily-backup'.", "completion": "\n<execute_command>\nkubectl create job --from=cronjob/daily-backup manual-backup\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with their image versions.", "completion": "\n<execute_command>\nkubectl get pods -o jsonpath='{range .items[*]}{.metadata.name}:{.spec.containers[*].image}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get previous logs of pod 'my-pod'.", "completion": "\n<execute_command>\nkubectl logs my-pod --previous\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events for deployment 'user-service'.", "completion": "\n<execute_command>\nkubectl describe deployment user-service | grep Events -A 10\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all images used by pods in 'production' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n production -o jsonpath='{..image}' | tr -s '[[:space:]]' '\\n' | sort | uniq\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Attach to container 'app' in pod 'app-pod'.", "completion": "\n<execute_command>\nkubectl attach app-pod -c app\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the API versions available in the cluster.", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run 'ls /' inside pod 'test-pod'.", "completion": "\n<execute_command>\nkubectl exec test-pod -- ls /\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all completed jobs.", "completion": "\n<execute_command>\nkubectl delete jobs --field-selector status.successful=1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all Pods that are in 'Pending' state.", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.phase=Pending\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to create a namespace named 'research'?", "completion": "\n<execute_command>\nkubectl create namespace research\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all pods in all namespaces in wide format.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the resource quotas in namespace 'finance'.", "completion": "\n<execute_command>\nkubectl describe resourcequota -n finance\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run 'nslookup kubernetes.default' inside pod 'test-pod'.", "completion": "\n<execute_command>\nkubectl exec test-pod -- nslookup kubernetes.default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get logs of pod 'failing-pod'.", "completion": "\n<execute_command>\nkubectl logs failing-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a job from file 'job.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f job.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all Pods that have a restart count greater than 5.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces --field-selector=status.containerStatuses[0].restartCount>5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to create a deployment with 3 replicas of nginx?", "completion": "\n<execute_command>\nkubectl create deployment nginx --image=nginx --replicas=3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all resources in namespace 'test'.", "completion": "\n<execute_command>\nkubectl delete all --all -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods running on node 'worker-1'.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=worker-1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods with an image pull error.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces | grep ImagePullBackOff\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I check pod security policies in the cluster?", "completion": "\n<execute_command>\nkubectl get psp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all CronJobs.", "completion": "\n<execute_command>\nkubectl get cronjobs\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe CronJob 'backup-job'.", "completion": "\n<execute_command>\nkubectl describe cronjob backup-job\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get service accounts in all namespaces.", "completion": "\n<execute_command>\nkubectl get serviceaccounts --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Port-forward local port 8080 to service 'my-service' port 80.", "completion": "\n<execute_command>\nkubectl port-forward service/my-service 8080:80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods annotated with 'backup=true'.", "completion": "\n<execute_command>\nkubectl get pods -A -l 'backup=true'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the last-applied-configuration of deployment 'app-deployment'.", "completion": "\n<execute_command>\nkubectl get deployment app-deployment -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the value of a secret named 'api-key'.", "completion": "\n<execute_command>\nkubectl get secret api-key -o jsonpath='{.data}' | base64 --decode\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods in namespace 'prod' that are not in 'Running' state.", "completion": "\n<execute_command>\nkubectl get pods -n prod --field-selector=status.phase!=Running\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to delete a Job named 'cleanup'?", "completion": "\n<execute_command>\nkubectl delete job cleanup\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the status of pod 'web-app'.", "completion": "\n<execute_command>\nkubectl get pod web-app\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List services in namespace 'staging'.", "completion": "\n<execute_command>\nkubectl get services -n staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, What command shows all deployments across all namespaces?", "completion": "\n<execute_command>\nkubectl get deployments --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe secret 'api-token' in namespace 'dev'.", "completion": "\n<execute_command>\nkubectl describe secret api-token -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods using image 'nginx:latest'.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{.items[?(@.spec.containers[*].image==\"nginx:latest\")].metadata.name}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Drain node 'node-10' for maintenance.", "completion": "\n<execute_command>\nkubectl drain node-10 --ignore-daemonsets --force\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the CPU requests and limits for all pods.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name}: CPU Requests={.spec.containers[*].resources.requests.cpu}, Limits={.spec.containers[*].resources.limits.cpu}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check readiness of pod 'payment-gateway'.", "completion": "\n<execute_command>\nkubectl get pod payment-gateway -o jsonpath='{.status.conditions[?(@.type==\"Ready\")].status}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a ClusterIP service named 'my-service' on port 80 selecting pods with label 'app=myapp'.", "completion": "\n<execute_command>\nkubectl expose deployment myapp --type=ClusterIP --name=my-service --port=80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check rollout status of StatefulSet 'postgres'.", "completion": "\n<execute_command>\nkubectl rollout status statefulset/postgres\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I list all contexts in kubeconfig?", "completion": "\n<execute_command>\nkubectl config get-contexts\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set imagePullPolicy to Always for deployment 'nginx'.", "completion": "\n<execute_command>\nkubectl patch deployment nginx --patch '{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"nginx\", \"imagePullPolicy\": \"Always\"}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get service account used by pod 'analytics'.", "completion": "\n<execute_command>\nkubectl get pod analytics -o jsonpath='{.spec.serviceAccountName}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in 'Running' state in namespace 'dev'.", "completion": "\n<execute_command>\nkubectl get pods -n dev --field-selector=status.phase=Running\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label all pods in 'test' namespace with 'env=test'.", "completion": "\n<execute_command>\nkubectl label pods --all env=test -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create pod 'multicontainer' with containers 'app' and 'sidecar'.", "completion": "\n<execute_command>\nkubectl apply -f multicontainer-pod.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List pods on node 'node-2'.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=node-2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set environment variable 'ENV=production' for deployment 'web-app'.", "completion": "\n<execute_command>\nkubectl set env deployment/web-app ENV=production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get UID of pod 'analytics-worker'.", "completion": "\n<execute_command>\nkubectl get pod analytics-worker -o jsonpath='{.metadata.uid}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to list all cluster roles with verb 'get' on pods?", "completion": "\n<execute_command>\nkubectl get clusterroles -o json | jq '.items[] | select(.rules[].verbs[]? == \"get\" and .rules[].resources[]?==\"pods\") | .metadata.name'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check which services are exposing port 443.", "completion": "\n<execute_command>\nkubectl get services --all-namespaces -o jsonpath='{range .items[?(@.spec.ports[0].port==443)]}{.metadata.name} -n {.metadata.namespace}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create deployment 'busybox-deploy' with image 'busybox' that runs 'sleep 3600'.", "completion": "\n<execute_command>\nkubectl create deployment busybox-deploy --image=busybox -- /bin/sh -c 'sleep 3600'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all failed pods.", "completion": "\n<execute_command>\nkubectl delete pods --field-selector=status.phase=Failed\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate pod 'backend' with 'owner=team-a'.", "completion": "\n<execute_command>\nkubectl annotate pod backend owner=team-a\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods with status 'Pending'.", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.phase=Pending\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a pod named 'temp-pod' that echoes 'Hello World' and exits.", "completion": "\n<execute_command>\nkubectl run temp-pod --image=busybox --restart=Never -- /bin/sh -c 'echo Hello World'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete resources from 'resources.yaml'.", "completion": "\n<execute_command>\nkubectl delete -f resources.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods along with their node and namespace.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the YAML definition of deployment 'api' without cluster details.", "completion": "\n<execute_command>\nkubectl get deployment api -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the age of all pods.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the cluster's DNS service details.", "completion": "\n<execute_command>\nkubectl get svc -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods that are terminating.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces | grep Terminating\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply network policy from 'network-policy.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f network-policy.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get status of Job 'data-import'.", "completion": "\n<execute_command>\nkubectl describe job data-import\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale ReplicaSet 'my-replica' to 3 replicas.", "completion": "\n<execute_command>\nkubectl scale replicaset my-replica --replicas=3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of available StorageClasses.", "completion": "\n<execute_command>\nkubectl get storageclass\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set default namespace to 'development'.", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=development\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with restarts greater than zero.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces --field-selector=status.containerStatuses[0].restartCount>0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I get the status of all controllers in the cluster?", "completion": "\n<execute_command>\nkubectl get componentstatuses\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check if the scheduler is running.", "completion": "\n<execute_command>\nkubectl get componentstatuses scheduler\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create deployment 'myapp' with image 'myapp:v1' and revision history limit of 5.", "completion": "\n<execute_command>\nkubectl create deployment myapp --image=myapp:v1 --dry-run=client -o yaml | sed 's/^.*$/&\\n  revisionHistoryLimit: 5/' | kubectl apply -f -\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all pods along with their node IPs.", "completion": "\n<execute_command>\nkubectl get pods -o wide --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check if a node is Ready?", "completion": "\n<execute_command>\nkubectl get nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check status of node 'worker-node-3'.", "completion": "\n<execute_command>\nkubectl get node worker-node-3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all resources in namespace 'finance'.", "completion": "\n<execute_command>\nkubectl get all -n finance\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the default service account token?", "completion": "\n<execute_command>\nkubectl get secret $(kubectl get serviceaccount default -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 --decode\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe security context of pod 'secure-pod'.", "completion": "\n<execute_command>\nkubectl get pod secure-pod -o jsonpath='{.spec.securityContext}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create namespace 'analytics' and apply quota from 'quota.yaml'.", "completion": "\n<execute_command>\nkubectl create namespace analytics && kubectl apply -f quota.yaml -n analytics\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all endpoints in the cluster.", "completion": "\n<execute_command>\nkubectl get endpoints --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check if deployment 'frontend' is paused.", "completion": "\n<execute_command>\nkubectl rollout status deployment/frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Pause deployment 'frontend'.", "completion": "\n<execute_command>\nkubectl rollout pause deployment/frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Resume deployment 'frontend'.", "completion": "\n<execute_command>\nkubectl rollout resume deployment/frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the nodes in a cluster sorted by CPU utilization.", "completion": "\n<execute_command>\nkubectl top nodes | sort -k3 -n\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the external IP of a node?", "completion": "\n<execute_command>\nkubectl get nodes -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods not controlled by a ReplicaSet.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name}:{.metadata.ownerReferences}\\n{end}' | grep -v ownerReferences\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply PriorityClass from 'priority.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f priority.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain 'persistentvolumeclaim'.", "completion": "\n<execute_command>\nkubectl explain persistentvolumeclaim\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the kubernetes version of nodes.", "completion": "\n<execute_command>\nkubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name} - Version: {.status.nodeInfo.kubeletVersion}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to list all images used by deployments?", "completion": "\n<execute_command>\nkubectl get deployments --all-namespaces -o jsonpath='{..image}' | tr -s '[[:space:]]' '\\n' | sort | uniq\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check which pods are using host networking.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[?(@.spec.hostNetwork==true)]}{.metadata.name} -n {.metadata.namespace}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete pod 'temp-pod' and let ReplicaSet recreate it.", "completion": "\n<execute_command>\nkubectl delete pod temp-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all running Jobs.", "completion": "\n<execute_command>\nkubectl get jobs\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run 'env' command in container 'app' of pod 'app-pod'.", "completion": "\n<execute_command>\nkubectl exec app-pod -c app -- env\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get tolerations of pod 'db-pod'.", "completion": "\n<execute_command>\nkubectl get pod db-pod -o jsonpath='{.spec.tolerations}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create secret 'tls-secret' from 'tls.crt' and 'tls.key'.", "completion": "\n<execute_command>\nkubectl create secret tls tls-secret --cert=tls.crt --key=tls.key\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all services without a selector.", "completion": "\n<execute_command>\nkubectl get services --all-namespaces -o jsonpath='{range .items[?(!@.spec.selector)]}{.metadata.name} -n {.metadata.namespace}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete namespace 'stuck-namespace' by removing finalizers.", "completion": "\n<execute_command>\nkubectl get namespace stuck-namespace -o json > ns.json && sed '/\"kubernetes\"/d' ns.json > ns_new.json && kubectl replace --raw \"/api/v1/namespaces/stuck-namespace/finalize\" -f ./ns_new.json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the metrics server status.", "completion": "\n<execute_command>\nkubectl get deployment metrics-server -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply CRD from 'crd.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f crd.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I find which pods are using hostPath volumes?", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[?(@.spec.volumes[?(@.hostPath)])]}{.metadata.name} -n {.metadata.namespace}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to label a node as master?", "completion": "\n<execute_command>\nkubectl label node <node-name> node-role.kubernetes.io/master=''\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label node 'node-0' as master.", "completion": "\n<execute_command>\nkubectl label node node-0 node-role.kubernetes.io/master=''\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with their QoS class.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name}: {.status.qosClass}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all events in the cluster in sorted order.", "completion": "\n<execute_command>\nkubectl get events --all-namespaces --sort-by='.lastTimestamp'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all service accounts in JSON output.", "completion": "\n<execute_command>\nkubectl get serviceaccounts --all-namespaces -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply PDB from 'pdb.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f pdb.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events for node 'node-1'.", "completion": "\n<execute_command>\nkubectl get events --all-namespaces --field-selector=involvedObject.kind=Node,involvedObject.name=node-1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all namespaces and their resource quotas.", "completion": "\n<execute_command>\nkubectl get resourcequotas --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create ResourceQuota 'object-count' in namespace 'dev' limiting pods to 10.", "completion": "\n<execute_command>\nkubectl create quota object-count --hard=pods=10 -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, how do i get all the pods?", "completion": "\n<execute_command>\nkubectl get pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, LIST SERVICES in the 'prod' NAMESPACE.", "completion": "\n<execute_command>\nkubectl get services -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show me the DETAILS of deployment 'nginx-deployment'.", "completion": "\n<execute_command>\nkubectl describe deployment nginx-deployment\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a CONFIGMAP named 'config1' from file 'app.config'.", "completion": "\n<execute_command>\nkubectl create configmap config1 --from-file=app.config\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I DELETE all pods in namespace 'test'?", "completion": "\n<execute_command>\nkubectl delete pods --all -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, get nodes", "completion": "\n<execute_command>\nkubectl get nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe NODE 'worker-node-1'.", "completion": "\n<execute_command>\nkubectl describe node worker-node-1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, POD logs for 'backend-service'.", "completion": "\n<execute_command>\nkubectl logs backend-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, HoW Do I sEt tHe cLuStEr cOnTeXt to 'minikube'?", "completion": "\n<execute_command>\nkubectl config use-context minikube\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, apply configuration from 'deployment.yaml'", "completion": "\n<execute_command>\nkubectl apply -f deployment.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, What's the current CONTEXT?", "completion": "\n<execute_command>\nkubectl config current-context\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get PersistentVolumeClaims in 'database' namespace.", "completion": "\n<execute_command>\nkubectl get pvc -n database\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, CREATE a deployment called 'redis' with image 'redis:latest'.", "completion": "\n<execute_command>\nkubectl create deployment redis --image=redis:latest\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale DEPLOYMENT 'api-server' to 4 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment api-server --replicas=4\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, ExPoSe deployment 'frontend' on PORT 8080.", "completion": "\n<execute_command>\nkubectl expose deployment frontend --port=8080\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I get EVENTS in 'default' namespace?", "completion": "\n<execute_command>\nkubectl get events -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, list ALL namespaces", "completion": "\n<execute_command>\nkubectl get namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get Pods in a pending state.", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.phase=Pending\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, SHOW me InGreSS resources.", "completion": "\n<execute_command>\nkubectl get ingress\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe SERVICE 'my-service' in NAMESPACE 'my-namespace'.", "completion": "\n<execute_command>\nkubectl describe service my-service -n my-namespace\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Edit DEPLOYMENT 'app-deploy'.", "completion": "\n<execute_command>\nkubectl edit deployment app-deploy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, get DAEMONSETS in 'kube-system' namespace", "completion": "\n<execute_command>\nkubectl get daemonsets -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update deployment 'web-app' with image 'web-app:v2'.", "completion": "\n<execute_command>\nkubectl set image deployment/web-app web-app=web-app:v2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List Pods with label 'app=nginx'.", "completion": "\n<execute_command>\nkubectl get pods -l app=nginx\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete namespace 'old-namespace'.", "completion": "\n<execute_command>\nkubectl delete namespace old-namespace\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, get resource QUOTAS", "completion": "\n<execute_command>\nkubectl get resourcequotas\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe POD 'my-pod' in 'test' NAMESPACE.", "completion": "\n<execute_command>\nkubectl describe pod my-pod -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to View the cluster INFO?", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, get CRDs", "completion": "\n<execute_command>\nkubectl get crd\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain 'deployment.spec.replicas'.", "completion": "\n<execute_command>\nkubectl explain deployment.spec.replicas\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get STORAGECLASSES.", "completion": "\n<execute_command>\nkubectl get storageclass\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the Namespace to 'development'.", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=development\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the logs of POD 'database' PREVIOUS instance.", "completion": "\n<execute_command>\nkubectl logs database --previous\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get SERVICEACCOUNTS in all namespaces.", "completion": "\n<execute_command>\nkubectl get serviceaccounts --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe NODE 'node-5'.", "completion": "\n<execute_command>\nkubectl describe node node-5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List HARDWARE resources of nodes.", "completion": "\n<execute_command>\nkubectl describe nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create secret 'db-secret' with user='admin' and password='pass123'.", "completion": "\n<execute_command>\nkubectl create secret generic db-secret --from-literal=user=admin --from-literal=password=pass123\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How Do I GET the CPU and MEMORY usage of nodes?", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, LABEL node 'node-3' with 'env=production'.", "completion": "\n<execute_command>\nkubectl label nodes node-3 env=production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List PODS with their Node names.", "completion": "\n<execute_command>\nkubectl get pods -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, GET current RESOURCE quotas in 'finance' namespace.", "completion": "\n<execute_command>\nkubectl get resourcequota -n finance\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe RESOURCEQUOTA 'mem-cpu-demo' in 'default' namespace.", "completion": "\n<execute_command>\nkubectl describe resourcequota mem-cpu-demo -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch deployment 'nginx-deployment' with file 'patch.yaml'.", "completion": "\n<execute_command>\nkubectl patch deployment nginx-deployment --patch-file=patch.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events sorted by TIMESTAMP.", "completion": "\n<execute_command>\nkubectl get events --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Uncordon node 'node-2'.", "completion": "\n<execute_command>\nkubectl uncordon node-2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get endpoints for service 'my-service'.", "completion": "\n<execute_command>\nkubectl get endpoints my-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List Pods in 'Running' state.", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.phase=Running\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I see all API resources AVAILABLE?", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the INGRESS 'my-ingress'.", "completion": "\n<execute_command>\nkubectl describe ingress my-ingress\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the EXTERNAL IP of service 'web-service'.", "completion": "\n<execute_command>\nkubectl get service web-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a JOB from cronjob 'daily-backup'.", "completion": "\n<execute_command>\nkubectl create job --from=cronjob/daily-backup daily-backup-job\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get Names and Images of Pods.", "completion": "\n<execute_command>\nkubectl get pods -o jsonpath='{range .items[*]}{.metadata.name} {.spec.containers[*].image}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Execute 'ls' in pod 'my-pod'.", "completion": "\n<execute_command>\nkubectl exec my-pod -- ls\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List ConfigMaps in namespace 'test'.", "completion": "\n<execute_command>\nkubectl get configmaps -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe STATEFULSET 'mongo' in 'database' namespace.", "completion": "\n<execute_command>\nkubectl describe statefulset mongo -n database\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get Cluster ROLE Bindings.", "completion": "\n<execute_command>\nkubectl get clusterrolebindings\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create role 'pod-reader' that allows 'get' and 'watch' on pods.", "completion": "\n<execute_command>\nkubectl create role pod-reader --verb=get --verb=watch --resource=pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get logs of job 'data-process'.", "completion": "\n<execute_command>\nkubectl logs job/data-process\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get PODS in 'kube-system' namespace sorted by restart count.", "completion": "\n<execute_command>\nkubectl get pods -n kube-system --sort-by='.status.containerStatuses[0].restartCount'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run pod 'interactive' with image 'ubuntu' and interactive shell.", "completion": "\n<execute_command>\nkubectl run interactive --image=ubuntu --restart=Never -it -- /bin/bash\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get NODES with LABEL 'disk=ssd'.", "completion": "\n<execute_command>\nkubectl get nodes -l disk=ssd\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get resource usage of pod 'backend'.", "completion": "\n<execute_command>\nkubectl top pod backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a SERVICEACCOUNT called 'build-robot'.", "completion": "\n<execute_command>\nkubectl create serviceaccount build-robot\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get details of SERVICEACCOUNT 'build-robot'.", "completion": "\n<execute_command>\nkubectl describe serviceaccount build-robot\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label POD 'frontend' with 'tier=web'.", "completion": "\n<execute_command>\nkubectl label pod frontend tier=web\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How Do I See taints on NODES?", "completion": "\n<execute_command>\nkubectl describe nodes | grep -A5 Taints\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Taint node 'node-1' with 'key=value:NoSchedule'.", "completion": "\n<execute_command>\nkubectl taint nodes node-1 key=value:NoSchedule\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove taint 'key=value:NoSchedule' from node 'node-1'.", "completion": "\n<execute_command>\nkubectl taint nodes node-1 key=value:NoSchedule-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the STATUS of DaemonSet 'fluentd'.", "completion": "\n<execute_command>\nkubectl describe daemonset fluentd\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get ENVIRONMENT variables of pod 'app-pod'.", "completion": "\n<execute_command>\nkubectl exec app-pod -- env\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply PDB from file 'pdb.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f pdb.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all SERVICES with type 'NodePort'.", "completion": "\n<execute_command>\nkubectl get services --field-selector spec.type=NodePort\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Restart deployment 'app-deploy'.", "completion": "\n<execute_command>\nkubectl rollout restart deployment/app-deploy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, hoW can I iNsPeCt cluster EVENTS?", "completion": "\n<execute_command>\nkubectl get events --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get STATUS of HORIZONTAL POD AUTOSCALER 'webapp-hpa'.", "completion": "\n<execute_command>\nkubectl describe hpa webapp-hpa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe PodSecurityPolicy 'restricted'.", "completion": "\n<execute_command>\nkubectl describe psp restricted\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all SERVICE accounts in 'production' namespace.", "completion": "\n<execute_command>\nkubectl get serviceaccounts -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create NAMESPACE 'qa'.", "completion": "\n<execute_command>\nkubectl create namespace qa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set IMAGE PULL SECRETS for deployment 'myapp'.", "completion": "\n<execute_command>\nkubectl set image deployment/myapp --image-pull-secrets=myregistrykey\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get NETWORK POLICIES in namespace 'default'.", "completion": "\n<execute_command>\nkubectl get networkpolicy -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all SERVICE accounts.", "completion": "\n<execute_command>\nkubectl get serviceaccounts\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get RACs (RoleBindings, ClusterRoleBindings).", "completion": "\n<execute_command>\nkubectl get rolebindings,clusterrolebindings\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the current CONFIGURATION of kube-proxy.", "completion": "\n<execute_command>\nkubectl get configmap kube-proxy -n kube-system -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the STATUS of all COMPONENTSTATUSES.", "completion": "\n<execute_command>\nkubectl get componentstatuses\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the cluster's health.", "completion": "\n<execute_command>\nkubectl get componentstatuses\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete job 'cleanup-job'.", "completion": "\n<execute_command>\nkubectl delete job cleanup-job\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List RESOURCES with label 'tier=backend'.", "completion": "\n<execute_command>\nkubectl get all -l tier=backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new CONTEXT named 'dev-context' with namespace 'dev'.", "completion": "\n<execute_command>\nkubectl config set-context dev-context --namespace=dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the CURRENT context to 'dev-context'.", "completion": "\n<execute_command>\nkubectl config use-context dev-context\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the CONFIGMAP 'settings' in all namespaces.", "completion": "\n<execute_command>\nkubectl describe configmaps settings --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the HISTORY of deployment 'myapp'.", "completion": "\n<execute_command>\nkubectl rollout history deployment/myapp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Roll BACK deployment 'myapp' to previous revision.", "completion": "\n<execute_command>\nkubectl rollout undo deployment/myapp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all PODS including terminated ones.", "completion": "\n<execute_command>\nkubectl get pods --show-all\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the DEFAULT storage class.", "completion": "\n<execute_command>\nkubectl get storageclass | grep '(default)'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, CREATE a CLUSTERROLE 'pod-admin' with full access to pods.", "completion": "\n<execute_command>\nkubectl create clusterrole pod-admin --verb='*' --resource=pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Bind CLUSTERROLE 'pod-admin' to user 'john'.", "completion": "\n<execute_command>\nkubectl create clusterrolebinding john-pod-admin --clusterrole=pod-admin --user=john\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get POD template of deployment 'api-server'.", "completion": "\n<execute_command>\nkubectl get deployment api-server -o jsonpath='{.spec.template}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create LimitRange from 'limits.yaml' in namespace 'test'.", "completion": "\n<execute_command>\nkubectl apply -f limits.yaml -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get NODES with taint 'dedicated=experimental:NoSchedule'.", "completion": "\n<execute_command>\nkubectl get nodes -o json | jq '.items[] | select(.spec.taints[]?.key == \"dedicated\" and .spec.taints[]?.value == \"experimental\") | .metadata.name'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How Do I sEe AVAILABLE metrics?", "completion": "\n<execute_command>\nkubectl top nodes and kubectl top pods provide metrics if Metrics Server is installed.\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the pod DISRUPTION BUDGETS.", "completion": "\n<execute_command>\nkubectl get pdb\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe NODE conditions for 'node-4'.", "completion": "\n<execute_command>\nkubectl describe node node-4 | grep -A20 'Conditions'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all RESOURCES with annotation 'team=alpha'.", "completion": "\n<execute_command>\nkubectl get all --all-namespaces -o json | jq '.items[] | select(.metadata.annotations.team==\"alpha\") | .metadata.name'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get NAMESPACEs and their LABELs.", "completion": "\n<execute_command>\nkubectl get namespaces --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create CUSTOM RESOURCE from 'cr.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f cr.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete custom resource 'myresource' of type 'MyResource'.", "completion": "\n<execute_command>\nkubectl delete MyResource myresource\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all PODS in 'production' with label 'app=payment'.", "completion": "\n<execute_command>\nkubectl get pods -n production -l app=payment\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List PODS with their RESOURCE requests and limits.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name} {.spec.containers[*].resources}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply all YAML files in 'configs' directory.", "completion": "\n<execute_command>\nkubectl apply -f configs/\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all JOBS in 'data-processing' namespace.", "completion": "\n<execute_command>\nkubectl delete jobs --all -n data-processing\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe RESOURCE 'pods' in API group 'v1'.", "completion": "\n<execute_command>\nkubectl api-resources --api-group=v1 -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get ComponentStatus of scheduler.", "completion": "\n<execute_command>\nkubectl get componentstatus scheduler\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, What is the KUBERNETES SERVICE CLUSTER IP?", "completion": "\n<execute_command>\nkubectl get service kubernetes -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How Do I check which version of Kubernetes I am running?", "completion": "\n<execute_command>\nkubectl version --short\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List CONTAINERS in POD 'analytics-pod'.", "completion": "\n<execute_command>\nkubectl get pod analytics-pod -o jsonpath='{.spec.containers[*].name}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get details of REPLICASET 'frontend'?", "completion": "\n<execute_command>\nkubectl describe replicaset frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale REPLICASET 'frontend' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale replicaset frontend --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain 'pod.spec.containers.image'.", "completion": "\n<execute_command>\nkubectl explain pod.spec.containers.image\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get EVENTS related to POD 'cache'.", "completion": "\n<execute_command>\nkubectl describe pod cache | grep Events -A 10\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all NODES and display their labels.", "completion": "\n<execute_command>\nkubectl get nodes --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I list all the pods in the 'dev' namespace?", "completion": "\n<execute_command>\nkubectl get pods -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the details of the service 'my-service' in 'staging' namespace.", "completion": "\n<execute_command>\nkubectl describe service my-service -n staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I find all the pods with the label 'app=frontend'?", "completion": "\n<execute_command>\nkubectl get pods -l app=frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the deployment 'test-deployment' in namespace 'test'.", "completion": "\n<execute_command>\nkubectl delete deployment test-deployment -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I create a namespace called 'research'?", "completion": "\n<execute_command>\nkubectl create namespace research\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the logs of the pod 'data-collector' with multiple containers.", "completion": "\n<execute_command>\nkubectl logs data-collector --all-containers\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the history of commands executed in kubectl?", "completion": "\n<execute_command>\nKubectl does not store command history; you can check your shell's history instead.\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply configuration changes from 'config.yaml' to the cluster.", "completion": "\n<execute_command>\nkubectl apply -f config.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check which version of kubectl I am using?", "completion": "\n<execute_command>\nkubectl version --client\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the image of the deployment 'web-app' to 'web-app:v2.1'.", "completion": "\n<execute_command>\nkubectl set image deployment/web-app web-app=web-app:v2.1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I delete all completed jobs?", "completion": "\n<execute_command>\nkubectl delete jobs --field-selector status.successful==1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all nodes with their labels.", "completion": "\n<execute_command>\nkubectl get nodes --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the events related to pod 'analytics-pod' in 'analytics' namespace.", "completion": "\n<execute_command>\nkubectl describe pod analytics-pod -n analytics\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check the rollout status of daemonset 'log-collector'?", "completion": "\n<execute_command>\nkubectl rollout status daemonset/log-collector\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all pods in the cluster sorted by their restart count.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces --sort-by='.status.containerStatuses[0].restartCount'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a service 'my-service' of type 'NodePort' exposing deployment 'my-deployment' on port 80.", "completion": "\n<execute_command>\nkubectl expose deployment my-deployment --type=NodePort --name=my-service --port=80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale StatefulSet 'es-cluster' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale statefulset es-cluster --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the list of images used in all pods?", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{..image}' | tr -s ' ' '\\n' | sort | uniq\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the pod 'temp-pod' without waiting for it to gracefully terminate.", "completion": "\n<execute_command>\nkubectl delete pod temp-pod --grace-period=0 --force\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I view the API resources available in 'apps' API group?", "completion": "\n<execute_command>\nkubectl api-resources --api-group=apps\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get detailed information about persistent volume 'pv0001'.", "completion": "\n<execute_command>\nkubectl describe pv pv0001\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to create a secret from environment variables file 'env.list'?", "completion": "\n<execute_command>\nkubectl create secret generic my-secret --from-env-file=env.list\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all the pods that are in 'CrashLoopBackOff' state.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces | grep CrashLoopBackOff\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the YAML manifest of deployment 'backend' without cluster-specific information.", "completion": "\n<execute_command>\nkubectl get deployment backend -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I set the image pull policy to 'Always' for deployment 'api'?", "completion": "\n<execute_command>\nkubectl patch deployment api -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"api\",\"imagePullPolicy\":\"Always\"}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Port-forward local port 9000 to pod 'database' port 5432.", "completion": "\n<execute_command>\nkubectl port-forward pod/database 9000:5432\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I get the differences between my local files and the cluster?", "completion": "\n<execute_command>\nkubectl diff -f <file-or-directory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of cluster roles.", "completion": "\n<execute_command>\nkubectl get clusterroles\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the service accounts in 'default' namespace?", "completion": "\n<execute_command>\nkubectl get serviceaccounts -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a deployment 'nginx-deployment' with three replicas.", "completion": "\n<execute_command>\nkubectl create deployment nginx-deployment --image=nginx --replicas=3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods with label 'environment=prod' in 'app' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n app -l environment=prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the persistent volume claim 'data-pvc' in 'db' namespace.", "completion": "\n<execute_command>\nkubectl describe pvc data-pvc -n db\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I get the Kubernetes API server's version?", "completion": "\n<execute_command>\nkubectl version --short\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all pods not running in 'Running' phase.", "completion": "\n<execute_command>\nkubectl delete pods --field-selector=status.phase!=Running\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the IP addresses of all services in 'default' namespace.", "completion": "\n<execute_command>\nkubectl get services -n default -o jsonpath='{range .items[*]}{.metadata.name} {.spec.clusterIP}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I set a label 'tier=frontend' on namespace 'frontend-ns'?", "completion": "\n<execute_command>\nkubectl label namespace frontend-ns tier=frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the resource limits of all containers in pods.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name} {.spec.containers[*].resources.limits}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the node on which pod 'web-pod' is running?", "completion": "\n<execute_command>\nkubectl get pod web-pod -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Restart the deployment 'cache' to pick up changes.", "completion": "\n<execute_command>\nkubectl rollout restart deployment/cache\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I scale a deployment 'api-server' by 2 more replicas?", "completion": "\n<execute_command>\nkubectl scale deployment api-server --replicas=$(($(kubectl get deployment api-server -o jsonpath='{.spec.replicas}')+2))\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a pod 'busybox' that runs 'sleep 3600' in 'tools' namespace.", "completion": "\n<execute_command>\nkubectl run busybox --image=busybox --restart=Never --namespace=tools -- /bin/sh -c 'sleep 3600'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to copy a file 'localfile.txt' to pod 'mypod' at '/tmp'?", "completion": "\n<execute_command>\nkubectl cp localfile.txt mypod:/tmp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I get the list of all API versions supported by the cluster?", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all pods with label 'test=true'.", "completion": "\n<execute_command>\nkubectl delete pods -l test=true\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the service endpoints in 'development' namespace?", "completion": "\n<execute_command>\nkubectl get endpoints -n development\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the last 100 lines of logs from pod 'myapp'.", "completion": "\n<execute_command>\nkubectl logs myapp --tail=100\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I create a role 'pod-reader' that allows reading pods?", "completion": "\n<execute_command>\nkubectl create role pod-reader --verb=get,list,watch --resource=pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Bind the role 'pod-reader' to user 'jane' in namespace 'qa'.", "completion": "\n<execute_command>\nkubectl create rolebinding pod-reader-binding --role=pod-reader --user=jane -n qa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to remove a label 'env=dev' from nodes?", "completion": "\n<execute_command>\nkubectl label nodes --all env-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all namespaces along with their labels.", "completion": "\n<execute_command>\nkubectl get namespaces --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain the field 'spec.template.spec.containers' in a deployment.", "completion": "\n<execute_command>\nkubectl explain deployment.spec.template.spec.containers\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run 'date' command in pod 'utility-pod' without opening a shell.", "completion": "\n<execute_command>\nkubectl exec utility-pod -- date\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of pods and sort them by their memory usage.", "completion": "\n<execute_command>\nkubectl top pods --sort-by=memory\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I list all the events in a specific namespace 'production'?", "completion": "\n<execute_command>\nkubectl get events -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the 'metrics-server' deployment in 'kube-system' namespace.", "completion": "\n<execute_command>\nkubectl describe deployment metrics-server -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the image of the container 'nginx' from pod 'web-pod'.", "completion": "\n<execute_command>\nkubectl get pod web-pod -o jsonpath='{.spec.containers[?(@.name==\"nginx\")].image}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I drain the node 'node-5' while ensuring daemonsets keep running?", "completion": "\n<execute_command>\nkubectl drain node-5 --ignore-daemonsets\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a service of type 'LoadBalancer' for deployment 'app-deploy' on port 8080.", "completion": "\n<execute_command>\nkubectl expose deployment app-deploy --type=LoadBalancer --port=8080\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the kubectl configuration context names?", "completion": "\n<execute_command>\nkubectl config get-contexts -o name\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get deployments that are paused.", "completion": "\n<execute_command>\nkubectl get deployments --all-namespaces -o jsonpath='{range .items[?(@.spec.paused==true)]}{.metadata.name} -n {.metadata.namespace}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I label all nodes with 'zone=us-east1' in one command?", "completion": "\n<execute_command>\nkubectl label nodes --all zone=us-east1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all resources in the 'test' namespace.", "completion": "\n<execute_command>\nkubectl delete all --all -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the CPU and memory requests for all containers.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name}{\"\\t\"}{range .spec.containers[*]}{.name}{\"\\t\"}{.resources.requests}{\"\\n\"}{end}{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a pod disruption budget named 'backend-pdb' for pods with label 'app=backend', ensuring at least half are available.", "completion": "\n<execute_command>\nkubectl create pdb backend-pdb --selector=app=backend --min-available=50%\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all the resources of kind 'Ingress' across all namespaces.", "completion": "\n<execute_command>\nkubectl get ingress --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I delete all pods that are completed?", "completion": "\n<execute_command>\nkubectl delete pods --field-selector=status.phase=Succeeded\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all services without selectors.", "completion": "\n<execute_command>\nkubectl get services --all-namespaces -o jsonpath='{range .items[?(!@.spec.selector)]}{.metadata.name} -n {.metadata.namespace}\\n'{end}\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a Kubernetes secret named 'tls-secret' with TLS certificate and key files.", "completion": "\n<execute_command>\nkubectl create secret tls tls-secret --cert=path/to/tls.crt --key=path/to/tls.key\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the current resource allocations for node 'worker-node-2'.", "completion": "\n<execute_command>\nkubectl describe node worker-node-2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the logs of a pod 'audit-pod' since 5 minutes ago.", "completion": "\n<execute_command>\nkubectl logs audit-pod --since=5m\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all services of type 'LoadBalancer' in 'production' namespace.", "completion": "\n<execute_command>\nkubectl delete svc -n production --field-selector=spec.type=LoadBalancer\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to watch changes to config map 'app-config' in 'default' namespace?", "completion": "\n<execute_command>\nkubectl get configmap app-config -n default -w\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the node metrics including CPU and memory usage.", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check which operating system the nodes are running?", "completion": "\n<execute_command>\nkubectl get nodes -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the IP addresses of all pods in 'frontend' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n frontend -o jsonpath='{range .items[*]}{.metadata.name} {.status.podIP}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain the 'spec.strategy.type' field in a deployment.", "completion": "\n<execute_command>\nkubectl explain deployment.spec.strategy.type\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I get the status of HorizontalPodAutoscaler 'webapp-hpa'?", "completion": "\n<execute_command>\nkubectl get hpa webapp-hpa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show all pods that are not scheduled yet (Pending state).", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces --field-selector=status.phase=Pending\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the number of restarts for all containers in pod 'app-pod'?", "completion": "\n<execute_command>\nkubectl get pod app-pod -o jsonpath='{.status.containerStatuses[*].restartCount}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the status of kube-system namespace.", "completion": "\n<execute_command>\nkubectl get namespace kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check if a specific resource quota is enforced in a namespace?", "completion": "\n<execute_command>\nkubectl get resourcequota -n <namespace>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I delete a statefulset but keep its persistent volumes?", "completion": "\n<execute_command>\nkubectl delete statefulset <name> but do not delete the PVCs; ensure 'persistentVolumeReclaimPolicy' is set to 'Retain' on the PVs.\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all priority classes in the cluster.", "completion": "\n<execute_command>\nkubectl get priorityclasses\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all custom resource definitions (CRDs) in YAML format.", "completion": "\n<execute_command>\nkubectl get crd -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I list the storage capacity in the cluster?", "completion": "\n<execute_command>\nkubectl get storageclass\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with their age.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the status of all ReplicaSets in 'backend' namespace.", "completion": "\n<execute_command>\nkubectl get replicaset -n backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I create a service account 'monitor' in namespace 'monitoring'?", "completion": "\n<execute_command>\nkubectl create serviceaccount monitor -n monitoring\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the pod security policies in the cluster.", "completion": "\n<execute_command>\nkubectl get psp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I list all network policies in namespace 'dev'?", "completion": "\n<execute_command>\nkubectl get networkpolicy -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all pods in a namespace except those with label 'app=web'.", "completion": "\n<execute_command>\nkubectl delete pods -n <namespace> -l 'app!=web'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the resource definitions of all pods in 'staging' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n staging -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get logs of pod 'webapp' and follow real-time updates.", "completion": "\n<execute_command>\nkubectl logs webapp -f\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to delete deployments with label 'obsolete=true'?", "completion": "\n<execute_command>\nkubectl delete deployments -l obsolete=true\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the ingress controller in 'nginx' namespace.", "completion": "\n<execute_command>\nkubectl describe deployment nginx-ingress-controller -n nginx\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check if a node is schedulable?", "completion": "\n<execute_command>\nkubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name} {.spec.unschedulable}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the resource utilization of pods in 'qa' namespace.", "completion": "\n<execute_command>\nkubectl top pods -n qa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with readiness probe failures.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name}:{.status.conditions[?(@.type==\"Ready\")].status}\\n{end}' | grep False\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate node 'node-1' with 'backup=yes'.", "completion": "\n<execute_command>\nkubectl annotate node node-1 backup=yes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of pods along with their service accounts.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name} {.spec.serviceAccountName}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the ReplicaSet controlling pod 'app-pod'.", "completion": "\n<execute_command>\nkubectl describe pod app-pod; look under 'Controlled By' section to find the ReplicaSet\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with their restart counts.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name} {.status.containerStatuses[*].restartCount}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the number of available replicas for deployment 'web-deploy'.", "completion": "\n<execute_command>\nkubectl get deployment web-deploy -o jsonpath='{.status.availableReplicas}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I check the imagePullSecrets configured for a service account?", "completion": "\n<execute_command>\nkubectl get serviceaccount <name> -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a ConfigMap 'app-config' from literal key-value pairs.", "completion": "\n<execute_command>\nkubectl create configmap app-config --from-literal=key1=value1 --from-literal=key2=value2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the total number of running pods in the cluster?", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces | grep Running | wc -l\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I list all roles and rolebindings in 'default' namespace?", "completion": "\n<execute_command>\nkubectl get roles,rolebindings -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all endpoints in the 'services' namespace.", "completion": "\n<execute_command>\nkubectl get endpoints -n services\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create Job 'one-time-job' from image 'busybox' that runs 'echo Hello World'.", "completion": "\n<execute_command>\nkubectl create job one-time-job --image=busybox -- echo Hello World\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the cluster's DNS service details.", "completion": "\n<execute_command>\nkubectl get svc kube-dns -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I get the IP addresses of all nodes?", "completion": "\n<execute_command>\nkubectl get nodes -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the status of the certificate signing requests (CSRs).", "completion": "\n<execute_command>\nkubectl get csr\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Approve a certificate signing request named 'csr-12345'.", "completion": "\n<execute_command>\nkubectl certificate approve csr-12345\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the pod CIDR ranges for nodes?", "completion": "\n<execute_command>\nkubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name}: {.spec.podCIDR}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all services with type 'ExternalName'.", "completion": "\n<execute_command>\nkubectl get services --all-namespaces --field-selector=spec.type=ExternalName\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I annotate a service with 'external-dns.alpha.kubernetes.io/hostname=myservice.example.com'?", "completion": "\n<execute_command>\nkubectl annotate service myservice external-dns.alpha.kubernetes.io/hostname=myservice.example.com\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the supported API versions in the cluster.", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How do I list all pods using hostPID?", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o jsonpath='{range .items[?(@.spec.hostPID==true)]}{.metadata.name} -n {.metadata.namespace}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete a job and its completed pods.", "completion": "\n<execute_command>\nkubectl delete job <job-name> --cascade=true\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the API resources and their short names.", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How can I label all pods in deployment 'api-deploy' with 'version=v1'?", "completion": "\n<execute_command>\nkubectl label pods -l app=api-deploy version=v1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the image of container 'busybox' in deployment 'busybox-deploy'.", "completion": "\n<execute_command>\nkubectl set image deployment/busybox-deploy busybox=busybox:latest\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, How to get the number of desired pods in a ReplicaSet?", "completion": "\n<execute_command>\nkubectl get rs <replicaset-name> -o jsonpath='{.spec.replicas}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a namespace 'test-env' with the label 'team=devops'.", "completion": "\n<execute_command>\nkubectl create namespace test-env && kubectl label namespace test-env team=devops\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please make the 'backend' pod run twice.", "completion": "\n<execute_command>\nkubectl scale deployment backend --replicas=2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please expand storage of 'data-volume' to 50Gi.", "completion": "\n<execute_command>\nkubectl patch pvc data-volume -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"50Gi\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'api-service' deployment replicas to 5.", "completion": "\n<execute_command>\nkubectl scale deployment api-service --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please make 'database' highly available.", "completion": "\n<execute_command>\nkubectl scale statefulset database --replicas=3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please assign more CPU to 'compute-pod'.", "completion": "\n<execute_command>\nkubectl set resources deployment compute-pod --limits=cpu=<desired_cpu>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'batch-job' parallelism to 4.", "completion": "\n<execute_command>\nkubectl patch job batch-job -p '{\"spec\":{\"parallelism\":4}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Add more memory to 'analytics-service'.", "completion": "\n<execute_command>\nkubectl set resources deployment analytics-service --limits=memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, I want to scale 'search-service' to 10 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment search-service --replicas=10\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please provide more resources to 'ai-model' pod.", "completion": "\n<execute_command>\nkubectl set resources deployment ai-model --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'notification-service' replicas to 5.", "completion": "\n<execute_command>\nkubectl scale deployment notification-service --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase the storage of 'shared-volume' by 10Gi.", "completion": "\n<execute_command>\nkubectl patch pvc shared-volume -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"<new_size>\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Expand 'metrics-pvc' to 100Gi.", "completion": "\n<execute_command>\nkubectl patch pvc metrics-pvc -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"100Gi\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale down 'old-application' to zero replicas.", "completion": "\n<execute_command>\nkubectl scale deployment old-application --replicas=0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'processing-service' replicas to 8.", "completion": "\n<execute_command>\nkubectl scale deployment processing-service --replicas=8\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, I need to increase 'db-pvc' storage by 20Gi.", "completion": "\n<execute_command>\nkubectl patch pvc db-pvc -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"<new_size>\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Ensure 'web-app' has at least 5 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment web-app --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Reduce the parallelism of 'cleanup-job' to 1.", "completion": "\n<execute_command>\nkubectl patch job cleanup-job -p '{\"spec\":{\"parallelism\":1}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please allocate more CPU to 'compute-intensive'.", "completion": "\n<execute_command>\nkubectl set resources deployment compute-intensive --limits=cpu=<desired_cpu>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale StatefulSet 'mongo' to 4 replicas.", "completion": "\n<execute_command>\nkubectl scale statefulset mongo --replicas=4\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase storage for PVC 'backup-data' to 500Gi.", "completion": "\n<execute_command>\nkubectl patch pvc backup-data -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"500Gi\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'frontend-service' replicas to 12.", "completion": "\n<execute_command>\nkubectl scale deployment frontend-service --replicas=12\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase the resources allocated to 'database' pods.", "completion": "\n<execute_command>\nkubectl set resources statefulset database --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale 'log-collector' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment log-collector --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Reduce 'old-service' pods to zero.", "completion": "\n<execute_command>\nkubectl scale deployment old-service --replicas=0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'analytics-job' parallelism to 3.", "completion": "\n<execute_command>\nkubectl patch job analytics-job -p '{\"spec\":{\"parallelism\":3}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'message-queue' replicas to 7.", "completion": "\n<execute_command>\nkubectl scale deployment message-queue --replicas=7\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please allocate more memory to 'report-generator'.", "completion": "\n<execute_command>\nkubectl set resources deployment report-generator --limits=memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'metrics-server' replicas to 4.", "completion": "\n<execute_command>\nkubectl scale deployment metrics-server --replicas=4\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please increase the resources for 'caching-service' pods.", "completion": "\n<execute_command>\nkubectl set resources deployment caching-service --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale 'file-processing' job to run 5 pods in parallel.", "completion": "\n<execute_command>\nkubectl patch job file-processing -p '{\"spec\":{\"parallelism\":5}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'streaming-app' replicas to 10.", "completion": "\n<execute_command>\nkubectl scale deployment streaming-app --replicas=10\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale StatefulSet 'kafka' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale statefulset kafka --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'backup' PVC size to 200Gi.", "completion": "\n<execute_command>\nkubectl patch pvc backup -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"200Gi\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase compute resources for 'video-renderer' pods.", "completion": "\n<execute_command>\nkubectl set resources deployment video-renderer --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please scale down 'test-service' to one replica.", "completion": "\n<execute_command>\nkubectl scale deployment test-service --replicas=1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'data-processor' replicas to 15.", "completion": "\n<execute_command>\nkubectl scale deployment data-processor --replicas=15\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase storage capacity for 'user-data' PVC by 50Gi.", "completion": "\n<execute_command>\nkubectl patch pvc user-data -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"<new_size>\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'message-broker' replicas to 6.", "completion": "\n<execute_command>\nkubectl scale deployment message-broker --replicas=6\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Double the resources allocated to 'ml-service'.", "completion": "\n<execute_command>\nkubectl set resources deployment ml-service --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'data-export' job parallelism to 8.", "completion": "\n<execute_command>\nkubectl patch job data-export -p '{\"spec\":{\"parallelism\":8}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase 'image-cache' storage by 30Gi.", "completion": "\n<execute_command>\nkubectl patch pvc image-cache -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"<new_size>\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'websocket-service' replicas to 12.", "completion": "\n<execute_command>\nkubectl scale deployment websocket-service --replicas=12\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Add more compute resources to 'number-cruncher' pods.", "completion": "\n<execute_command>\nkubectl set resources deployment number-cruncher --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale down 'test-job' parallelism to zero.", "completion": "\n<execute_command>\nkubectl patch job test-job -p '{\"spec\":{\"parallelism\":0}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase 'logging' deployment replicas to 4.", "completion": "\n<execute_command>\nkubectl scale deployment logging --replicas=4\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set 'authentication-service' replicas to 9.", "completion": "\n<execute_command>\nkubectl scale deployment authentication-service --replicas=9\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase the size of 'media-pvc' to 1Ti.", "completion": "\n<execute_command>\nkubectl patch pvc media-pvc -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"1Ti\"}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Increase the parallelism of 'compression-job' to 5.", "completion": "\n<execute_command>\nkubectl patch job compression-job -p '{\"spec\":{\"parallelism\":5}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please allocate more resources to 'search-engine' pods.", "completion": "\n<execute_command>\nkubectl set resources deployment search-engine --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale 'event-processor' to 20 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment event-processor --replicas=20\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Please increase 'rendering-service' resources for better performance.", "completion": "\n<execute_command>\nkubectl set resources deployment rendering-service --limits=cpu=<desired_cpu>,memory=<desired_memory>\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale down 'deprecated-service' to zero replicas.", "completion": "\n<execute_command>\nkubectl scale deployment deprecated-service --replicas=0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all deployments in all namespaces.", "completion": "\n<execute_command>\nkubectl get deployments --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all statefulsets in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get statefulsets -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all daemonsets across the cluster.", "completion": "\n<execute_command>\nkubectl get daemonsets --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the daemonset named 'log-agent' in namespace 'logging'.", "completion": "\n<execute_command>\nkubectl describe daemonset log-agent -n logging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a namespace called 'monitoring'.", "completion": "\n<execute_command>\nkubectl create namespace monitoring\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set a resource quota named 'compute-quota' in namespace 'dev' limiting pods to 10.", "completion": "\n<execute_command>\nkubectl create quota compute-quota --hard=pods=10 -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the resource quota 'compute-quota' from namespace 'dev'.", "completion": "\n<execute_command>\nkubectl delete quota compute-quota -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all resource quotas in the current namespace.", "completion": "\n<execute_command>\nkubectl get quota\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all roles in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get roles -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all rolebindings in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get rolebindings -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a role named 'pod-reader' with permissions to get, list, and watch pods in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl create role pod-reader --verb=get,list,watch --resource=pods -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the rolebinding 'read-pods' from the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete rolebinding read-pods -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all available API versions in the cluster.", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the external IP of the service 'ingress-nginx' in the 'ingress-nginx' namespace.", "completion": "\n<execute_command>\nkubectl get svc ingress-nginx -n ingress-nginx\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a one-time busybox job interactively and remove it after completion.", "completion": "\n<execute_command>\nkubectl run busybox --image=busybox --rm -it -- /bin/sh\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Copy a file from pod 'app-pod' in namespace 'default' to the local machine.", "completion": "\n<execute_command>\nkubectl cp default/app-pod:/path/to/remote/file ./local-file\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Copy a file from the local machine to pod 'app-pod' in namespace 'default'.", "completion": "\n<execute_command>\nkubectl cp ./local-file default/app-pod:/path/to/remote/file\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Execute an interactive shell inside pod 'app-pod' in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl exec -it app-pod -- /bin/bash\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a secret named 'file-secret' from a file 'secret.txt'.", "completion": "\n<execute_command>\nkubectl create secret generic file-secret --from-file=secret.txt\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update secret 'file-secret' with a new file 'new-secret.txt' using a dry run and apply.", "completion": "\n<execute_command>\nkubectl create secret generic file-secret --from-file=new-secret.txt --dry-run=client -o yaml | kubectl apply -f -\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all persistent volumes in the cluster.", "completion": "\n<execute_command>\nkubectl get pv\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all persistent volume claims in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get pvc -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the persistent volume claim named 'data-pvc' in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete pvc data-pvc -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the persistent volume 'pv-volume1'.", "completion": "\n<execute_command>\nkubectl describe pv pv-volume1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show all node labels in the cluster.", "completion": "\n<execute_command>\nkubectl get nodes --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch service 'web-service' to change its type to NodePort using a JSON merge patch.", "completion": "\n<execute_command>\nkubectl patch service web-service -p '{\"spec\":{\"type\":\"NodePort\"}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Convert the YAML file 'file.yaml' to JSON format using kubectl.", "completion": "\n<execute_command>\nkubectl convert -f file.yaml --output-version v1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a configmap named 'my-config' from literal key-value pairs.", "completion": "\n<execute_command>\nkubectl create configmap my-config --from-literal=key1=value1 --from-literal=key2=value2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Replace the resource defined in 'new-config.yaml'.", "completion": "\n<execute_command>\nkubectl replace -f new-config.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Edit the configmap 'app-config' interactively.", "completion": "\n<execute_command>\nkubectl edit configmap app-config\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display resource usage for pods in the 'kube-system' namespace.", "completion": "\n<execute_command>\nkubectl top pod -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show the rollout status of the daemonset 'node-exporter' in the 'monitoring' namespace.", "completion": "\n<execute_command>\nkubectl rollout status daemonset node-exporter -n monitoring\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Force restart pod 'cache-pod' in the 'default' namespace by deleting it.", "completion": "\n<execute_command>\nkubectl delete pod cache-pod -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate pod 'frontend-pod' with a backup timestamp.", "completion": "\n<execute_command>\nkubectl annotate pod frontend-pod backup='2025-02-04T12:00:00Z'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label deployment 'backend-deployment' with version 'v1.2'.", "completion": "\n<execute_command>\nkubectl label deployment backend-deployment version=v1.2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the 'version' label from service 'api-service'.", "completion": "\n<execute_command>\nkubectl label service api-service version-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a job named 'backup-job' using the YAML configuration in 'backup-job.yaml'.", "completion": "\n<execute_command>\nkubectl create -f backup-job.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Suspend the cronjob 'daily-backup' by setting its suspend flag to true.", "completion": "\n<execute_command>\nkubectl patch cronjob daily-backup -p '{\"spec\": {\"suspend\": true}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Resume the cronjob 'daily-backup' by setting its suspend flag to false.", "completion": "\n<execute_command>\nkubectl patch cronjob daily-backup -p '{\"spec\": {\"suspend\": false}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all cronjobs in the 'backup' namespace.", "completion": "\n<execute_command>\nkubectl get cronjobs -n backup\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the cronjob 'old-backup' from the 'backup' namespace.", "completion": "\n<execute_command>\nkubectl delete cronjob old-backup -n backup\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a cronjob named 'log-cleanup' from the file 'log-cleanup-cronjob.yaml'.", "completion": "\n<execute_command>\nkubectl create -f log-cleanup-cronjob.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the cronjob 'db-backup' in the current namespace.", "completion": "\n<execute_command>\nkubectl describe cronjob db-backup\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all endpoints in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get endpoints -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display detailed resource usage for the pod 'api-pod' in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl top pod api-pod -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all custom resource definitions in the cluster.", "completion": "\n<execute_command>\nkubectl get crds\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the custom resource definition 'myresources.example.com'.", "completion": "\n<execute_command>\nkubectl describe crd myresources.example.com\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View the previous logs of pod 'web-pod' in case of a restart.", "completion": "\n<execute_command>\nkubectl logs web-pod --previous\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Fetch events related to the pod 'api-pod'.", "completion": "\n<execute_command>\nkubectl get events --field-selector involvedObject.name=api-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a network policy defined in 'network-policy.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f network-policy.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the network policy 'deny-all' in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete networkpolicy deny-all -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all network policies in the 'prod' namespace.", "completion": "\n<execute_command>\nkubectl get networkpolicies -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate node 'node-3' with a maintenance window set to '2025-02-05'.", "completion": "\n<execute_command>\nkubectl annotate node node-3 maintenance='2025-02-05'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set a taint on node 'node-4' with key 'key', value 'value', and effect 'NoSchedule'.", "completion": "\n<execute_command>\nkubectl taint node node-4 key=value:NoSchedule\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the taint 'key:NoSchedule' from node 'node-4'.", "completion": "\n<execute_command>\nkubectl taint node node-4 key:NoSchedule-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all validating webhook configurations.", "completion": "\n<execute_command>\nkubectl get validatingwebhookconfigurations\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all mutating webhook configurations.", "completion": "\n<execute_command>\nkubectl get mutatingwebhookconfigurations\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the mutating webhook configuration 'example-mutator'.", "completion": "\n<execute_command>\nkubectl describe mutatingwebhookconfiguration example-mutator\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label the namespace 'dev' with team 'development'.", "completion": "\n<execute_command>\nkubectl label namespace dev team=development\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate the namespace 'prod' with owner 'ops-team'.", "completion": "\n<execute_command>\nkubectl annotate namespace prod owner=ops-team\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export the configuration of deployment 'app' to JSON.", "completion": "\n<execute_command>\nkubectl get deployment app -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export the configuration of service 'my-service' to JSON.", "completion": "\n<execute_command>\nkubectl get service my-service -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all secrets across all namespaces.", "completion": "\n<execute_command>\nkubectl get secrets --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the secret 'tls-secret' in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl describe secret tls-secret -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a TLS secret named 'tls-secret' using certificate and key files.", "completion": "\n<execute_command>\nkubectl create secret tls tls-secret --cert=cert.crt --key=cert.key\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the image of statefulset 'mongo' to 'mongo:4.2'.", "completion": "\n<execute_command>\nkubectl set image statefulset/mongo mongo=mongo:4.2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Edit the daemonset 'fluentd' in the 'logging' namespace.", "completion": "\n<execute_command>\nkubectl edit daemonset fluentd -n logging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display the rollout status for statefulset 'redis'.", "completion": "\n<execute_command>\nkubectl rollout status statefulset redis\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate statefulset 'redis' with a last-updated timestamp.", "completion": "\n<execute_command>\nkubectl annotate statefulset redis last-updated='2025-02-04T12:00:00Z'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all jobs in the 'batch' namespace.", "completion": "\n<execute_command>\nkubectl get jobs -n batch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the job 'data-processing' in the 'batch' namespace.", "completion": "\n<execute_command>\nkubectl describe job data-processing -n batch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a pod using the busybox image with no restart policy for a one-off task.", "completion": "\n<execute_command>\nkubectl run temp --image=alpine --restart=Never --command -- sleep 3600\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the pod named 'temp' from the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete pod temp -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the environment variable 'ENV=production' on deployment 'webapp'.", "completion": "\n<execute_command>\nkubectl set env deployment/webapp ENV=production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Unset the environment variable 'DEBUG' on deployment 'webapp'.", "completion": "\n<execute_command>\nkubectl set env deployment/webapp DEBUG-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Execute a command in one of the pods labeled 'app=worker' interactively.", "completion": "\n<execute_command>\nkubectl exec -it $(kubectl get pods -l app=worker -o jsonpath='{.items[0].metadata.name}') -- /bin/sh\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Port-forward the service 'my-service' so that local port 8080 maps to port 80 on the service.", "completion": "\n<execute_command>\nkubectl port-forward service/my-service 8080:80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Expose the pod 'solo-pod' on port 9090.", "completion": "\n<execute_command>\nkubectl expose pod solo-pod --port=9090\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale the deployment 'scalable-app' to 10 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment scalable-app --replicas=10\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update resource limits for deployment 'resource-app' using a patch.", "completion": "\n<execute_command>\nkubectl patch deployment resource-app -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"resource-app\",\"resources\":{\"limits\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}}}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a Horizontal Pod Autoscaler for deployment 'webapp' with min 2, max 10 replicas and target CPU utilization of 80%.", "completion": "\n<execute_command>\nkubectl autoscale deployment webapp --min=2 --max=10 --cpu-percent=80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the status of the Horizontal Pod Autoscaler for 'webapp'.", "completion": "\n<execute_command>\nkubectl get hpa webapp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the Horizontal Pod Autoscaler for 'webapp'.", "completion": "\n<execute_command>\nkubectl delete hpa webapp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a Pod Disruption Budget from the configuration in 'pdb.yaml'.", "completion": "\n<execute_command>\nkubectl create -f pdb.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all Pod Disruption Budgets in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get pdb -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the Pod Disruption Budget named 'app-pdb' from the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete pdb app-pdb -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate deployment 'stateless-app' with 'team=backend'.", "completion": "\n<execute_command>\nkubectl annotate deployment stateless-app team=backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all deployments with the label 'tier=backend'.", "completion": "\n<execute_command>\nkubectl get deployments -l tier=backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a privileged pod using the busybox image that stays running.", "completion": "\n<execute_command>\nkubectl run privileged --image=busybox --privileged --restart=Never -- /bin/sh -c 'while true; do sleep 30; done;'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Fetch logs for the container named 'sidecar' in the pod 'multi-container-pod'.", "completion": "\n<execute_command>\nkubectl logs multi-container-pod -c sidecar\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Stream logs for the container 'main' in the pod 'multi-container-pod'.", "completion": "\n<execute_command>\nkubectl logs multi-container-pod -c main -f\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Expose the deployment 'webapp' as a LoadBalancer service on port 80.", "completion": "\n<execute_command>\nkubectl expose deployment webapp --type=LoadBalancer --port=80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the service 'old-service' from the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete svc old-service -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all namespaces in the cluster.", "completion": "\n<execute_command>\nkubectl get namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the namespace 'default'.", "completion": "\n<execute_command>\nkubectl describe namespace default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export the configuration of all pods in the 'kube-system' namespace to a JSON file named 'pods.json'.", "completion": "\n<execute_command>\nkubectl get pods -n kube-system -o json > pods.json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display resource usage for pods in the 'production' namespace.", "completion": "\n<execute_command>\nkubectl top pods -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve events for the 'monitoring' namespace.", "completion": "\n<execute_command>\nkubectl get events -n monitoring\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Convert the JSON configuration file 'config.json' to a Kubernetes YAML manifest.", "completion": "\n<execute_command>\nkubectl convert -f config.json -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in all namespaces.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get details of the pod named 'webserver'.", "completion": "\n<execute_command>\nkubectl describe pod webserver\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the service 'backend-service'.", "completion": "\n<execute_command>\nkubectl delete service backend-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale the deployment 'frontend' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale deployment frontend --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show nodes in the cluster.", "completion": "\n<execute_command>\nkubectl get nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a namespace called 'staging'.", "completion": "\n<execute_command>\nkubectl create namespace staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get logs of the pod 'database-pod'.", "completion": "\n<execute_command>\nkubectl logs database-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Expose deployment 'myapp' on port 8080.", "completion": "\n<execute_command>\nkubectl expose deployment myapp --port=8080\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply the configuration in 'config.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f config.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete namespace 'test-environment'.", "completion": "\n<execute_command>\nkubectl delete namespace test-environment\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events for the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get events -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the service 'web-service'.", "completion": "\n<execute_command>\nkubectl describe service web-service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the image of deployment 'api' to 'api:v2'.", "completion": "\n<execute_command>\nkubectl set image deployment/api api=api:v2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the current context.", "completion": "\n<execute_command>\nkubectl config current-context\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the context to 'production'.", "completion": "\n<execute_command>\nkubectl config use-context production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get resource usage of nodes.", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain the 'deployment' resource.", "completion": "\n<execute_command>\nkubectl explain deployment\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all services in the 'dev' namespace.", "completion": "\n<execute_command>\nkubectl get services -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a pod with image 'nginx' named 'nginx-test'.", "completion": "\n<execute_command>\nkubectl run nginx-test --image=nginx\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Edit the deployment 'frontend'.", "completion": "\n<execute_command>\nkubectl edit deployment frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Cordon the node 'node-1'.", "completion": "\n<execute_command>\nkubectl cordon node-1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Drain the node 'node-2'.", "completion": "\n<execute_command>\nkubectl drain node-2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Uncordon the node 'node-1'.", "completion": "\n<execute_command>\nkubectl uncordon node-1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete pod 'temp-pod' in namespace 'test'.", "completion": "\n<execute_command>\nkubectl delete pod temp-pod -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List configmaps in all namespaces.", "completion": "\n<execute_command>\nkubectl get configmaps --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the secret 'db-secret' in namespace 'prod'.", "completion": "\n<execute_command>\nkubectl get secret db-secret -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe ingress 'my-ingress'.", "completion": "\n<execute_command>\nkubectl describe ingress my-ingress\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the status of deployment 'backend'.", "completion": "\n<execute_command>\nkubectl rollout status deployment backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Restart deployment 'cache'.", "completion": "\n<execute_command>\nkubectl rollout restart deployment cache\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View the history of rollout for deployment 'webapp'.", "completion": "\n<execute_command>\nkubectl rollout history deployment webapp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a service account named 'deploy' in 'staging' namespace.", "completion": "\n<execute_command>\nkubectl create serviceaccount deploy -n staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Attach to the pod 'debug-pod'.", "completion": "\n<execute_command>\nkubectl attach debug-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all resources in namespace 'production'.", "completion": "\n<execute_command>\nkubectl get all -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Port-forward pod 'my-pod' port 8080 to local port 8080.", "completion": "\n<execute_command>\nkubectl port-forward pod/my-pod 8080:8080\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale statefulset 'mysql' to 3 replicas.", "completion": "\n<execute_command>\nkubectl scale statefulset mysql --replicas=3\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch deployment 'api' with 'patch.yaml'.", "completion": "\n<execute_command>\nkubectl patch deployment api --patch-file=patch.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all pods with label 'app=test'.", "completion": "\n<execute_command>\nkubectl delete pods -l app=test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pod IP addresses in 'default' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n default -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain the 'service' resource.", "completion": "\n<execute_command>\nkubectl explain service\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply all YAML files in 'manifests' directory.", "completion": "\n<execute_command>\nkubectl apply -f manifests/\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the cluster version information.", "completion": "\n<execute_command>\nkubectl version\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a deployment named 'redis' with image 'redis:6.0'.", "completion": "\n<execute_command>\nkubectl create deployment redis --image=redis:6.0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe node 'worker-node-1'.", "completion": "\n<execute_command>\nkubectl describe node worker-node-1\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events sorted by timestamp.", "completion": "\n<execute_command>\nkubectl get events --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete job 'batch-job'.", "completion": "\n<execute_command>\nkubectl delete job batch-job\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create configmap 'app-config' from file 'config.properties'.", "completion": "\n<execute_command>\nkubectl create configmap app-config --from-file=config.properties\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Explain 'persistentvolumeclaim'.", "completion": "\n<execute_command>\nkubectl explain persistentvolumeclaim\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get services with label 'tier=frontend'.", "completion": "\n<execute_command>\nkubectl get services -l tier=frontend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all pods in 'development' namespace.", "completion": "\n<execute_command>\nkubectl delete pods --all -n development\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the logs of pod 'app-pod' since 1 hour ago.", "completion": "\n<execute_command>\nkubectl logs app-pod --since=1h\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pod 'db-pod' logs and follow.", "completion": "\n<execute_command>\nkubectl logs db-pod -f\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get cluster info.", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show me the cluster details.", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the Kubernetes version.", "completion": "\n<execute_command>\nkubectl version\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all nodes in the cluster.", "completion": "\n<execute_command>\nkubectl get nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Check the status of cluster components.", "completion": "\n<execute_command>\nkubectl get componentstatuses\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the cluster.", "completion": "\n<execute_command>\nkubectl cluster-info dump\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get cluster info.", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get API resources.", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all services with type ClusterIP in namespace 'dev'.", "completion": "\n<execute_command>\nkubectl get svc -n dev --field-selector spec.type=ClusterIP\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get detailed information of ingress 'app-ingress' in namespace 'prod'.", "completion": "\n<execute_command>\nkubectl describe ingress app-ingress -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Restart pod 'frontend-pod' by deleting it to force a new instance in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl delete pod frontend-pod -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show rollout status for statefulset 'zookeeper'.", "completion": "\n<execute_command>\nkubectl rollout status statefulset zookeeper\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display endpoints for service 'backend-svc' in namespace 'prod'.", "completion": "\n<execute_command>\nkubectl get endpoints backend-svc -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with label app=api in the 'staging' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n staging -l app=api\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View detailed information of the replication controller 'old-rc'.", "completion": "\n<execute_command>\nkubectl describe rc old-rc\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a replication controller using the configuration file 'rc.yaml'.", "completion": "\n<execute_command>\nkubectl create -f rc.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the replication controller 'old-rc'.", "completion": "\n<execute_command>\nkubectl delete rc old-rc\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the image of replication controller 'rc-example' to 'nginx:1.19'.", "completion": "\n<execute_command>\nkubectl set image rc/rc-example nginx=nginx:1.19\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show all pods in the 'staging' namespace using wide output.", "completion": "\n<execute_command>\nkubectl get pods -n staging -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Stream logs from all containers in pod 'multi-pod'.", "completion": "\n<execute_command>\nkubectl logs multi-pod --all-containers=true -f\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show secrets in the 'kube-system' namespace in a table format.", "completion": "\n<execute_command>\nkubectl get secrets -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all storage classes available in the cluster.", "completion": "\n<execute_command>\nkubectl get storageclasses\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the storage class 'standard'.", "completion": "\n<execute_command>\nkubectl describe storageclass standard\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a persistent volume claim using the file 'pvc.yaml'.", "completion": "\n<execute_command>\nkubectl create -f pvc.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Replace the persistent volume claim using the configuration in 'pvc-new.yaml'.", "completion": "\n<execute_command>\nkubectl replace -f pvc-new.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate the persistent volume claim 'data-pvc' with a retention policy of 30 days.", "completion": "\n<execute_command>\nkubectl annotate pvc data-pvc retention=30d\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label all pods in the 'test' namespace with the label environment=test.", "completion": "\n<execute_command>\nkubectl label pods --all environment=test -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the 'environment' label from all pods in the 'test' namespace.", "completion": "\n<execute_command>\nkubectl label pods --all environment- -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale the replication controller 'rc-example' to 5 replicas.", "completion": "\n<execute_command>\nkubectl scale rc rc-example --replicas=5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the resource version of deployment 'app-deploy'.", "completion": "\n<execute_command>\nkubectl get deployment app-deploy -o=jsonpath='{.metadata.resourceVersion}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display only the names of pods in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n default -o custom-columns=NAME:.metadata.name\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List nodes with custom columns showing name and ready status.", "completion": "\n<execute_command>\nkubectl get nodes -o custom-columns=NAME:.metadata.name,READY:.status.conditions[?(@.type==\"Ready\")].status\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the last 100 lines of logs from kube-apiserver pods in the 'kube-system' namespace.", "completion": "\n<execute_command>\nkubectl logs -n kube-system -l component=kube-apiserver --tail=100\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the kube-scheduler pods in the 'kube-system' namespace.", "completion": "\n<execute_command>\nkubectl describe pod -n kube-system -l component=kube-scheduler\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the last 100 lines of logs from kube-controller-manager pods in the 'kube-system' namespace.", "completion": "\n<execute_command>\nkubectl logs -n kube-system -l component=kube-controller-manager --tail=100\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List master nodes using the node-role.kubernetes.io/master label.", "completion": "\n<execute_command>\nkubectl get nodes -l node-role.kubernetes.io/master\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List worker nodes by excluding the master label.", "completion": "\n<execute_command>\nkubectl get nodes -l '!node-role.kubernetes.io/master'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show labels for the namespace 'staging'.", "completion": "\n<execute_command>\nkubectl get namespace staging --show-labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Edit the namespace 'test'.", "completion": "\n<execute_command>\nkubectl edit namespace test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch the namespace 'dev' to add a label owner=dev-team.", "completion": "\n<execute_command>\nkubectl patch namespace dev -p '{\"metadata\":{\"labels\":{\"owner\":\"dev-team\"}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the full JSON schema for the pod resource.", "completion": "\n<execute_command>\nkubectl explain pod --recursive\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve the full JSON schema for the service resource.", "completion": "\n<execute_command>\nkubectl explain service --recursive\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all installed kubectl plugins.", "completion": "\n<execute_command>\nkubectl plugin list\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a multi-document YAML file 'all-resources.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f all-resources.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete multiple resources defined in the file 'delete-all.yaml'.", "completion": "\n<execute_command>\nkubectl delete -f delete-all.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display a summary of cluster resource usage using 'kubectl top nodes'.", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display a summary of pod resource usage using 'kubectl top pods'.", "completion": "\n<execute_command>\nkubectl top pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Roll back the daemonset 'log-agent' to its previous revision.", "completion": "\n<execute_command>\nkubectl rollout undo daemonset log-agent\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Roll back the statefulset 'db' to revision 2.", "completion": "\n<execute_command>\nkubectl rollout undo statefulset db --to-revision=2\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all services with custom columns for name, type, and cluster IP.", "completion": "\n<execute_command>\nkubectl get svc -o custom-columns=NAME:.metadata.name,TYPE:.spec.type,CLUSTER-IP:.spec.clusterIP\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all persistent volumes with their capacity.", "completion": "\n<execute_command>\nkubectl get pv -o custom-columns=NAME:.metadata.name,CAPACITY:.spec.capacity.storage\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the image of container 'app-container' in pod 'app-pod' to 'myimage:latest'.", "completion": "\n<execute_command>\nkubectl set image pod/app-pod app-container=myimage:latest\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Debug pod 'debug-pod' by launching an ephemeral container with the busybox image.", "completion": "\n<execute_command>\nkubectl debug pod/debug-pod --image=busybox --target=debug-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Debug node 'node-1' by running an ephemeral container with the busybox image.", "completion": "\n<execute_command>\nkubectl debug node/node-1 -it --image=busybox\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a certificate signing request using the configuration in 'csr.yaml'.", "completion": "\n<execute_command>\nkubectl create -f csr.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Approve the certificate signing request 'my-csr'.", "completion": "\n<execute_command>\nkubectl certificate approve my-csr\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Deny the certificate signing request 'old-csr'.", "completion": "\n<execute_command>\nkubectl certificate deny old-csr\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all certificate signing requests in the cluster.", "completion": "\n<execute_command>\nkubectl get csr\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Filter kube-apiserver logs for audit entries.", "completion": "\n<execute_command>\nkubectl logs -n kube-system -l component=kube-apiserver | grep audit\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display the configuration of the kube-proxy ConfigMap in the 'kube-system' namespace.", "completion": "\n<execute_command>\nkubectl get configmap kube-proxy -n kube-system -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply changes to the kube-proxy configuration from the file 'kube-proxy.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f kube-proxy.yaml -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all endpoints with detailed addresses and ports.", "completion": "\n<execute_command>\nkubectl get endpoints -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for changes in pods in the 'default' namespace.", "completion": "\n<execute_command>\nkubectl get pods -n default --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for changes in the node list.", "completion": "\n<execute_command>\nkubectl get nodes --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new namespace 'integration-test' and label it with env=testing.", "completion": "\n<execute_command>\nkubectl create namespace integration-test && kubectl label namespace integration-test env=testing\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the namespace 'integration-test'.", "completion": "\n<execute_command>\nkubectl delete namespace integration-test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the default namespace of the current context to 'default'.", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Unset the default namespace for the current context.", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply updates to deployment 'api-deploy' using server-side apply from 'api.yaml'.", "completion": "\n<execute_command>\nkubectl apply --server-side -f api.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Perform a dry-run server-side apply on deployment 'api-deploy' from 'api.yaml'.", "completion": "\n<execute_command>\nkubectl apply --server-side --dry-run=server -f api.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Wait for the rollout of deployment 'worker-deploy' to complete.", "completion": "\n<execute_command>\nkubectl rollout status deployment worker-deploy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show the rollout history for replication controller 'rc-old'.", "completion": "\n<execute_command>\nkubectl rollout history rc rc-old\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display the rollout history for statefulset 'cache'.", "completion": "\n<execute_command>\nkubectl rollout history statefulset cache\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the concurrency policy of cronjob 'cleanup' to Forbid new runs.", "completion": "\n<execute_command>\nkubectl patch cronjob cleanup -p '{\"spec\":{\"concurrencyPolicy\": \"Forbid\"}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Suspend the cronjob 'cleanup'.", "completion": "\n<execute_command>\nkubectl patch cronjob cleanup -p '{\"spec\": {\"suspend\": true}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Resume the cronjob 'cleanup'.", "completion": "\n<execute_command>\nkubectl patch cronjob cleanup -p '{\"spec\": {\"suspend\": false}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all lease objects in the 'kube-node-lease' namespace.", "completion": "\n<execute_command>\nkubectl get lease -n kube-node-lease\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the lease 'node-lease' in the 'kube-node-lease' namespace.", "completion": "\n<execute_command>\nkubectl describe lease node-lease -n kube-node-lease\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Fetch logs from the init container named 'init-container' in pod 'init-pod'.", "completion": "\n<execute_command>\nkubectl logs init-pod -c init-container\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Execute an interactive shell in the init container of pod 'init-pod'.", "completion": "\n<execute_command>\nkubectl exec -it init-pod -c init-container -- /bin/sh\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all jobs with the label batch=true.", "completion": "\n<execute_command>\nkubectl get jobs -l batch=true\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the job 'cleanup-job' in the 'batch' namespace.", "completion": "\n<execute_command>\nkubectl delete job cleanup-job -n batch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with custom columns showing name and restart count.", "completion": "\n<execute_command>\nkubectl get pods -o custom-columns=NAME:.metadata.name,RESTARTS:.status.containerStatuses[*].restartCount\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch changes for the replication controller 'rc-watch'.", "completion": "\n<execute_command>\nkubectl get rc rc-watch --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all non-namespaced API resources.", "completion": "\n<execute_command>\nkubectl api-resources --namespaced=false\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View the kubeconfig details for the current context.", "completion": "\n<execute_command>\nkubectl config view --minify\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Add a new cluster 'new-cluster' to your kubeconfig with an insecure connection.", "completion": "\n<execute_command>\nkubectl config set-cluster new-cluster --server=https://new.cluster:6443 --insecure-skip-tls-verify=true\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Add a new user 'new-user' to your kubeconfig with basic credentials.", "completion": "\n<execute_command>\nkubectl config set-credentials new-user --username=new-user --password=pass123\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new context 'new-context' using cluster 'new-cluster' and user 'new-user'.", "completion": "\n<execute_command>\nkubectl config set-context new-context --cluster=new-cluster --user=new-user\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Switch the current context to 'new-context'.", "completion": "\n<execute_command>\nkubectl config use-context new-context\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all contexts in the kubeconfig.", "completion": "\n<execute_command>\nkubectl config get-contexts\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display the entire kubeconfig file in raw YAML format.", "completion": "\n<execute_command>\nkubectl config view --raw\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update deployment 'backend' to set its container 'backend' image pull policy to Always.", "completion": "\n<execute_command>\nkubectl patch deployment backend -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"backend\",\"imagePullPolicy\":\"Always\"}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve logs from a previously terminated container in pod 'failure-pod'.", "completion": "\n<execute_command>\nkubectl logs failure-pod --previous\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a pod named 'hello' using the busybox image that prints 'Hello, Kubernetes' and sleeps.", "completion": "\n<execute_command>\nkubectl run hello --image=busybox --restart=Never -- /bin/sh -c 'echo Hello, Kubernetes; sleep 3600'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the pod 'hello' after testing.", "completion": "\n<execute_command>\nkubectl delete pod hello\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a configmap named 'env-config' from the environment file 'app.env'.", "completion": "\n<execute_command>\nkubectl create configmap env-config --from-env-file=app.env\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Mount the configmap 'env-config' into deployment 'app-deploy' at the path /etc/config.", "completion": "\n<execute_command>\nkubectl set volume deployment/app-deploy --add --name=config-volume --configmap-name=env-config --mount-path=/etc/config\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the configmap 'env-config' from the file 'app.env' using a dry-run and apply.", "completion": "\n<execute_command>\nkubectl create configmap env-config --from-env-file=app.env --dry-run=client -o yaml | kubectl apply -f -\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Force delete a pod named 'stuck-pod' without waiting for graceful termination.", "completion": "\n<execute_command>\nkubectl delete pod stuck-pod --grace-period=0 --force\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate deployment 'web-deploy' with the commit hash 'abc123'.", "completion": "\n<execute_command>\nkubectl annotate deployment web-deploy commit=abc123\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label the pod 'temp-pod' with the label test=true.", "completion": "\n<execute_command>\nkubectl label pod temp-pod test=true\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the 'test' label from pod 'temp-pod'.", "completion": "\n<execute_command>\nkubectl label pod temp-pod test-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export all deployments in the 'default' namespace to a YAML file named 'deployments.yaml'.", "completion": "\n<execute_command>\nkubectl get deployments -n default -o yaml > deployments.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in namespace 'custom'", "completion": "\n<execute_command>\nkubectl get pods -n custom\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get detailed information about deployment 'frontend' in JSON format", "completion": "\n<execute_command>\nkubectl get deployment frontend -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch live updates for statefulsets in namespace 'default'", "completion": "\n<execute_command>\nkubectl get statefulsets -n default --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display all pods with the label 'env=staging'", "completion": "\n<execute_command>\nkubectl get pods -l env=staging\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the service account 'default' in namespace 'kube-system'", "completion": "\n<execute_command>\nkubectl describe serviceaccount default -n kube-system\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set image pull policy for deployment 'app' to Always using patch", "completion": "\n<execute_command>\nkubectl patch deployment app -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"app\",\"imagePullPolicy\":\"Always\"}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Roll back deployment 'app' to a previous revision", "completion": "\n<execute_command>\nkubectl rollout undo deployment app\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get pods in namespace 'default' with their IP addresses", "completion": "\n<execute_command>\nkubectl get pods -n default -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete all completed jobs in namespace 'batch'", "completion": "\n<execute_command>\nkubectl delete job --field-selector=status.successful=1 -n batch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get endpoints for service 'myapp' in namespace 'default'", "completion": "\n<execute_command>\nkubectl get endpoints myapp -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe configmap 'app-config' in namespace 'default'", "completion": "\n<execute_command>\nkubectl describe configmap app-config -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a configuration from a remote URL 'https://example.com/config.yaml'", "completion": "\n<execute_command>\nkubectl apply -f https://example.com/config.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show the differences between the live and local configuration of deployment 'api'", "completion": "\n<execute_command>\nkubectl diff -f api.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all resources of type 'ingress' in namespace 'default'", "completion": "\n<execute_command>\nkubectl get ingress -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe persistent volume claim 'my-pvc' in namespace 'default'", "completion": "\n<execute_command>\nkubectl describe pvc my-pvc -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Convert a manifest file 'service.yaml' to JSON", "completion": "\n<execute_command>\nkubectl convert -f service.yaml -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List pods with custom columns in namespace 'prod' showing name and node", "completion": "\n<execute_command>\nkubectl get pods -n prod -o custom-columns=NAME:.metadata.name,NODE:.spec.nodeName\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set resource limits on deployment 'worker' from file 'resources.yaml'", "completion": "\n<execute_command>\nkubectl set resources deployment worker -f resources.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get events for a specific pod 'worker-123' in namespace 'prod'", "completion": "\n<execute_command>\nkubectl get events --field-selector involvedObject.name=worker-123 -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a role binding for the 'read-only' role in namespace 'dev'", "completion": "\n<execute_command>\nkubectl create rolebinding read-only-binding --role=read-only --serviceaccount=dev:default -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the role 'old-role' from namespace 'default'", "completion": "\n<execute_command>\nkubectl delete role old-role -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show annotations for pod 'test-pod' in namespace 'default'", "completion": "\n<execute_command>\nkubectl get pod test-pod -n default -o jsonpath='{.metadata.annotations}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set a label 'priority=high' on deployment 'critical-app' in namespace 'prod'", "completion": "\n<execute_command>\nkubectl label deployment critical-app priority=high -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the label 'deprecated' from service 'old-service' in namespace 'default'", "completion": "\n<execute_command>\nkubectl label service old-service deprecated- -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Expose a port from pod 'debug-pod' to local machine port 9999", "completion": "\n<execute_command>\nkubectl port-forward pod/debug-pod 9999:80\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in all namespaces with wide output", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display API resource definitions for 'cronjob'", "completion": "\n<execute_command>\nkubectl explain cronjob\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a patch to add a new environment variable to deployment 'worker'", "completion": "\n<execute_command>\nkubectl patch deployment worker -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"worker\",\"env\":[{\"name\":\"DEBUG\",\"value\":\"true\"}]}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all jobs in all namespaces with wide output", "completion": "\n<execute_command>\nkubectl get jobs --all-namespaces -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show details of replica set 'frontend-abc123' in namespace 'default'", "completion": "\n<execute_command>\nkubectl describe rs frontend-abc123 -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale replica set 'frontend-abc123' to 8 replicas in namespace 'default'", "completion": "\n<execute_command>\nkubectl scale rs frontend-abc123 --replicas=8 -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new secret from a literal value 'password=secret'", "completion": "\n<execute_command>\nkubectl create secret generic my-secret --from-literal=password=secret\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update secret 'my-secret' with new literal data using dry-run", "completion": "\n<execute_command>\nkubectl create secret generic my-secret --from-literal=password=newsecret --dry-run=client -o yaml | kubectl apply -f -\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all endpoints with the label 'app=backend'", "completion": "\n<execute_command>\nkubectl get endpoints -l app=backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show detailed information for service 'db-service' in JSON format", "completion": "\n<execute_command>\nkubectl get svc db-service -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export the configuration of statefulset 'cache' to a YAML file", "completion": "\n<execute_command>\nkubectl get statefulset cache -o yaml > cache-statefulset.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List pods using a custom output format showing name and status", "completion": "\n<execute_command>\nkubectl get pods -o custom-columns=NAME:.metadata.name,STATUS:.status.phase\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show the last 50 log lines for container 'main' in pod 'app-pod'", "completion": "\n<execute_command>\nkubectl logs app-pod -c main --tail=50\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a temporary pod with image 'alpine' to execute a command", "completion": "\n<execute_command>\nkubectl run temp-alpine --image=alpine --restart=Never -- /bin/sh -c 'echo Temporary Pod'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a namespace 'qa' and set a label 'environment=qa'", "completion": "\n<execute_command>\nkubectl create namespace qa && kubectl label namespace qa environment=qa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate namespace 'qa' with 'owner=team-qa'", "completion": "\n<execute_command>\nkubectl annotate namespace qa owner=team-qa\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe node 'node-5' and display its conditions", "completion": "\n<execute_command>\nkubectl describe node node-5\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all pods in namespace 'default' with a custom output showing node name", "completion": "\n<execute_command>\nkubectl get pods -n default -o custom-columns=NAME:.metadata.name,NODE:.spec.nodeName\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show the rolling update status for daemonset 'fluent-bit'", "completion": "\n<execute_command>\nkubectl rollout status daemonset fluent-bit\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply changes in directory 'overlays/dev' recursively", "completion": "\n<execute_command>\nkubectl apply -R -f overlays/dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List pods with the field 'status.phase=Pending' in namespace 'default'", "completion": "\n<execute_command>\nkubectl get pods -n default --field-selector=status.phase=Pending\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a secret from a file 'token.txt'", "completion": "\n<execute_command>\nkubectl create secret generic token-secret --from-file=token.txt\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete a configmap named 'old-config' from namespace 'dev'", "completion": "\n<execute_command>\nkubectl delete configmap old-config -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for new events in the 'kube-system' namespace", "completion": "\n<execute_command>\nkubectl get events -n kube-system --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display logs for init container 'init' in pod 'setup-pod'", "completion": "\n<execute_command>\nkubectl logs setup-pod -c init\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label node 'node-10' with 'zone=us-central1-a'", "completion": "\n<execute_command>\nkubectl label node node-10 zone=us-central1-a\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove label 'zone' from node 'node-10'", "completion": "\n<execute_command>\nkubectl label node node-10 zone-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch service 'frontend-svc' to add a new port 8081", "completion": "\n<execute_command>\nkubectl patch service frontend-svc -p '{\"spec\":{\"ports\":[{\"port\":8081,\"targetPort\":8081}]}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get a list of all resources in namespace 'monitoring'", "completion": "\n<execute_command>\nkubectl get all -n monitoring\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export deployment 'backend' configuration to a file 'backend.yaml'", "completion": "\n<execute_command>\nkubectl get deployment backend -o yaml > backend.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new configmap 'game-config' from a directory 'game-settings'", "completion": "\n<execute_command>\nkubectl create configmap game-config --from-file=game-settings\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate pod 'game-server' with version 'v2.0'", "completion": "\n<execute_command>\nkubectl annotate pod game-server version=v2.0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set environment variable 'MODE=debug' on pod 'game-server' using patch", "completion": "\n<execute_command>\nkubectl patch pod game-server -p '{\"spec\":{\"containers\":[{\"name\":\"game-server\",\"env\":[{\"name\":\"MODE\",\"value\":\"debug\"}]}]}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the endpoints for the service 'game-svc' in namespace 'games'", "completion": "\n<execute_command>\nkubectl describe endpoints game-svc -n games\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all deployments sorted by creation timestamp in namespace 'default'", "completion": "\n<execute_command>\nkubectl get deployments -n default --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for changes in deployments in namespace 'prod'", "completion": "\n<execute_command>\nkubectl get deployments -n prod --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale deployment 'microservice' to zero replicas to pause it", "completion": "\n<execute_command>\nkubectl scale deployment microservice --replicas=0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Restart deployment 'microservice' by rolling update", "completion": "\n<execute_command>\nkubectl rollout restart deployment microservice\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set a new image for container 'service' in statefulset 'db' to 'postgres:13'", "completion": "\n<execute_command>\nkubectl set image statefulset/db service=postgres:13\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display the history of rollouts for statefulset 'db'", "completion": "\n<execute_command>\nkubectl rollout history statefulset db\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Force a deployment to restart by patching its annotations", "completion": "\n<execute_command>\nkubectl patch deployment app -p '{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"$(date)\"}}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve logs from the container 'worker' in pod 'job-runner' since 10 minutes ago", "completion": "\n<execute_command>\nkubectl logs job-runner -c worker --since=10m\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in namespace 'analytics' with label 'tier=backend'", "completion": "\n<execute_command>\nkubectl get pods -n analytics -l tier=backend\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe service 'analytics-svc' in namespace 'analytics'", "completion": "\n<execute_command>\nkubectl describe service analytics-svc -n analytics\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all statefulsets with label 'role=database' in namespace 'data'", "completion": "\n<execute_command>\nkubectl get statefulsets -n data -l role=database\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new secret 'db-credentials' from multiple literal values", "completion": "\n<execute_command>\nkubectl create secret generic db-credentials --from-literal=username=admin --from-literal=password=secret\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete secret 'old-credentials' from namespace 'data'", "completion": "\n<execute_command>\nkubectl delete secret old-credentials -n data\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with a restart count greater than 0", "completion": "\n<execute_command>\nkubectl get pods -o json | jq '.items[] | select(.status.containerStatuses[].restartCount > 0) | .metadata.name'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a label 'release=stable' to all pods in namespace 'prod'", "completion": "\n<execute_command>\nkubectl label pods --all release=stable -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the label 'release' from all pods in namespace 'prod'", "completion": "\n<execute_command>\nkubectl label pods --all release- -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Fetch a list of all container images running in namespace 'default'", "completion": "\n<execute_command>\nkubectl get pods -n default -o jsonpath='{..image}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all replication controllers in namespace 'legacy'", "completion": "\n<execute_command>\nkubectl get rc -n legacy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe replication controller 'old-rc' in namespace 'legacy'", "completion": "\n<execute_command>\nkubectl describe rc old-rc -n legacy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete replication controller 'old-rc' in namespace 'legacy'", "completion": "\n<execute_command>\nkubectl delete rc old-rc -n legacy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export replication controller 'old-rc' configuration to a file", "completion": "\n<execute_command>\nkubectl get rc old-rc -n legacy -o yaml > old-rc.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show node resource usage in a custom table format", "completion": "\n<execute_command>\nkubectl top nodes --no-headers | awk '{print $1, $3, $5}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with owner references", "completion": "\n<execute_command>\nkubectl get pods -o jsonpath='{range .items[*]}{@.metadata.name}:{@.metadata.ownerReferences[*].name} {end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a secret from a directory 'ssl'", "completion": "\n<execute_command>\nkubectl create secret generic ssl-secret --from-file=ssl\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update deployment 'web' to use a new image from a private registry", "completion": "\n<execute_command>\nkubectl set image deployment/web web=private.registry.com/web:latest\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the resource quotas in namespace 'dev'", "completion": "\n<execute_command>\nkubectl describe quota -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get all pods using a JSONPath query to display name and node name", "completion": "\n<execute_command>\nkubectl get pods -o jsonpath='{range .items[*]}{.metadata.name} {.spec.nodeName}\\n{end}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all configmaps in namespace 'ops' in YAML format", "completion": "\n<execute_command>\nkubectl get configmaps -n ops -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Annotate deployment 'api-deploy' with 'build=2025-02-04'", "completion": "\n<execute_command>\nkubectl annotate deployment api-deploy build=2025-02-04\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch statefulset 'cache' to update its updateStrategy to RollingUpdate", "completion": "\n<execute_command>\nkubectl patch statefulset cache -p '{\"spec\":{\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Scale the daemonset 'metrics-agent' to 0 (not normally allowed)", "completion": "\n<execute_command>\nkubectl scale daemonset metrics-agent --replicas=0\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all custom resource objects of type 'MyResource' in all namespaces", "completion": "\n<execute_command>\nkubectl get MyResource --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get a specific field 'status.phase' for pod 'example-pod' in namespace 'default'", "completion": "\n<execute_command>\nkubectl get pod example-pod -n default -o jsonpath='{.status.phase}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View details of the node's addresses in JSON", "completion": "\n<execute_command>\nkubectl get node node-1 -o jsonpath='{.status.addresses}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display services sorted by their cluster IP", "completion": "\n<execute_command>\nkubectl get svc --sort-by=.spec.clusterIP\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the mutating webhook 'sidecar-injector'", "completion": "\n<execute_command>\nkubectl describe mutatingwebhookconfiguration sidecar-injector\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch a service account 'builder' to add an image pull secret", "completion": "\n<execute_command>\nkubectl patch serviceaccount builder -p '{\"imagePullSecrets\":[{\"name\":\"regcred\"}]}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in namespace 'default' that are not ready", "completion": "\n<execute_command>\nkubectl get pods -n default --field-selector=status.phase!=Running\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a job 'cleanup-temp' from command line to remove temp files", "completion": "\n<execute_command>\nkubectl run cleanup-temp --image=alpine --restart=Never -- /bin/sh -c 'rm -rf /tmp/*'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the job 'cleanup-temp' after completion", "completion": "\n<execute_command>\nkubectl delete job cleanup-temp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of all pods with their restart counts in JSON format", "completion": "\n<execute_command>\nkubectl get pods -o json | jq '.items[] | {name: .metadata.name, restarts: .status.containerStatuses[0].restartCount}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View the last 20 events in namespace 'default'", "completion": "\n<execute_command>\nkubectl get events -n default --sort-by=.metadata.creationTimestamp | tail -n 20\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all roles across all namespaces", "completion": "\n<execute_command>\nkubectl get roles --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all cluster roles", "completion": "\n<execute_command>\nkubectl get clusterroles\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the cluster role 'cluster-admin'", "completion": "\n<execute_command>\nkubectl describe clusterrole cluster-admin\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a cluster role binding for user 'alice' to cluster-admin", "completion": "\n<execute_command>\nkubectl create clusterrolebinding alice-admin --clusterrole=cluster-admin --user=alice\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete the cluster role binding 'alice-admin'", "completion": "\n<execute_command>\nkubectl delete clusterrolebinding alice-admin\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Export all secrets in namespace 'default' to a JSON file", "completion": "\n<execute_command>\nkubectl get secrets -n default -o json > secrets.json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all nodes with labels in a custom format", "completion": "\n<execute_command>\nkubectl get nodes -o custom-columns=NAME:.metadata.name,LABELS:.metadata.labels\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the image for all containers in deployment 'multi-container' to 'busybox:latest'", "completion": "\n<execute_command>\nkubectl set image deployment/multi-container *=busybox:latest\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch pod 'test-pod' to add an annotation 'debug=true'", "completion": "\n<execute_command>\nkubectl patch pod test-pod -p '{\"metadata\":{\"annotations\":{\"debug\":\"true\"}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run an ephemeral container in pod 'test-pod' for debugging", "completion": "\n<execute_command>\nkubectl debug pod/test-pod --image=busybox\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with a specific container name 'nginx'", "completion": "\n<execute_command>\nkubectl get pods -o jsonpath='{.items[?(@.spec.containers[*].name==\"nginx\")].metadata.name}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a pod with multiple containers using a multi-document YAML", "completion": "\n<execute_command>\nkubectl apply -f multi-container-pod.yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update deployment 'web' using a strategic merge patch", "completion": "\n<execute_command>\nkubectl patch deployment web -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"web\",\"resources\":{\"limits\":{\"cpu\":\"500m\"}}}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all available API groups", "completion": "\n<execute_command>\nkubectl api-resources --api-group=''\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display a summary of current contexts from kubeconfig", "completion": "\n<execute_command>\nkubectl config get-contexts\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the current context to use user 'bob'", "completion": "\n<execute_command>\nkubectl config set-context --current --user=bob\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Switch to context 'dev-context'", "completion": "\n<execute_command>\nkubectl config use-context dev-context\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get a list of all pods in namespace 'staging' with their restart counts using custom-columns", "completion": "\n<execute_command>\nkubectl get pods -n staging -o custom-columns=NAME:.metadata.name,RESTARTS:.status.containerStatuses[*].restartCount\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe persistent volume 'pv-data' in detail", "completion": "\n<execute_command>\nkubectl describe pv pv-data\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all persistent volume claims across all namespaces", "completion": "\n<execute_command>\nkubectl get pvc --all-namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new service from a YAML file 'service.yaml' in namespace 'dev'", "completion": "\n<execute_command>\nkubectl create -f service.yaml -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Replace the existing configmap 'app-config' in namespace 'default' using a file", "completion": "\n<execute_command>\nkubectl replace -f app-config.yaml -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a one-off command in a new pod 'debug-tool' using the image 'ubuntu'", "completion": "\n<execute_command>\nkubectl run debug-tool --rm -it --image=ubuntu -- /bin/bash\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the list of all namespaces with their status", "completion": "\n<execute_command>\nkubectl get namespaces\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, View detailed information for node 'master-node' in JSON", "completion": "\n<execute_command>\nkubectl get node master-node -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new service account 'build-bot' in namespace 'ci'", "completion": "\n<execute_command>\nkubectl create serviceaccount build-bot -n ci\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the service account 'build-bot' in namespace 'ci'", "completion": "\n<execute_command>\nkubectl describe serviceaccount build-bot -n ci\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch deployment 'ci-server' to add an environment variable 'CI=true'", "completion": "\n<execute_command>\nkubectl patch deployment ci-server -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"ci-server\",\"env\":[{\"name\":\"CI\",\"value\":\"true\"}]}]}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all custom resources of type 'Foo' in namespace 'test'", "completion": "\n<execute_command>\nkubectl get Foo -n test\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the OpenAPI schema for the 'Pod' resource", "completion": "\n<execute_command>\nkubectl get --raw /openapi/v2 | jq '.definitions.Pod'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a label 'team=dev' to namespace 'development'", "completion": "\n<execute_command>\nkubectl label namespace development team=dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the label 'team' from namespace 'development'", "completion": "\n<execute_command>\nkubectl label namespace development team-\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show only the names of cluster roles", "completion": "\n<execute_command>\nkubectl get clusterroles -o custom-columns=NAME:.metadata.name\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for new cluster role bindings", "completion": "\n<execute_command>\nkubectl get clusterrolebindings --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the role binding 'read-only-binding' in namespace 'dev'", "completion": "\n<execute_command>\nkubectl describe rolebinding read-only-binding -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new replication controller from 'rc.yaml' in namespace 'legacy'", "completion": "\n<execute_command>\nkubectl create -f rc.yaml -n legacy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all API versions available in the cluster", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Update the image of pod 'single-container' directly (not recommended)", "completion": "\n<execute_command>\nkubectl set image pod/single-container single-container=myimage:latest\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Retrieve logs from pod 'stream-pod' and follow them in real time", "completion": "\n<execute_command>\nkubectl logs stream-pod -f\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display detailed container statuses for pod 'status-pod'", "completion": "\n<execute_command>\nkubectl describe pod status-pod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new ingress from file 'ingress.yaml' in namespace 'web'", "completion": "\n<execute_command>\nkubectl create -f ingress.yaml -n web\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch ingress 'web-ingress' to update its backend service", "completion": "\n<execute_command>\nkubectl patch ingress web-ingress -n web -p '{\"spec\":{\"rules\":[{\"http\":{\"paths\":[{\"backend\":{\"serviceName\":\"new-service\",\"servicePort\":80}}]}]}]}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all endpoints for ingress 'web-ingress' in namespace 'web'", "completion": "\n<execute_command>\nkubectl get endpoints -n web -l kubernetes.io/ingress-name=web-ingress\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display a summary of resource quotas in namespace 'production'", "completion": "\n<execute_command>\nkubectl get quota -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe resource quota 'compute-quota' in namespace 'production'", "completion": "\n<execute_command>\nkubectl describe quota compute-quota -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a new resource quota from file 'quota.yaml' in namespace 'production'", "completion": "\n<execute_command>\nkubectl create -f quota.yaml -n production\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete resource quota 'temp-quota' from namespace 'temp'", "completion": "\n<execute_command>\nkubectl delete quota temp-quota -n temp\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all persistent volumes with detailed output", "completion": "\n<execute_command>\nkubectl get pv -o wide\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe persistent volume 'pv-ssd' in detail", "completion": "\n<execute_command>\nkubectl describe pv pv-ssd\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set up port forwarding from service 'db-svc' in namespace 'database' port 5432 to local port 15432", "completion": "\n<execute_command>\nkubectl port-forward service/db-svc 15432:5432 -n database\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Execute a command in an init container of pod 'init-example'", "completion": "\n<execute_command>\nkubectl exec -it init-example -c init-container -- /bin/sh\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a pod 'trace' with image 'jaegertracing/all-in-one:1.21'", "completion": "\n<execute_command>\nkubectl run trace --image=jaegertracing/all-in-one:1.21 --restart=Never\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete pod 'trace' after troubleshooting", "completion": "\n<execute_command>\nkubectl delete pod trace\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods with the annotation 'backup=true'", "completion": "\n<execute_command>\nkubectl get pods -A -o jsonpath='{.items[?(@.metadata.annotations.backup==\"true\")].metadata.name}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the secret 'tls-cert' in namespace 'web'", "completion": "\n<execute_command>\nkubectl describe secret tls-cert -n web\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a TLS secret from files 'tls.crt' and 'tls.key' in namespace 'web'", "completion": "\n<execute_command>\nkubectl create secret tls tls-cert --cert=tls.crt --key=tls.key -n web\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all jobs in namespace 'ci' with their completions", "completion": "\n<execute_command>\nkubectl get jobs -n ci -o custom-columns=NAME:.metadata.name,COMPLETIONS:.status.succeeded\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe job 'build-job' in namespace 'ci'", "completion": "\n<execute_command>\nkubectl describe job build-job -n ci\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a cronjob 'nightly-build' from file 'cronjob.yaml' in namespace 'ci'", "completion": "\n<execute_command>\nkubectl create -f cronjob.yaml -n ci\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Suspend the cronjob 'nightly-build' temporarily", "completion": "\n<execute_command>\nkubectl patch cronjob nightly-build -n ci -p '{\"spec\":{\"suspend\":true}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Resume the cronjob 'nightly-build'", "completion": "\n<execute_command>\nkubectl patch cronjob nightly-build -n ci -p '{\"spec\":{\"suspend\":false}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the status of cronjob 'nightly-build' in namespace 'ci'", "completion": "\n<execute_command>\nkubectl get cronjob nightly-build -n ci\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete cronjob 'nightly-build' from namespace 'ci'", "completion": "\n<execute_command>\nkubectl delete cronjob nightly-build -n ci\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Label all deployments in namespace 'marketing' with 'tier=frontend'", "completion": "\n<execute_command>\nkubectl label deployments --all tier=frontend -n marketing\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove the label 'tier' from all deployments in namespace 'marketing'", "completion": "\n<execute_command>\nkubectl label deployments --all tier- -n marketing\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get detailed rollout history for deployment 'ad-server' in namespace 'ads'", "completion": "\n<execute_command>\nkubectl rollout history deployment ad-server -n ads\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Rollback deployment 'ad-server' in namespace 'ads' to a previous revision", "completion": "\n<execute_command>\nkubectl rollout undo deployment ad-server -n ads\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the default namespace for kubectl commands to 'sandbox'", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=sandbox\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Unset the default namespace in the current context", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=''\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in namespace 'sandbox' with their restart policy", "completion": "\n<execute_command>\nkubectl get pods -n sandbox -o custom-columns=NAME:.metadata.name,RESTARTPOLICY:.spec.restartPolicy\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display the YAML of the current context from kubeconfig", "completion": "\n<execute_command>\nkubectl config view --minify -o yaml\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Create a network policy from file 'netpolicy.yaml' in namespace 'secure'", "completion": "\n<execute_command>\nkubectl create -f netpolicy.yaml -n secure\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the network policy 'deny-all' in namespace 'secure'", "completion": "\n<execute_command>\nkubectl describe networkpolicy deny-all -n secure\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch deployment 'api-gateway' to update its number of replicas to 4", "completion": "\n<execute_command>\nkubectl patch deployment api-gateway -p '{\"spec\":{\"replicas\":4}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set node selector for deployment 'worker' to use nodes with label 'role=worker'", "completion": "\n<execute_command>\nkubectl patch deployment worker -p '{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"role\":\"worker\"}}}}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Display logs for pod 'multi-log' for container 'sidecar' with timestamps", "completion": "\n<execute_command>\nkubectl logs multi-log -c sidecar --timestamps\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Tail logs for pod 'app-log' for container 'main' with 100 lines", "completion": "\n<execute_command>\nkubectl logs app-log -c main --tail=100\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Run a privileged container in pod 'privileged-pod' using the image 'centos'", "completion": "\n<execute_command>\nkubectl run privileged-pod --image=centos --privileged --restart=Never -- /bin/bash\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all deployments with selector 'app=nginx' in namespace 'web'", "completion": "\n<execute_command>\nkubectl get deployments -n web -l app=nginx\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the deployment 'nginx-deploy' in namespace 'web'", "completion": "\n<execute_command>\nkubectl describe deployment nginx-deploy -n web\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Delete deployment 'temp-deploy' in namespace 'dev'", "completion": "\n<execute_command>\nkubectl delete deployment temp-deploy -n dev\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get detailed information about pod 'cache-redis' with JSON output", "completion": "\n<execute_command>\nkubectl get pod cache-redis -o json\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Apply a label 'version=v2' to service 'api-service' in namespace 'prod'", "completion": "\n<execute_command>\nkubectl label service api-service version=v2 -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Remove label 'version' from service 'api-service' in namespace 'prod'", "completion": "\n<execute_command>\nkubectl label service api-service version- -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch pod 'db-pod' to add a toleration for key 'database'", "completion": "\n<execute_command>\nkubectl patch pod db-pod -p '{\"spec\":{\"tolerations\":[{\"key\":\"database\",\"operator\":\"Exists\",\"effect\":\"NoSchedule\"}]}}'\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all pods in namespace 'default' sorted by restart count", "completion": "\n<execute_command>\nkubectl get pods -n default --sort-by=.status.containerStatuses[0].restartCount\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Set the log level for kubectl to debug", "completion": "\n<execute_command>\nkubectl --v=9 get pods\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Get the CPU and memory usage of pods with label 'app=worker' in namespace 'default'", "completion": "\n<execute_command>\nkubectl top pod -l app=worker -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for changes in replica set 'frontend-abc123' in real time", "completion": "\n<execute_command>\nkubectl get rs frontend-abc123 -n default --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all service accounts in namespace 'default'", "completion": "\n<execute_command>\nkubectl get serviceaccounts -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Describe the role 'view' in namespace 'default'", "completion": "\n<execute_command>\nkubectl describe role view -n default\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, List all volume attachments in the cluster", "completion": "\n<execute_command>\nkubectl get volumeattachments\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Show the endpoints for deployment 'api' in namespace 'prod'", "completion": "\n<execute_command>\nkubectl get endpoints api -n prod\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Watch for changes in persistent volume claims in namespace 'data'", "completion": "\n<execute_command>\nkubectl get pvc -n data --watch\n</execute_command>\n"}
{"prompt": "Regarding kubernetes, Patch service 'web-svc' to add an external IP using a JSON patch", "completion": "\n<execute_command>\nkubectl patch service web-svc -p '[{\"op\": \"add\", \"path\": \"/spec/externalIPs\", \"value\": [\"192.168.1.100\"]}]'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all namespaces.\nAssistant: Sure, here is the list of all namespaces.\nUser: Great, thanks.", "completion": "\n<execute_command>\nkubectl get namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to see pods across all namespaces.\nAssistant: Retrieving pods from every namespace.\nUser: Perfect.", "completion": "\n<execute_command>\nkubectl get pods --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me detailed pod information.\nAssistant: Displaying pods in wide format for more details.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get pods -o wide\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all deployments across all namespaces.\nAssistant: Here are the deployments in every namespace.\nUser: Awesome.", "completion": "\n<execute_command>\nkubectl get deployments --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to view node information in JSON format.\nAssistant: Fetching node details as JSON.\nUser: That’s exactly what I need.", "completion": "\n<execute_command>\nkubectl get nodes -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me my current kubeconfig settings.\nAssistant: Displaying the current configuration view.\nUser: Great.", "completion": "\n<execute_command>\nkubectl config view\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to modify a deployment interactively.\nAssistant: Opening the editor for deployment 'my-deployment'.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl edit deployment my-deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale a replicaset for me.\nAssistant: Which replicaset should be scaled?\nUser: 'my-replicaset' to 3 replicas.", "completion": "\n<execute_command>\nkubectl scale replicaset my-replicaset --replicas=3\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Update the image for a deployment.\nAssistant: Changing image for container in deployment 'my-deployment'.\nUser: Set it to myimage:latest.", "completion": "\n<execute_command>\nkubectl set image deployment/my-deployment my-container=myimage:latest\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to see the rollout history of my deployment.\nAssistant: Retrieving rollout history for 'my-deployment'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl rollout history deployment/my-deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Can you revert my deployment to a previous state?\nAssistant: Rolling back 'my-deployment' to its previous revision.\nUser: Please do that.", "completion": "\n<execute_command>\nkubectl rollout undo deployment/my-deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the persistent volumes available.\nAssistant: Listing all persistent volumes.\nUser: Great.", "completion": "\n<execute_command>\nkubectl get pv\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to list all persistent volume claims.\nAssistant: Fetching all PVCs.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get pvc\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret from a file for me.\nAssistant: Which file should be used?\nUser: Use secret.txt for 'my-secret'.", "completion": "\n<execute_command>\nkubectl create secret generic my-secret --from-file=secret.txt\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to create a secret from an environment file.\nAssistant: Creating 'env-secret' from .env file.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl create secret generic env-secret --from-env-file=.env\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply all manifests in the current directory.\nAssistant: Applying manifests from ./manifests.\nUser: Perfect.", "completion": "\n<execute_command>\nkubectl apply -f ./manifests\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove a service from my cluster.\nAssistant: Deleting service 'my-service'.\nUser: Please delete it.", "completion": "\n<execute_command>\nkubectl delete service my-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to modify a configmap interactively.\nAssistant: Opening editor for configmap 'my-config'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl edit configmap my-config\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe a service account for me.\nAssistant: Showing details for serviceaccount 'my-sa'.\nUser: Excellent.", "completion": "\n<execute_command>\nkubectl describe serviceaccount my-sa\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all roles in a specific namespace.\nAssistant: Retrieving roles in namespace 'my-namespace'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get roles -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to list the rolebindings in a namespace.\nAssistant: Fetching rolebindings from 'my-namespace'.\nUser: That works.", "completion": "\n<execute_command>\nkubectl get rolebindings -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a role that allows reading pods.\nAssistant: Creating role 'pod-reader' with get, list, watch permissions in 'my-namespace'.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl create role pod-reader --verb=get,list,watch --resource=pods -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Now bind that role to the default service account.\nAssistant: Creating a rolebinding named 'read-pods'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl create rolebinding read-pods --role=pod-reader --serviceaccount=my-namespace:default -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to check a cluster role called admin.\nAssistant: Retrieving the clusterrole 'admin'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get clusterrole admin\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all cluster rolebindings.\nAssistant: Here are the cluster rolebindings.\nUser: Perfect.", "completion": "\n<execute_command>\nkubectl get clusterrolebinding\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Cordon a node for maintenance.\nAssistant: Cordon node 'node-1' to prevent new pods.\nUser: Please do it.", "completion": "\n<execute_command>\nkubectl cordon node-1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to drain a node.\nAssistant: Draining node 'node-2' and ignoring daemonsets.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl drain node-2 --ignore-daemonsets\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe node 'node-1' for more details.\nAssistant: Fetching detailed information about node 'node-1'.\nUser: Thank you.", "completion": "\n<execute_command>\nkubectl describe node node-1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Add a label to my deployment.\nAssistant: Labeling 'my-deployment' with env=staging.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl label deployment my-deployment env=staging\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Can you annotate my deployment with a description?\nAssistant: Adding annotation 'description=Staging deployment' to 'my-deployment'.\nUser: Great.", "completion": "\n<execute_command>\nkubectl annotate deployment my-deployment description='Staging deployment'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set resource limits for a pod, please.\nAssistant: Setting limits of cpu=200m and memory=512Mi for 'my-pod'.\nUser: Execute that.", "completion": "\n<execute_command>\nkubectl set resources pod my-pod --limits=cpu=200m,memory=512Mi\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me events in the 'my-namespace' namespace.\nAssistant: Listing events in namespace 'my-namespace'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get events -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need the YAML output for a pod.\nAssistant: Retrieving YAML for 'my-pod'.\nUser: That’s helpful.", "completion": "\n<execute_command>\nkubectl get pod my-pod -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the YAML for a deployment.\nAssistant: Here is the YAML for 'my-deployment'.\nUser: Good.", "completion": "\n<execute_command>\nkubectl get deployment my-deployment -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want the service YAML details.\nAssistant: Fetching YAML for service 'my-service'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get service my-service -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch a pod to add a new label.\nAssistant: Patching 'my-pod' to include label patched=true.\nUser: Do it.", "completion": "\n<execute_command>\nkubectl patch pod my-pod -p '{\"metadata\":{\"labels\":{\"patched\":\"true\"}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a temporary pod for testing.\nAssistant: Running 'temp-pod' using the alpine image interactively.\nUser: Start it.", "completion": "\n<execute_command>\nkubectl run temp-pod --rm -it --image=alpine -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to debug a failing pod.\nAssistant: Launching a debug container from pod 'my-pod' using busybox.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl debug pod/my-pod --image=busybox --copy-to=debug-pod --container=debug\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the last 50 lines of my pod logs.\nAssistant: Fetching tail of 'my-pod' logs.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl logs my-pod --tail=50\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Follow the logs of my pod.\nAssistant: Streaming logs for 'my-pod'.\nUser: Alright.", "completion": "\n<execute_command>\nkubectl logs my-pod -f\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to stream logs from a specific container in my pod.\nAssistant: Following logs for container 'my-container' in 'my-pod'.\nUser: Start streaming.", "completion": "\n<execute_command>\nkubectl logs my-pod -c my-container -f\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Check the rollout status of my deployment.\nAssistant: Monitoring rollout status for 'my-deployment'.\nUser: Waiting.", "completion": "\n<execute_command>\nkubectl rollout status deployment/my-deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Label my pod with a new version.\nAssistant: Labeling 'my-pod' with version=v2.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl label pod my-pod version=v2\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate a node for maintenance.\nAssistant: Adding maintenance='scheduled' annotation to node 'node-1'.\nUser: Do it.", "completion": "\n<execute_command>\nkubectl annotate node node-1 maintenance='scheduled'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to list my custom resources.\nAssistant: Listing all resources of type 'myresource'.\nUser: Great.", "completion": "\n<execute_command>\nkubectl get myresource\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Provide details about a custom resource instance.\nAssistant: Describing 'my-resource-instance' of type 'myresource'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe myresource my-resource-instance\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a configuration file.\nAssistant: Applying configuration from 'config.yaml'.\nUser: Please do so.", "completion": "\n<execute_command>\nkubectl apply -f config.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a persistent volume claim.\nAssistant: Removing PVC 'my-pvc'.\nUser: Execute that.", "completion": "\n<execute_command>\nkubectl delete pvc my-pvc\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a persistent volume.\nAssistant: Deleting persistent volume 'my-pv'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl delete pv my-pv\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all secrets in my cluster.\nAssistant: Fetching list of secrets.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get secrets\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me all configmaps in every namespace.\nAssistant: Listing configmaps across all namespaces.\nUser: Good.", "completion": "\n<execute_command>\nkubectl get configmaps -A\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Restart my daemonset rollout.\nAssistant: Rolling out restart for daemonset 'my-daemonset'.\nUser: Please do that.", "completion": "\n<execute_command>\nkubectl rollout restart daemonset my-daemonset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale my daemonset.\nAssistant: Scaling daemonset 'my-daemonset' to 2 replicas.\nUser: Execute.", "completion": "\n<execute_command>\nkubectl scale daemonset my-daemonset --replicas=2\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove the daemonset from my cluster.\nAssistant: Deleting daemonset 'my-daemonset'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl delete daemonset my-daemonset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all custom resource definitions.\nAssistant: Retrieving all CRDs in the cluster.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get crd\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want details about a specific CRD.\nAssistant: Describing CRD 'my-crd'.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl describe crd my-crd\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, What resource quotas are set in my namespace?\nAssistant: Listing resource quotas in 'my-namespace'.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl get resourcequotas -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to modify a resource quota.\nAssistant: Editing resource quota 'my-quota' in 'my-namespace'.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl edit resourcequota my-quota -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a secret manifest file.\nAssistant: Applying secret configuration from secret.yaml.\nUser: Do that.", "completion": "\n<execute_command>\nkubectl apply -f secret.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Now apply my configmap manifest.\nAssistant: Applying configmap from configmap.yaml.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl apply -f configmap.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me all nodes with their labels.\nAssistant: Displaying nodes along with their labels.\nUser: Perfect.", "completion": "\n<execute_command>\nkubectl get nodes --show-labels\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to add a tier label to my service.\nAssistant: Labeling service 'my-service' with tier=backend.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl label service my-service tier=backend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Please annotate my service with an owner.\nAssistant: Annotating service 'my-service' with owner=teamA.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl annotate service my-service owner='teamA'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the replicaset details.\nAssistant: Fetching detailed information for replicaset 'my-replicaset'.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl describe rs my-replicaset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods created by a replicaset.\nAssistant: Getting pods with label app=my-app.\nUser: That’s fine.", "completion": "\n<execute_command>\nkubectl get pods -l app=my-app\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale my statefulset, please.\nAssistant: Scaling statefulset 'my-statefulset' to 3 replicas.\nUser: Execute.", "completion": "\n<execute_command>\nkubectl scale statefulset my-statefulset --replicas=3\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Edit my statefulset.\nAssistant: Opening the editor for statefulset 'my-statefulset'.\nUser: Please open.", "completion": "\n<execute_command>\nkubectl edit statefulset my-statefulset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe my statefulset for details.\nAssistant: Displaying detailed info for statefulset 'my-statefulset'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe statefulset my-statefulset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Update the image in my statefulset.\nAssistant: Setting new image 'myimage:1.1' for container 'my-container' in 'my-statefulset'.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl set image statefulset/my-statefulset my-container=myimage:1.1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Check the rollout status of my statefulset.\nAssistant: Monitoring statefulset 'my-statefulset'.\nUser: Waiting.", "completion": "\n<execute_command>\nkubectl rollout status statefulset/my-statefulset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a new cronjob for periodic tasks.\nAssistant: Creating cronjob 'my-cronjob' with a schedule of every 5 minutes.\nUser: Set it up.", "completion": "\n<execute_command>\nkubectl create cronjob my-cronjob --image=busybox --schedule='*/5 * * * *' -- /bin/sh -c 'date'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all cronjobs in the cluster.\nAssistant: Displaying all cronjobs.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl get cronjobs\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the cronjob in detail.\nAssistant: Describing cronjob 'my-cronjob'.\nUser: Please provide details.", "completion": "\n<execute_command>\nkubectl describe cronjob my-cronjob\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete the cronjob after it's no longer needed.\nAssistant: Deleting cronjob 'my-cronjob'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl delete cronjob my-cronjob\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a job that runs once.\nAssistant: Creating job 'my-job' with the busybox image.\nUser: Execute the job.", "completion": "\n<execute_command>\nkubectl create job my-job --image=busybox -- /bin/sh -c 'echo Hello'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all jobs.\nAssistant: Fetching the list of jobs.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl get jobs\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe my job.\nAssistant: Providing details for job 'my-job'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe job my-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove the job from my cluster.\nAssistant: Deleting job 'my-job'.\nUser: Please delete it.", "completion": "\n<execute_command>\nkubectl delete job my-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, What API resources are available?\nAssistant: Listing all API resources.\nUser: That’s useful.", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all available API versions.\nAssistant: Here are the API versions.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Filter the API versions for v1 resources.\nAssistant: Searching API versions for 'v1'.\nUser: Please show.", "completion": "\n<execute_command>\nkubectl api-versions | grep v1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Validate my deployment manifest without applying.\nAssistant: Running a client-side dry run on deployment.yaml.\nUser: Great.", "completion": "\n<execute_command>\nkubectl apply -f deployment.yaml --dry-run=client\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the differences in my deployment configuration.\nAssistant: Displaying diff for deployment.yaml.\nUser: That’s helpful.", "completion": "\n<execute_command>\nkubectl diff -f deployment.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Wait for my pod to become ready.\nAssistant: Waiting until pod 'my-pod' meets the ready condition (timeout 60s).\nUser: Waiting...", "completion": "\n<execute_command>\nkubectl wait --for=condition=ready pod/my-pod --timeout=60s\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Wait until my deployment is available.\nAssistant: Waiting for 'my-deployment' to become available (timeout 120s).\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl wait --for=condition=available deployment/my-deployment --timeout=120s\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to port-forward a service.\nAssistant: Forwarding local port 8080 to port 80 of service 'my-service'.\nUser: Set it up.", "completion": "\n<execute_command>\nkubectl port-forward service/my-service 8080:80\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Expose a pod externally.\nAssistant: Exposing pod 'my-pod' on port 80 and targeting container port 8080.\nUser: Do that.", "completion": "\n<execute_command>\nkubectl expose pod my-pod --port=80 --target-port=8080\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all ingress resources in my namespace.\nAssistant: Retrieving ingresses in namespace 'my-namespace'.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl get ingress -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe my ingress details.\nAssistant: Describing ingress 'my-ingress' in 'my-namespace'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe ingress my-ingress -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create an ingress from a manifest.\nAssistant: Applying ingress configuration from ingress.yaml.\nUser: Go ahead.", "completion": "\n<execute_command>\nkubectl apply -f ingress.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete an ingress in my namespace.\nAssistant: Removing ingress 'my-ingress' from 'my-namespace'.\nUser: Delete it.", "completion": "\n<execute_command>\nkubectl delete ingress my-ingress -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch my deployment to change replica count using a strategic merge.\nAssistant: Patching 'my-deployment' to set replicas to 2.\nUser: Apply patch.", "completion": "\n<execute_command>\nkubectl patch deployment my-deployment -p '{\"spec\":{\"replicas\":2}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Add an annotation to my replicaset.\nAssistant: Annotating replicaset 'my-replicaset' with team=devops.\nUser: Do it.", "completion": "\n<execute_command>\nkubectl annotate rs my-replicaset team='devops'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Update the selector on my service.\nAssistant: Patching service 'my-service' to use selector app=my-app.\nUser: Please update.", "completion": "\n<execute_command>\nkubectl patch service my-service -p '{\"spec\": {\"selector\": {\"app\": \"my-app\"}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List the endpoints for my service.\nAssistant: Displaying endpoints for 'my-service'.\nUser: Show endpoints.", "completion": "\n<execute_command>\nkubectl get endpoints my-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the endpoints of my service.\nAssistant: Providing detailed information for endpoints of 'my-service'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe endpoints my-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a new pod using the nginx image.\nAssistant: Running pod 'test-pod' with the nginx image.\nUser: Start it.", "completion": "\n<execute_command>\nkubectl run test-pod --image=nginx\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Force delete a pod if it is stuck.\nAssistant: Force deleting pod 'test-pod' immediately.\nUser: Delete now.", "completion": "\n<execute_command>\nkubectl delete pod test-pod --grace-period=0 --force\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to evict a misbehaving pod.\nAssistant: Evicting pod 'my-pod' from its node.\nUser: Evict it.", "completion": "\n<execute_command>\nkubectl evict pod my-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Add a label to all pods in the cluster.\nAssistant: Labeling every pod with env=production.\nUser: Apply label.", "completion": "\n<execute_command>\nkubectl label pods --all env=production\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove a specific label from my pod.\nAssistant: Removing the 'env' label from 'my-pod'.\nUser: Do that.", "completion": "\n<execute_command>\nkubectl label pod my-pod env-\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show pod logs with timestamps.\nAssistant: Displaying logs for 'my-pod' with time stamps.\nUser: Show logs.", "completion": "\n<execute_command>\nkubectl logs my-pod --timestamps\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a pod with a restart policy of Never.\nAssistant: Creating a one-time pod 'one-time' using alpine.\nUser: Execute command.", "completion": "\n<execute_command>\nkubectl run one-time --image=alpine --restart=Never -- /bin/sh -c 'echo Hello'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to see a specific revision's history for my deployment.\nAssistant: Showing rollout history for 'my-deployment' at revision 2.\nUser: Provide details.", "completion": "\n<execute_command>\nkubectl rollout history deployment/my-deployment --revision=2\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Rollback my deployment to revision 1.\nAssistant: Undoing rollout for 'my-deployment' to revision 1.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl rollout undo deployment/my-deployment --to-revision=1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Label the default service account.\nAssistant: Labeling the default serviceaccount with team=backend.\nUser: Apply label.", "completion": "\n<execute_command>\nkubectl label serviceaccount default team=backend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate the default service account.\nAssistant: Adding description 'Default SA' to serviceaccount default.\nUser: Do it.", "completion": "\n<execute_command>\nkubectl annotate serviceaccount default description='Default SA'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all secrets in 'my-namespace'.\nAssistant: Fetching secrets from namespace 'my-namespace'.\nUser: Show them.", "completion": "\n<execute_command>\nkubectl get secrets -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Provide details for a specific secret.\nAssistant: Describing secret 'my-secret' in namespace 'my-namespace'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe secret my-secret -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret from a literal value.\nAssistant: Creating secret 'token-secret' with token=abc123.\nUser: Please create it.", "completion": "\n<execute_command>\nkubectl create secret generic token-secret --from-literal=token=abc123\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set an environment variable for my deployment.\nAssistant: Adding ENV=production to 'my-deployment'.\nUser: Update it.", "completion": "\n<execute_command>\nkubectl set env deployment/my-deployment ENV=production\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove an environment variable from my deployment.\nAssistant: Unsetting ENV variable from 'my-deployment'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl set env deployment/my-deployment ENV-\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List container images used by my pod.\nAssistant: Fetching image list from 'my-pod'.\nUser: Show images.", "completion": "\n<execute_command>\nkubectl get pod my-pod -o jsonpath='{.spec.containers[*].image}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Retrieve the IP address of my pod.\nAssistant: Displaying pod IP for 'my-pod'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get pod my-pod -o jsonpath='{.status.podIP}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the CPU and memory usage for a node.\nAssistant: Displaying resource usage for node 'node-1'.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl top node node-1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, What is the resource usage of my pod?\nAssistant: Showing resource usage for 'my-pod'.\nUser: Provide details.", "completion": "\n<execute_command>\nkubectl top pod my-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe my statefulset in detail.\nAssistant: Providing a detailed description for 'my-statefulset'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe statefulset my-statefulset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Add a new environment variable to my deployment.\nAssistant: Updating 'my-deployment' with NEW_VAR=value.\nUser: Update it.", "completion": "\n<execute_command>\nkubectl set env deployment/my-deployment NEW_VAR=value\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List every resource in my namespace.\nAssistant: Fetching all resources in 'my-namespace'.\nUser: List them.", "completion": "\n<execute_command>\nkubectl get all -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me all resource types available in the cluster.\nAssistant: Listing all API resource types.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Convert my deployment manifest to JSON.\nAssistant: Converting deployment.yaml to JSON using output version v1.\nUser: Please convert.", "completion": "\n<execute_command>\nkubectl convert -f deployment.yaml --output-version=v1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need help with the apply command.\nAssistant: Displaying help information for 'kubectl apply'.\nUser: Show help.", "completion": "\n<execute_command>\nkubectl apply --help\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me help for the get command.\nAssistant: Here is the help for 'kubectl get'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get --help\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods with specific custom columns.\nAssistant: Displaying pods with columns for name and status.\nUser: Show output.", "completion": "\n<execute_command>\nkubectl get pods -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to watch the pods in my namespace.\nAssistant: Watching pods in 'my-namespace'.\nUser: Start watch.", "completion": "\n<execute_command>\nkubectl get pods -n my-namespace --watch\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Provide the YAML output for a service account.\nAssistant: Fetching YAML for serviceaccount 'my-sa'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl get serviceaccount my-sa -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a configmap using literal values.\nAssistant: Creating configmap 'literal-config' with key1=value1.\nUser: Please create.", "completion": "\n<execute_command>\nkubectl create configmap literal-config --from-literal=key1=value1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete the literal configmap.\nAssistant: Deleting configmap 'literal-config'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl delete configmap literal-config\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch my configmap to update a key.\nAssistant: Updating 'my-config' to set key=new-value.\nUser: Apply patch.", "completion": "\n<execute_command>\nkubectl patch configmap my-config -p '{\"data\":{\"key\":\"new-value\"}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to edit a pod interactively.\nAssistant: Opening editor for pod 'my-pod'.\nUser: Please open.", "completion": "\n<execute_command>\nkubectl edit pod my-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Add a role label to a node.\nAssistant: Labeling node 'node-3' with role=database.\nUser: Apply label.", "completion": "\n<execute_command>\nkubectl label node node-3 role=database\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate node 'node-3' with a maintenance window.\nAssistant: Annotating node 'node-3' with maintenance='2025-02-05'.\nUser: Proceed.", "completion": "\n<execute_command>\nkubectl annotate node node-3 maintenance='2025-02-05'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Watch my deployment rollout status in real time.\nAssistant: Monitoring rollout status for 'my-deployment'.\nUser: Watching.", "completion": "\n<execute_command>\nkubectl rollout status deployment/my-deployment --watch\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a pod with elevated privileges.\nAssistant: Running 'privileged-pod' using busybox with privileged mode.\nUser: Start it.", "completion": "\n<execute_command>\nkubectl run privileged-pod --image=busybox --privileged -it -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a new namespace for my project.\nAssistant: Creating namespace 'new-namespace'.\nUser: Please create.", "completion": "\n<execute_command>\nkubectl create namespace new-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Change my current context to use the new namespace.\nAssistant: Setting current context's namespace to 'new-namespace'.\nUser: Switch it.", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=new-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Force delete a namespace immediately.\nAssistant: Deleting namespace 'new-namespace' with force and zero grace period.\nUser: Delete it.", "completion": "\n<execute_command>\nkubectl delete namespace new-namespace --force --grace-period=0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List API resources for the apps group.\nAssistant: Displaying API resources in the 'apps' group.\nUser: Show them.", "completion": "\n<execute_command>\nkubectl api-resources --api-group=apps\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get endpoints from all namespaces.\nAssistant: Listing endpoints across the entire cluster.\nUser: List them.", "completion": "\n<execute_command>\nkubectl get endpoints --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe a service in a different namespace.\nAssistant: Describing service 'my-service' in namespace 'another-namespace'.\nUser: Provide details.", "completion": "\n<execute_command>\nkubectl describe service my-service -n another-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch my service to update its port settings.\nAssistant: Changing service 'my-service' port to 8080 with targetPort 80.\nUser: Patch it.", "completion": "\n<execute_command>\nkubectl patch service my-service -p '{\"spec\":{\"ports\":[{\"port\":8080,\"targetPort\":80}]}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate my deployment with the latest git commit hash.\nAssistant: Adding annotation gitCommit=abcdef1234 to 'my-deployment'.\nUser: Annotate it.", "completion": "\n<execute_command>\nkubectl annotate deployment my-deployment gitCommit=abcdef1234\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Mark my deployment as stable with a label.\nAssistant: Labeling 'my-deployment' with status=stable (overwrite if exists).\nUser: Label it.", "completion": "\n<execute_command>\nkubectl label deployment my-deployment status=stable --overwrite\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a command in one of the pods of my deployment.\nAssistant: Executing ls /app in a pod from 'my-deployment'.\nUser: Run the command.", "completion": "\n<execute_command>\nkubectl exec deployment/my-deployment -- ls /app\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get logs from the previous instance of my pod.\nAssistant: Fetching previous logs for 'my-pod'.\nUser: Retrieve logs.", "completion": "\n<execute_command>\nkubectl logs my-pod --previous\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Stream logs from the sidecar container in my pod.\nAssistant: Following logs for container 'sidecar' in 'my-pod'.\nUser: Start streaming.", "completion": "\n<execute_command>\nkubectl logs my-pod -c sidecar -f\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the deployment status as raw JSON.\nAssistant: Retrieving 'my-deployment' in JSON format.\nUser: Show JSON.", "completion": "\n<execute_command>\nkubectl get deployment my-deployment -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need the secret details in YAML format.\nAssistant: Fetching secret 'my-secret' output as YAML.\nUser: Show YAML.", "completion": "\n<execute_command>\nkubectl get secret my-secret -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a one-off command in a new pod and remove it after execution.\nAssistant: Running temporary pod 'temp' with alpine to echo a message.\nUser: Execute command.", "completion": "\n<execute_command>\nkubectl run --rm -i temp --image=alpine -- /bin/sh -c 'echo One-off'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a configmap from a file input.\nAssistant: Creating configmap 'file-config' from config.txt.\nUser: Create it.", "completion": "\n<execute_command>\nkubectl create configmap file-config --from-file=config.txt\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete the secret I no longer need.\nAssistant: Deleting secret 'token-secret'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl delete secret token-secret\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List my custom resources in 'my-namespace'.\nAssistant: Retrieving custom resource 'myresource' from 'my-namespace'.\nUser: Show them.", "completion": "\n<execute_command>\nkubectl get myresource -n my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the CRD details of my custom resource.\nAssistant: Providing a detailed description for CRD 'my-crd'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl describe crd my-crd\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a new version of my deployment configuration.\nAssistant: Updating deployment using new-deployment.yaml.\nUser: Please apply.", "completion": "\n<execute_command>\nkubectl apply -f new-deployment.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Pause the rollout of my deployment temporarily.\nAssistant: Pausing rollout for 'my-deployment'.\nUser: Pause it.", "completion": "\n<execute_command>\nkubectl rollout pause deployment/my-deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Resume the paused rollout of my deployment.\nAssistant: Resuming rollout for 'my-deployment'.\nUser: Resume it.", "completion": "\n<execute_command>\nkubectl rollout resume deployment/my-deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me resource usage for my pod again.\nAssistant: Displaying current resource usage for 'my-pod'.\nUser: Thanks.", "completion": "\n<execute_command>\nkubectl top pod my-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List resource usage for all nodes in the cluster.\nAssistant: Fetching top nodes by resource usage.\nUser: Show them.", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods along with the nodes they are running on.\nAssistant: Displaying pods with associated node names.\nUser: Perfect.", "completion": "\n<execute_command>\nkubectl get pods -o=custom-columns=POD:.metadata.name,NODE:.spec.nodeName\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Execute a command to print environment variables in a specific container.\nAssistant: Running 'printenv' in container 'my-container' of 'my-pod'.\nUser: Execute command.", "completion": "\n<execute_command>\nkubectl exec my-pod -c my-container -- printenv\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a network troubleshooting pod interactively.\nAssistant: Launching 'net-tool' pod using busybox for network diagnostics.\nUser: Start it.", "completion": "\n<execute_command>\nkubectl run net-tool --rm -it --image=busybox -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Expose my deployment using NodePort.\nAssistant: Exposing 'my-deployment' as a NodePort service on port 80.\nUser: Set it up.", "completion": "\n<execute_command>\nkubectl expose deployment my-deployment --type=NodePort --port=80\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Update the image for my replicaset.\nAssistant: Setting new image 'myimage:2.0' for replicaset 'my-replicaset'.\nUser: Update it.", "completion": "\n<execute_command>\nkubectl set image rs/my-replicaset my-container=myimage:2.0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all pods sorted by their restart count.\nAssistant: Displaying pods sorted by .status.containerStatuses[0].restartCount.\nUser: List them.", "completion": "\n<execute_command>\nkubectl get pods --sort-by=.status.containerStatuses[0].restartCount\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete my replicaset from the cluster.\nAssistant: Deleting replicaset 'my-replicaset'.\nUser: Remove it.", "completion": "\n<execute_command>\nkubectl delete rs my-replicaset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a job manually from an existing cronjob.\nAssistant: Creating job 'my-manual-job' from cronjob 'my-cronjob'.\nUser: Please create.", "completion": "\n<execute_command>\nkubectl create job --from=cronjob/my-cronjob my-manual-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods with label filtering and wide output.\nAssistant: Retrieving pods with label app=my-app in wide format.\nUser: Show results.", "completion": "\n<execute_command>\nkubectl get pods -l app=my-app -o wide\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Provide detailed information about my namespace.\nAssistant: Describing namespace 'my-namespace'.\nUser: Give details.", "completion": "\n<execute_command>\nkubectl describe namespace my-namespace\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch my namespace to add a production label.\nAssistant: Updating namespace 'my-namespace' with label env=production.\nUser: Patch it.", "completion": "\n<execute_command>\nkubectl patch namespace my-namespace -p '{\"metadata\":{\"labels\":{\"env\":\"production\"}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show logs for a container that failed in my pod.\nAssistant: Retrieving logs for container 'failed-container' in 'my-pod'.\nUser: Fetch logs.", "completion": "\n<execute_command>\nkubectl logs my-pod -c failed-container\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List deployments sorted by creation timestamp.\nAssistant: Sorting deployments based on creation time.\nUser: List them.", "completion": "\n<execute_command>\nkubectl get deployments --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to modify a service interactively.\nAssistant: Opening editor for service 'my-service'.\nUser: Please edit.", "completion": "\n<execute_command>\nkubectl edit service my-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a pod with a privileged container using an override.\nAssistant: Launching 'admin-pod' with alpine in privileged mode using an override.\nUser: Execute command.", "completion": "\n<execute_command>\nkubectl run admin-pod --image=alpine --overrides='{\"spec\": {\"containers\": [{\"name\": \"admin\", \"image\": \"alpine\", \"securityContext\": {\"privileged\": true}}]}}' -it --rm -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate my pod with a checksum value.\nAssistant: Adding annotation checksum=12345abcde to 'my-pod'.\nUser: Annotate it.", "completion": "\n<execute_command>\nkubectl annotate pod my-pod checksum=12345abcde\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a configmap that includes multiple files from a directory.\nAssistant: Creating configmap 'multi-config' from directory 'dir/'.\nUser: Create it.", "completion": "\n<execute_command>\nkubectl create configmap multi-config --from-file=dir/\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all pods that match a certain label.\nAssistant: Deleting pods with label app=my-app.\nUser: Delete them.", "completion": "\n<execute_command>\nkubectl delete pods -l app=my-app\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Force delete a node from the cluster.\nAssistant: Forcibly deleting node 'node-5'.\nUser: Delete it now.", "completion": "\n<execute_command>\nkubectl delete node node-5 --force\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set resource requests for my deployment.\nAssistant: Updating 'my-deployment' with requests cpu=100m and memory=256Mi.\nUser: Update it.", "completion": "\n<execute_command>\nkubectl set resources deployment my-deployment --requests=cpu=100m,memory=256Mi\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove resource limits from my deployment.\nAssistant: Unsetting limits on 'my-deployment'.\nUser: Remove limits.", "completion": "\n<execute_command>\nkubectl set resources deployment my-deployment --limits=\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a pod with a custom command.\nAssistant: Running 'custom-pod' using ubuntu and executing a custom command.\nUser: Execute it.", "completion": "\n<execute_command>\nkubectl run custom-pod --image=ubuntu -- /bin/bash -c 'echo Custom Command'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need detailed information about my job.\nAssistant: Describing job 'my-job' for full details.\nUser: Show me.", "completion": "\n<execute_command>\nkubectl describe job my-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate my namespace with the owner information.\nAssistant: Adding annotation owner=teamB to 'my-namespace'.\nUser: Annotate it.", "completion": "\n<execute_command>\nkubectl annotate namespace my-namespace owner='teamB'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Label my pod with a version, overwriting if necessary.\nAssistant: Labeling 'my-pod' with version=1.0.\nUser: Apply label.", "completion": "\n<execute_command>\nkubectl label pod my-pod version=1.0 --overwrite\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch my service account to include an image pull secret.\nAssistant: Patching the default serviceaccount to add 'my-registry-key'.\nUser: Patch it.", "completion": "\n<execute_command>\nkubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"my-registry-key\"}]}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get logs from my container with timestamps and limit to 100 lines.\nAssistant: Displaying the last 100 lines of logs with timestamps for container 'my-container' in 'my-pod'.\nUser: Show logs.", "completion": "\n<execute_command>\nkubectl logs my-pod -c my-container --timestamps --tail=100\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe node 'node-1' and output in JSON format.\nAssistant: Fetching node 'node-1' details in JSON.\nUser: Show JSON.", "completion": "\n<execute_command>\nkubectl get node node-1 -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set a node selector for my deployment.\nAssistant: Patching 'my-deployment' to add nodeSelector disktype=ssd.\nUser: Update it.", "completion": "\n<execute_command>\nkubectl patch deployment my-deployment -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"disktype\": \"ssd\"}}}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate my statefulset with a version number.\nAssistant: Adding annotation version=2.1 to 'my-statefulset'.\nUser: Annotate it.", "completion": "\n<execute_command>\nkubectl annotate statefulset my-statefulset version=2.1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Label my cronjob for easier identification.\nAssistant: Labeling 'my-cronjob' with schedule=frequent.\nUser: Label it.", "completion": "\n<execute_command>\nkubectl label cronjob my-cronjob schedule=frequent\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret using a file but override the key name.\nAssistant: Creating secret 'file-secret' using customKey from config.txt.\nUser: Create it.", "completion": "\n<execute_command>\nkubectl create secret generic file-secret --from-file=customKey=config.txt\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a patch file to update my configmap.\nAssistant: Patching 'my-config' using the file config-patch.yaml.\nUser: Apply patch.", "completion": "\n<execute_command>\nkubectl patch configmap my-config --patch-file=config-patch.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to open an interactive shell inside my pod.\nAssistant: Executing an interactive shell in 'my-pod'.\nUser: Open shell.", "completion": "\n<execute_command>\nkubectl exec -it my-pod -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the replicaset in full detail.\nAssistant: Providing a detailed description of replicaset 'my-replicaset'.\nUser: Show details.", "completion": "\n<execute_command>\nkubectl describe replicaset my-replicaset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List only the running pods using a field selector.\nAssistant: Fetching pods where status.phase equals Running.\nUser: List them.", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.phase=Running\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all services with a specific label.\nAssistant: Retrieving services labeled tier=backend.\nUser: Show me the list.", "completion": "\n<execute_command>\nkubectl get services -l tier=backend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Restart my deployment with a specific timeout.\nAssistant: Rolling out restart for 'my-deployment' with a timeout of 60s.\nUser: Restart it.", "completion": "\n<execute_command>\nkubectl rollout restart deployment/my-deployment --timeout=60s\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show events related to a specific node.\nAssistant: Fetching events for node 'node-1'.\nUser: Provide events.", "completion": "\n<execute_command>\nkubectl get events --field-selector=involvedObject.kind=Node,involvedObject.name=node-1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods with their readiness status using custom columns.\nAssistant: Displaying pod name and readiness state.\nUser: Show output.", "completion": "\n<execute_command>\nkubectl get pods -o=custom-columns=NAME:.metadata.name,READY:.status.containerStatuses[*].ready\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch my deployment to add an environment variable for debugging.\nAssistant: Updating 'my-deployment' to include DEBUG=true in container 'my-container'.\nUser: Patch it.", "completion": "\n<execute_command>\nkubectl patch deployment my-deployment -p '{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"my-container\", \"env\": [{\"name\": \"DEBUG\", \"value\": \"true\"}]}]}}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all resources that are marked temporary.\nAssistant: Removing all resources with label temporary=true.\nUser: Delete them.", "completion": "\n<execute_command>\nkubectl delete all -l temporary=true\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I want to see the logs.\nAssistant: Which pod's logs would you like to see?\nUser: The 'payment-pod'.", "completion": "\n<execute_command>\nkubectl logs payment-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale a deployment for me.\nAssistant: Sure, which deployment do you want to scale?\nUser: 'analytics-service'.\nAssistant: To how many replicas?\nUser: 4.", "completion": "\n<execute_command>\nkubectl scale deployment analytics-service --replicas=4\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a pod.\nAssistant: Can you specify the name of the pod?\nUser: Yes, 'temp-pod'.", "completion": "\n<execute_command>\nkubectl delete pod temp-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Expose my app.\nAssistant: Could you provide the name of the deployment?\nUser: 'web-app'.\nAssistant: What port would you like to expose?\nUser: Port 80.", "completion": "\n<execute_command>\nkubectl expose deployment web-app --port=80\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the configmap.\nAssistant: Please specify the name of the configmap.\nUser: 'app-config'.", "completion": "\n<execute_command>\nkubectl get configmap app-config\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to run a command in a pod.\nAssistant: What's the name of the pod?\nUser: 'utility-pod'.\nAssistant: What command do you want to run?\nUser: 'ls /data'.", "completion": "\n<execute_command>\nkubectl exec utility-pod -- ls /data\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the services.\nAssistant: Do you want to see services in a specific namespace?\nUser: Yes, in 'prod'.", "completion": "\n<execute_command>\nkubectl get services -n prod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the deployment.\nAssistant: Could you specify the name of the deployment?\nUser: 'auth-service'.", "completion": "\n<execute_command>\nkubectl describe deployment auth-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Roll out restart.\nAssistant: Which deployment would you like to restart?\nUser: 'cache'.", "completion": "\n<execute_command>\nkubectl rollout restart deployment cache\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all pods.\nAssistant: Do you want to delete all pods in a specific namespace?\nUser: Yes, in 'test'.", "completion": "\n<execute_command>\nkubectl delete pods --all -n test\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get logs.\nAssistant: Which pod's logs do you want to retrieve?\nUser: 'api-pod'.\nAssistant: Do you want to follow the logs?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl logs api-pod -f\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a configmap.\nAssistant: What name should the configmap have?\nUser: 'settings'.\nAssistant: Do you want to create it from a file or literal values?\nUser: From file 'settings.conf'.", "completion": "\n<execute_command>\nkubectl create configmap settings --from-file=settings.conf\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show events.\nAssistant: Do you want to see events in a specific namespace?\nUser: No, all namespaces.", "completion": "\n<execute_command>\nkubectl get events --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply configurations.\nAssistant: Which file or directory contains the configurations?\nUser: The 'k8s-manifests' directory.", "completion": "\n<execute_command>\nkubectl apply -f k8s-manifests/\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, What's using my node resources?\nAssistant: Do you want to see the resource usage of all nodes?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pods with label.\nAssistant: What label selector should be used?\nUser: 'app=web'.", "completion": "\n<execute_command>\nkubectl get pods -l app=web\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a namespace.\nAssistant: Which namespace would you like to delete?\nUser: 'old-env'.", "completion": "\n<execute_command>\nkubectl delete namespace old-env\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Port forward.\nAssistant: Which pod do you want to port-forward?\nUser: 'db-pod'.\nAssistant: Which ports should be forwarded?\nUser: From local port 5432 to container port 5432.", "completion": "\n<execute_command>\nkubectl port-forward db-pod 5432:5432\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a command in a pod.\nAssistant: What's the name of the pod?\nUser: 'debug-pod'.\nAssistant: What command do you want to run?\nUser: '/bin/bash'.", "completion": "\n<execute_command>\nkubectl exec -it debug-pod -- /bin/bash\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the deployments.\nAssistant: Do you want to see deployments in a specific namespace?\nUser: Yes, in 'development'.", "completion": "\n<execute_command>\nkubectl get deployments -n development\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get service details.\nAssistant: Which service do you want to describe?\nUser: 'frontend-service'.", "completion": "\n<execute_command>\nkubectl describe service frontend-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Explain resource.\nAssistant: Which resource do you want to explain?\nUser: 'persistentvolumeclaim'.", "completion": "\n<execute_command>\nkubectl explain persistentvolumeclaim\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret.\nAssistant: What is the name of the secret?\nUser: 'db-credentials'.\nAssistant: Do you want to create it from literal values or a file?\nUser: From literals 'user=admin' and 'password=pass123'.", "completion": "\n<execute_command>\nkubectl create secret generic db-credentials --from-literal=user=admin --from-literal=password=pass123\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get nodes.\nAssistant: Do you want detailed information?\nUser: Yes, describe them.", "completion": "\n<execute_command>\nkubectl describe nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete pods with label.\nAssistant: What label should be used for deletion?\nUser: 'env=dev'.", "completion": "\n<execute_command>\nkubectl delete pods -l env=dev\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale statefulset.\nAssistant: Which statefulset do you want to scale?\nUser: 'zookeeper'.\nAssistant: To how many replicas?\nUser: 5.", "completion": "\n<execute_command>\nkubectl scale statefulset zookeeper --replicas=5\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch a deployment.\nAssistant: Which deployment do you want to patch?\nUser: 'api-deployment'.\nAssistant: Which patch file should be used?\nUser: 'api-patch.yaml'.", "completion": "\n<execute_command>\nkubectl patch deployment api-deployment --patch-file=api-patch.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get CRDs.\nAssistant: Do you want to list all Custom Resource Definitions?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl get crds\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a namespace.\nAssistant: What should be the name of the namespace?\nUser: 'integration-test'.", "completion": "\n<execute_command>\nkubectl create namespace integration-test\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the current context.\nAssistant: Do you want to display the current Kubernetes context?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl config current-context\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set context.\nAssistant: Which context do you want to switch to?\nUser: 'staging'.", "completion": "\n<execute_command>\nkubectl config use-context staging\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a busybox pod.\nAssistant: Do you want to run it interactively?\nUser: Yes.\nAssistant: What name should the pod have?\nUser: 'busybox-test'.", "completion": "\n<execute_command>\nkubectl run busybox-test --image=busybox -it -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all resources.\nAssistant: Are you sure you want to delete all resources in the cluster?\nUser: No, just in 'dev' namespace.", "completion": "\n<execute_command>\nkubectl delete all --all -n dev\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get events.\nAssistant: Do you want to see recent events?\nUser: Yes, from the last hour.", "completion": "\n<execute_command>\nkubectl get events --since=1h\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Explain ingress.\nAssistant: Do you want to explain the ingress resource?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl explain ingress\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Save pod logs.\nAssistant: Which pod's logs do you want to save?\nUser: 'web-pod'.\nAssistant: What is the filename?\nUser: 'web-pod.log'.", "completion": "\n<execute_command>\nkubectl logs web-pod > web-pod.log\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, View pod CPU usage.\nAssistant: Do you want to see CPU usage for all pods?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl top pods\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe node.\nAssistant: Which node would you like to describe?\nUser: 'node-worker-3'.", "completion": "\n<execute_command>\nkubectl describe node node-worker-3\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get service accounts.\nAssistant: In which namespace?\nUser: 'kube-system'.", "completion": "\n<execute_command>\nkubectl get serviceaccounts -n kube-system\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete job.\nAssistant: What is the name of the job?\nUser: 'data-import'.", "completion": "\n<execute_command>\nkubectl delete job data-import\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create persistent volume claim.\nAssistant: What is the name of the PVC?\nUser: 'data-pvc'.\nAssistant: Do you have a YAML file or specifications?\nUser: I have 'pvc.yaml'.", "completion": "\n<execute_command>\nkubectl apply -f pvc.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pods in wide format.\nAssistant: In which namespace?\nUser: 'production'.", "completion": "\n<execute_command>\nkubectl get pods -n production -o wide\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Label a node.\nAssistant: Which node do you want to label?\nUser: 'node-2'.\nAssistant: What label do you want to apply?\nUser: 'disk=ssd'.", "completion": "\n<execute_command>\nkubectl label nodes node-2 disk=ssd\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate a pod.\nAssistant: Which pod?\nUser: 'app-pod'.\nAssistant: What annotation?\nUser: 'description=\"Main application pod\"'.", "completion": "\n<execute_command>\nkubectl annotate pod app-pod description=\"Main application pod\"\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get cluster info.\nAssistant: Do you want to retrieve cluster information?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete deployment.\nAssistant: Which deployment should be deleted?\nUser: 'old-service'.", "completion": "\n<execute_command>\nkubectl delete deployment old-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get volume attachments.\nAssistant: Do you want to list all volume attachments?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl get volumeattachments\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Uncordon node.\nAssistant: Which node do you want to uncordon?\nUser: 'node-4'.", "completion": "\n<execute_command>\nkubectl uncordon node-4\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pod logs.\nAssistant: Which pod?\nUser: 'scheduler-pod'.\nAssistant: Do you want previous logs?\nUser: Yes.", "completion": "\n<execute_command>\nkubectl logs scheduler-pod --previous\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me logs.\nAssistant: Which pod's logs would you like to see?\nUser: For 'web-pod'.\nAssistant: Here are the logs for 'web-pod'.\n", "completion": "\n<execute_command>\nkubectl logs web-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the configmap.\nAssistant: Could you specify the name of the configmap?\nUser: It's 'app-settings'.\nAssistant: Fetching 'app-settings' configmap.\n", "completion": "\n<execute_command>\nkubectl get configmap app-settings\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a pod.\nAssistant: Please provide the name of the pod you wish to delete.\nUser: Delete 'test-pod'.\nAssistant: Deleting 'test-pod'.\n", "completion": "\n<execute_command>\nkubectl delete pod test-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Expose my app.\nAssistant: Which deployment should be exposed?\nUser: The 'backend'.\nAssistant: On which port would you like to expose it?\nUser: Port 8080.\nAssistant: Exposing deployment 'backend' on port 8080.\n", "completion": "\n<execute_command>\nkubectl expose deployment backend --port=8080\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the configmap.\nAssistant: Which configmap do you want to retrieve?\nUser: 'database-config'.\nAssistant: Retrieving 'database-config'.\n", "completion": "\n<execute_command>\nkubectl get configmap database-config\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, I need to run a command in a pod.\nAssistant: Could you specify the pod's name?\nUser: 'toolbox'.\nAssistant: What command would you like to run?\nUser: 'df -h'.\nAssistant: Running 'df -h' in 'toolbox'.\n", "completion": "\n<execute_command>\nkubectl exec toolbox -- df -h\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the services.\nAssistant: Do you want to list services in all namespaces or a specific one?\nUser: In 'development'.\nAssistant: Listing services in 'development' namespace.\n", "completion": "\n<execute_command>\nkubectl get services -n development\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the deployment.\nAssistant: Please provide the deployment name.\nUser: 'frontend'.\nAssistant: Describing deployment 'frontend'.\n", "completion": "\n<execute_command>\nkubectl describe deployment frontend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Roll out restart.\nAssistant: Which deployment would you like to restart?\nUser: 'api-server'.\nAssistant: Restarting deployment 'api-server'.\n", "completion": "\n<execute_command>\nkubectl rollout restart deployment api-server\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all pods.\nAssistant: Do you want to delete all pods in the current namespace or a specific one?\nUser: All pods in 'staging'.\nAssistant: Deleting all pods in 'staging' namespace.\n", "completion": "\n<execute_command>\nkubectl delete pods --all -n staging\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get logs.\nAssistant: Which pod's logs do you want to retrieve?\nUser: 'scheduler-pod'.\nAssistant: Do you need logs from a specific container?\nUser: No, just the pod logs.\nAssistant: Here are the logs for 'scheduler-pod'.\n", "completion": "\n<execute_command>\nkubectl logs scheduler-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a configmap.\nAssistant: What should be the name of the configmap?\nUser: 'app-config'.\nAssistant: Will it be from a file or literal values?\nUser: From file 'config.properties'.\nAssistant: Creating configmap 'app-config' from 'config.properties'.\n", "completion": "\n<execute_command>\nkubectl create configmap app-config --from-file=config.properties\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show events.\nAssistant: Do you want to see events for a particular namespace?\nUser: Yes, for 'production'.\nAssistant: Displaying events in 'production' namespace.\n", "completion": "\n<execute_command>\nkubectl get events -n production\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply configurations.\nAssistant: Which file or directory contains the configurations?\nUser: The 'deployments' directory.\nAssistant: Applying configurations from 'deployments'.\n", "completion": "\n<execute_command>\nkubectl apply -f deployments/\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, What's using my node resources?\nAssistant: Would you like to view resource usage for all nodes?\nUser: Yes, please.\nAssistant: Showing resource usage for all nodes.\n", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pods with label.\nAssistant: What label should be used for filtering?\nUser: 'tier=frontend'.\nAssistant: Listing pods with label 'tier=frontend'.\n", "completion": "\n<execute_command>\nkubectl get pods -l tier=frontend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a namespace.\nAssistant: Which namespace do you want to delete?\nUser: 'test-environment'.\nAssistant: Deleting namespace 'test-environment'.\n", "completion": "\n<execute_command>\nkubectl delete namespace test-environment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Port forward.\nAssistant: Which resource do you want to port-forward, a pod or service?\nUser: A pod named 'db-pod'.\nAssistant: Which ports should be forwarded?\nUser: Local port 3306 to container port 3306.\nAssistant: Setting up port forwarding for 'db-pod'.\n", "completion": "\n<execute_command>\nkubectl port-forward pod/db-pod 3306:3306\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a command in a pod.\nAssistant: What's the name of the pod?\nUser: 'maintenance-pod'.\nAssistant: What command do you want to execute?\nUser: 'top'.\nAssistant: Running 'top' in 'maintenance-pod'.\n", "completion": "\n<execute_command>\nkubectl exec -it maintenance-pod -- top\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the deployments.\nAssistant: Do you wish to see deployments in a specific namespace?\nUser: Yes, in 'testing'.\nAssistant: Listing deployments in 'testing' namespace.\n", "completion": "\n<execute_command>\nkubectl get deployments -n testing\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get service details.\nAssistant: Which service would you like to describe?\nUser: 'payment-service'.\nAssistant: Describing 'payment-service'.\n", "completion": "\n<execute_command>\nkubectl describe service payment-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Explain resource.\nAssistant: What resource do you want to explain?\nUser: 'statefulset'.\nAssistant: Explaining 'statefulset' resource.\n", "completion": "\n<execute_command>\nkubectl explain statefulset\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret.\nAssistant: What is the name of the secret?\nUser: 'api-keys'.\nAssistant: Will it be from literals or a file?\nUser: From literal 'key=abcd1234'.\nAssistant: Creating secret 'api-keys'.\n", "completion": "\n<execute_command>\nkubectl create secret generic api-keys --from-literal=key=abcd1234\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get nodes.\nAssistant: Do you want a detailed description or a list?\nUser: Just a list.\nAssistant: Listing all nodes.\n", "completion": "\n<execute_command>\nkubectl get nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete pods with label.\nAssistant: Which label should be used to select pods?\nUser: 'temp=true'.\nAssistant: Deleting pods with label 'temp=true'.\n", "completion": "\n<execute_command>\nkubectl delete pods -l temp=true\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale statefulset.\nAssistant: Which statefulset do you want to scale?\nUser: 'database'.\nAssistant: To how many replicas?\nUser: 3 replicas.\nAssistant: Scaling statefulset 'database' to 3 replicas.\n", "completion": "\n<execute_command>\nkubectl scale statefulset database --replicas=3\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch a deployment.\nAssistant: What is the name of the deployment?\nUser: 'web-deploy'.\nAssistant: Do you have a patch file?\nUser: Yes, 'web-patch.yaml'.\nAssistant: Patching deployment 'web-deploy' with 'web-patch.yaml'.\n", "completion": "\n<execute_command>\nkubectl patch deployment web-deploy --patch-file=web-patch.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get CRDs.\nAssistant: Do you want to list all Custom Resource Definitions?\nUser: Yes, please.\nAssistant: Listing all CRDs.\n", "completion": "\n<execute_command>\nkubectl get crds\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a namespace.\nAssistant: What should be the name of the namespace?\nUser: 'qa-environment'.\nAssistant: Creating namespace 'qa-environment'.\n", "completion": "\n<execute_command>\nkubectl create namespace qa-environment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get the current context.\nAssistant: Displaying the current Kubernetes context.\n", "completion": "\n<execute_command>\nkubectl config current-context\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set context.\nAssistant: Which context do you want to switch to?\nUser: 'production-cluster'.\nAssistant: Switching to context 'production-cluster'.\n", "completion": "\n<execute_command>\nkubectl config use-context production-cluster\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a busybox pod.\nAssistant: Would you like to run it interactively?\nUser: Yes.\nAssistant: What should be the pod name?\nUser: 'busybox-test'.\nAssistant: Running 'busybox-test' interactively.\n", "completion": "\n<execute_command>\nkubectl run busybox-test --image=busybox -it -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all resources.\nAssistant: Do you want to delete all resources in a particular namespace?\nUser: Yes, in 'temp'.\nAssistant: Deleting all resources in 'temp' namespace.\n", "completion": "\n<execute_command>\nkubectl delete all --all -n temp\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get events.\nAssistant: Would you like to see events for a specific namespace or all?\nUser: For 'default' namespace, please.\nAssistant: Showing events in 'default' namespace.\n", "completion": "\n<execute_command>\nkubectl get events -n default\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Explain ingress.\nAssistant: Providing explanation for the 'ingress' resource.\n", "completion": "\n<execute_command>\nkubectl explain ingress\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Save pod logs.\nAssistant: Which pod's logs do you want to save?\nUser: 'app-pod'.\nAssistant: What's the filename?\nUser: 'app-pod.log'.\nAssistant: Saving logs of 'app-pod' to 'app-pod.log'.\n", "completion": "\n<execute_command>\nkubectl logs app-pod > app-pod.log\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, View pod CPU usage.\nAssistant: Do you want to see CPU usage for all pods or a specific one?\nUser: For all pods.\nAssistant: Displaying CPU usage for all pods.\n", "completion": "\n<execute_command>\nkubectl top pods\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe node.\nAssistant: Which node would you like to describe?\nUser: 'node-1'.\nAssistant: Describing 'node-1'.\n", "completion": "\n<execute_command>\nkubectl describe node node-1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get service accounts.\nAssistant: In which namespace?\nUser: 'kube-public'.\nAssistant: Listing service accounts in 'kube-public'.\n", "completion": "\n<execute_command>\nkubectl get serviceaccounts -n kube-public\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete job.\nAssistant: What is the name of the job?\nUser: 'cleanup-job'.\nAssistant: Deleting job 'cleanup-job'.\n", "completion": "\n<execute_command>\nkubectl delete job cleanup-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create persistent volume claim.\nAssistant: What is the name of the PVC?\nUser: 'storage-pvc'.\nAssistant: Do you have a YAML file?\nUser: Yes, 'pvc.yaml'.\nAssistant: Creating PVC 'storage-pvc' from 'pvc.yaml'.\n", "completion": "\n<execute_command>\nkubectl apply -f pvc.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pods in wide format.\nAssistant: In which namespace?\nUser: 'apps'.\nAssistant: Listing pods in 'apps' namespace with wide output.\n", "completion": "\n<execute_command>\nkubectl get pods -n apps -o wide\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Label a node.\nAssistant: Which node do you want to label?\nUser: 'node-10'.\nAssistant: What label would you like to add?\nUser: 'zone=us-east-1a'.\nAssistant: Labeling 'node-10' with 'zone=us-east-1a'.\n", "completion": "\n<execute_command>\nkubectl label nodes node-10 zone=us-east-1a\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate a pod.\nAssistant: Which pod should be annotated?\nUser: 'backend-pod'.\nAssistant: What's the annotation?\nUser: 'description=\"Backend application pod\"'.\nAssistant: Annotating 'backend-pod'.\n", "completion": "\n<execute_command>\nkubectl annotate pod backend-pod description=\"Backend application pod\"\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get cluster info.\nAssistant: Retrieving cluster information.\n", "completion": "\n<execute_command>\nkubectl cluster-info\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete deployment.\nAssistant: Which deployment would you like to delete?\nUser: 'old-api'.\nAssistant: Deleting deployment 'old-api'.\n", "completion": "\n<execute_command>\nkubectl delete deployment old-api\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get volume attachments.\nAssistant: Do you want to list all volume attachments in the cluster?\nUser: Yes.\nAssistant: Listing all volume attachments.\n", "completion": "\n<execute_command>\nkubectl get volumeattachments\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Uncordon node.\nAssistant: Which node do you want to uncordon?\nUser: 'node-3'.\nAssistant: Uncordoning 'node-3'.\n", "completion": "\n<execute_command>\nkubectl uncordon node-3\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pod logs.\nAssistant: Which pod's logs are you interested in?\nUser: 'worker-pod'.\nAssistant: Do you need logs from a specific container?\nUser: Yes, 'app-container'.\nAssistant: Retrieving logs from 'app-container' in 'worker-pod'.\n", "completion": "\n<execute_command>\nkubectl logs worker-pod -c app-container\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show me the configmaps.\nAssistant: Do you want to list configmaps in a specific namespace?\nUser: Yes, in 'default'.\nAssistant: Listing configmaps in 'default' namespace.\n", "completion": "\n<execute_command>\nkubectl get configmaps -n default\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a service.\nAssistant: Which service should be deleted?\nUser: 'redis-service'.\nAssistant: Deleting service 'redis-service'.\n", "completion": "\n<execute_command>\nkubectl delete service redis-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe a pod.\nAssistant: Please provide the pod's name.\nUser: 'batch-worker'.\nAssistant: Describing pod 'batch-worker'.\n", "completion": "\n<execute_command>\nkubectl describe pod batch-worker\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all namespaces.\nAssistant: Displaying all namespaces.\n", "completion": "\n<execute_command>\nkubectl get namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a configuration.\nAssistant: What is the path to the configuration file or directory?\nUser: 'service.yaml'.\nAssistant: Applying configuration from 'service.yaml'.\n", "completion": "\n<execute_command>\nkubectl apply -f service.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Roll back deployment.\nAssistant: Which deployment do you want to roll back?\nUser: 'frontend'.\nAssistant: Rolling back deployment 'frontend'.\n", "completion": "\n<execute_command>\nkubectl rollout undo deployment frontend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get daemonsets.\nAssistant: Do you want to list daemonsets in all namespaces or a specific one?\nUser: All namespaces.\nAssistant: Listing daemonsets in all namespaces.\n", "completion": "\n<execute_command>\nkubectl get daemonsets --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Backup etcd.\nAssistant: Are you looking for the command to back up etcd data?\nUser: Yes, please.\nAssistant: Here's how to back up etcd.\n", "completion": "\n<execute_command>\nETCDCTL_API=3 etcdctl snapshot save snapshot.db --endpoints=<Endpoints> --cacert=<CA Certificate> --cert=<Certificate> --key=<Key>\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale replicaset.\nAssistant: Which replicaset do you want to scale?\nUser: 'web-rs'.\nAssistant: To how many replicas?\nUser: 2.\nAssistant: Scaling replicaset 'web-rs' to 2 replicas.\n", "completion": "\n<execute_command>\nkubectl scale rs web-rs --replicas=2\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a cronjob.\nAssistant: What's the name of the cronjob?\nUser: 'data-sync'.\nAssistant: What's the schedule?\nUser: Every day at midnight.\nAssistant: Creating cronjob 'data-sync' with specified schedule.\n", "completion": "\n<execute_command>\nkubectl create cronjob data-sync --image=busybox --schedule=\"0 0 * * *\" -- /bin/sh -c 'echo Data sync'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get cluster roles.\nAssistant: Listing all cluster roles.\n", "completion": "\n<execute_command>\nkubectl get clusterroles\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a job.\nAssistant: What's the name of the job?\nUser: 'batch-process'.\nAssistant: Do you have a YAML file?\nUser: No, create it with the image 'alpine'.\nAssistant: Running job 'batch-process' using 'alpine' image.\n", "completion": "\n<execute_command>\nkubectl create job batch-process --image=alpine -- /bin/sh -c 'echo Processing'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Drain a node.\nAssistant: Which node would you like to drain?\nUser: 'node-5'.\nAssistant: Draining 'node-5'.\n", "completion": "\n<execute_command>\nkubectl drain node-5 --ignore-daemonsets --delete-local-data\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Install metrics server.\nAssistant: Are you looking for the command to install metrics server?\nUser: Yes.\nAssistant: You can apply the metrics server manifest.\n", "completion": "\n<execute_command>\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Rollout status.\nAssistant: For which deployment would you like to check the rollout status?\nUser: 'cache'.\nAssistant: Checking rollout status for 'cache'.\n", "completion": "\n<execute_command>\nkubectl rollout status deployment cache\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get hpa.\nAssistant: Do you want to list Horizontal Pod Autoscalers in a specific namespace?\nUser: No, all namespaces.\nAssistant: Listing HPAs in all namespaces.\n", "completion": "\n<execute_command>\nkubectl get hpa --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch a node.\nAssistant: Which node would you like to patch?\nUser: 'node-2'.\nAssistant: Do you have a patch file or JSON string?\nUser: JSON string.\nAssistant: What is the patch?\nUser: Add label 'role=worker'.\nAssistant: Patching 'node-2' to add label 'role=worker'.\n", "completion": "\n<execute_command>\nkubectl patch node node-2 -p '{\"metadata\": {\"labels\": {\"role\": \"worker\"}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get resource quotas.\nAssistant: In which namespace?\nUser: 'finance'.\nAssistant: Listing resource quotas in 'finance'.\n", "completion": "\n<execute_command>\nkubectl get resourcequotas -n finance\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create deployment from image.\nAssistant: What should be the deployment name?\nUser: 'nginx-deployment'.\nAssistant: Which image to use?\nUser: 'nginx:1.19'.\nAssistant: Creating deployment 'nginx-deployment'.\n", "completion": "\n<execute_command>\nkubectl create deployment nginx-deployment --image=nginx:1.19\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get storage classes.\nAssistant: Listing all storage classes.\n", "completion": "\n<execute_command>\nkubectl get storageclass\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Edit configmap.\nAssistant: Which configmap would you like to edit?\nUser: 'app-config'.\nAssistant: Opening editor for 'app-config'.\n", "completion": "\n<execute_command>\nkubectl edit configmap app-config\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get resources.\nAssistant: Would you like to get all resources in a namespace?\nUser: Yes, in 'default'.\nAssistant: Listing all resources in 'default' namespace.\n", "completion": "\n<execute_command>\nkubectl get all -n default\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run a pod temporarily.\nAssistant: What should be the pod name?\nUser: 'temp-pod'.\nAssistant: Which image?\nUser: 'alpine'.\nAssistant: Running temporary pod 'temp-pod'.\n", "completion": "\n<execute_command>\nkubectl run temp-pod --rm -it --image=alpine -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get endpoints.\nAssistant: Would you like to list endpoints for a specific service?\nUser: Yes, 'web-service'.\nAssistant: Getting endpoints for 'web-service'.\n", "completion": "\n<execute_command>\nkubectl get endpoints web-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe serviceaccount.\nAssistant: Which service account should be described?\nUser: 'builder-sa'.\nAssistant: Describing service account 'builder-sa'.\n", "completion": "\n<execute_command>\nkubectl describe serviceaccount builder-sa\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show kube-system pods.\nAssistant: Listing pods in 'kube-system' namespace.\n", "completion": "\n<execute_command>\nkubectl get pods -n kube-system\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create cluster role binding.\nAssistant: What's the name of the binding?\nUser: 'admin-binding'.\nAssistant: Which cluster role should be bound?\nUser: 'cluster-admin'.\nAssistant: Which user or group?\nUser: User 'john'.\nAssistant: Creating cluster role binding 'admin-binding'.\n", "completion": "\n<execute_command>\nkubectl create clusterrolebinding admin-binding --clusterrole=cluster-admin --user=john\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Taint a node.\nAssistant: Which node do you want to taint?\nUser: 'node-4'.\nAssistant: What's the taint key and effect?\nUser: Key 'dedicated', value 'gpu', effect 'NoSchedule'.\nAssistant: Tainting 'node-4'.\n", "completion": "\n<execute_command>\nkubectl taint nodes node-4 dedicated=gpu:NoSchedule\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove taint from node.\nAssistant: Which node?\nUser: 'node-4'.\nAssistant: What's the taint key to remove?\nUser: 'dedicated'.\nAssistant: Removing taint from 'node-4'.\n", "completion": "\n<execute_command>\nkubectl taint nodes node-4 dedicated-\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get secrets.\nAssistant: Do you want to list secrets in a specific namespace?\nUser: In 'prod'.\nAssistant: Listing secrets in 'prod' namespace.\n", "completion": "\n<execute_command>\nkubectl get secrets -n prod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe secret.\nAssistant: Which secret would you like to describe?\nUser: 'docker-registry'.\nAssistant: Describing secret 'docker-registry'.\n", "completion": "\n<execute_command>\nkubectl describe secret docker-registry\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get persistent volumes.\nAssistant: Listing all persistent volumes.\n", "completion": "\n<execute_command>\nkubectl get pv\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Edit deployment.\nAssistant: Which deployment would you like to edit?\nUser: 'api-server'.\nAssistant: Opening editor for 'api-server'.\n", "completion": "\n<execute_command>\nkubectl edit deployment api-server\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create serviceaccount.\nAssistant: What is the name of the service account?\nUser: 'deployer'.\nAssistant: Creating service account 'deployer'.\n", "completion": "\n<execute_command>\nkubectl create serviceaccount deployer\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Rollout history.\nAssistant: For which deployment?\nUser: 'frontend'.\nAssistant: Showing rollout history for 'frontend'.\n", "completion": "\n<execute_command>\nkubectl rollout history deployment frontend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pod status.\nAssistant: Which pod's status do you want to check?\nUser: 'nginx-pod'.\nAssistant: Getting status of 'nginx-pod'.\n", "completion": "\n<execute_command>\nkubectl get pod nginx-pod -o jsonpath='{.status.phase}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a role.\nAssistant: What is the name of the role?\nUser: 'pod-viewer'.\nAssistant: Which verbs and resources?\nUser: Verbs 'get', 'watch'; resource 'pods'.\nAssistant: Creating role 'pod-viewer'.\n", "completion": "\n<execute_command>\nkubectl create role pod-viewer --verb=get,watch --resource=pods\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete secret.\nAssistant: Which secret would you like to delete?\nUser: 'old-keys'.\nAssistant: Deleting secret 'old-keys'.\n", "completion": "\n<execute_command>\nkubectl delete secret old-keys\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale deployment.\nAssistant: Which deployment do you want to scale?\nUser: 'analytics'.\nAssistant: To how many replicas?\nUser: 6.\nAssistant: Scaling 'analytics' to 6 replicas.\n", "completion": "\n<execute_command>\nkubectl scale deployment analytics --replicas=6\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Copy file to pod.\nAssistant: Which pod and container?\nUser: Pod 'app-pod', container 'main'.\nAssistant: Source file and destination path?\nUser: 'local.txt' to '/app/remote.txt'.\nAssistant: Copying file to pod.\n", "completion": "\n<execute_command>\nkubectl cp local.txt app-pod:/app/remote.txt -c main\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create cluster role.\nAssistant: What's the name of the cluster role?\nUser: 'cluster-reader'.\nAssistant: Which verbs and resources?\nUser: Verb 'get'; resources 'nodes', 'pods'.\nAssistant: Creating cluster role 'cluster-reader'.\n", "completion": "\n<execute_command>\nkubectl create clusterrole cluster-reader --verb=get --resource=nodes,pods\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show API versions.\nAssistant: Displaying all available API versions.\n", "completion": "\n<execute_command>\nkubectl api-versions\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply labels to all pods.\nAssistant: Which label would you like to apply?\nUser: 'environment=production'.\nAssistant: Labeling all pods with 'environment=production'.\n", "completion": "\n<execute_command>\nkubectl label pods --all environment=production\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a pod from YAML.\nAssistant: What's the filename of the YAML?\nUser: 'pod.yaml'.\nAssistant: Creating pod from 'pod.yaml'.\n", "completion": "\n<execute_command>\nkubectl apply -f pod.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete ingress.\nAssistant: Which ingress would you like to delete?\nUser: 'web-ingress'.\nAssistant: Deleting ingress 'web-ingress'.\n", "completion": "\n<execute_command>\nkubectl delete ingress web-ingress\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Edit service.\nAssistant: Which service would you like to edit?\nUser: 'backend-service'.\nAssistant: Opening editor for 'backend-service'.\n", "completion": "\n<execute_command>\nkubectl edit service backend-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Change image of deployment.\nAssistant: Which deployment?\nUser: 'cache-deployment'.\nAssistant: What's the new image?\nUser: 'redis:6.0'.\nAssistant: Updating image for 'cache-deployment'.\n", "completion": "\n<execute_command>\nkubectl set image deployment/cache-deployment cache-container=redis:6.0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get PVCs.\nAssistant: Would you like to list PVCs in a specific namespace?\nUser: Yes, 'database'.\nAssistant: Listing PVCs in 'database'.\n", "completion": "\n<execute_command>\nkubectl get pvc -n database\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete PV.\nAssistant: Which persistent volume would you like to delete?\nUser: 'pv-storage'.\nAssistant: Deleting PV 'pv-storage'.\n", "completion": "\n<execute_command>\nkubectl delete pv pv-storage\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set context namespace.\nAssistant: Which namespace should be set for the current context?\nUser: 'development'.\nAssistant: Setting namespace 'development'.\n", "completion": "\n<execute_command>\nkubectl config set-context --current --namespace=development\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pods sorted by restart count.\nAssistant: Listing pods sorted by their restart counts.\n", "completion": "\n<execute_command>\nkubectl get pods --sort-by='.status.containerStatuses[0].restartCount'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, View node labels.\nAssistant: Which node's labels would you like to see?\nUser: 'node-7'.\nAssistant: Displaying labels for 'node-7'.\n", "completion": "\n<execute_command>\nkubectl get node node-7 --show-labels\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get CSR.\nAssistant: Do you want to list all Certificate Signing Requests?\nUser: Yes.\nAssistant: Listing all CSRs.\n", "completion": "\n<execute_command>\nkubectl get csr\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Approve CSR.\nAssistant: Which CSR would you like to approve?\nUser: 'csr-123'.\nAssistant: Approving 'csr-123'.\n", "completion": "\n<execute_command>\nkubectl certificate approve csr-123\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Debug a node.\nAssistant: Which node do you want to debug?\nUser: 'node-8'.\nAssistant: Starting debug session on 'node-8'.\n", "completion": "\n<execute_command>\nkubectl debug node/node-8 --image=busybox\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get component statuses.\nAssistant: Displaying status of cluster components.\n", "completion": "\n<execute_command>\nkubectl get componentstatuses\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Check API resources.\nAssistant: Listing all API resources available in the cluster.\n", "completion": "\n<execute_command>\nkubectl api-resources\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete pod by label.\nAssistant: What label should be used to select the pods?\nUser: 'version=old'.\nAssistant: Deleting pods with label 'version=old'.\n", "completion": "\n<execute_command>\nkubectl delete pods -l version=old\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a configuration directory recursively.\nAssistant: What is the path to the directory?\nUser: 'configs/'.\nAssistant: Applying configurations from 'configs/' recursively.\n", "completion": "\n<execute_command>\nkubectl apply -R -f configs/\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get roles in a namespace.\nAssistant: Which namespace?\nUser: 'security'.\nAssistant: Listing roles in 'security'.\n", "completion": "\n<execute_command>\nkubectl get roles -n security\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create horizontal pod autoscaler.\nAssistant: For which deployment?\nUser: 'api-server'.\nAssistant: What's the min and max replicas?\nUser: Min 2, max 5.\nAssistant: Setting CPU utilization target to 50%.\n", "completion": "\n<execute_command>\nkubectl autoscale deployment api-server --cpu-percent=50 --min=2 --max=5\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get events sorted by timestamp.\nAssistant: Listing events sorted by timestamp.\n", "completion": "\n<execute_command>\nkubectl get events --sort-by=.metadata.creationTimestamp\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get available kubectl commands.\nAssistant: Displaying help for kubectl.\n", "completion": "\n<execute_command>\nkubectl help\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create job from cronjob.\nAssistant: Which cronjob?\nUser: 'daily-backup'.\nAssistant: Naming the job 'backup-job'.\nAssistant: Creating job 'backup-job' from cronjob 'daily-backup'.\n", "completion": "\n<execute_command>\nkubectl create job --from=cronjob/daily-backup backup-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run pod on specific node.\nAssistant: What is the pod name?\nUser: 'node-pod'.\nAssistant: Which node?\nUser: 'node-4'.\nAssistant: Running 'node-pod' on 'node-4'.\n", "completion": "\n<execute_command>\nkubectl run node-pod --image=nginx --overrides='{\"spec\": {\"nodeName\": \"node-4\"}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Start port forwarding for service.\nAssistant: Which service?\nUser: 'web-service'.\nAssistant: Which ports?\nUser: Local 8080 to service port 80.\nAssistant: Starting port forwarding.\n", "completion": "\n<execute_command>\nkubectl port-forward service/web-service 8080:80\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get all pods in JSON format.\nAssistant: Listing all pods in JSON format.\n", "completion": "\n<execute_command>\nkubectl get pods -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate namespace.\nAssistant: Which namespace do you want to annotate?\nUser: 'analytics'.\nAssistant: What's the annotation?\nUser: 'owner=DataTeam'.\nAssistant: Annotating namespace 'analytics'.\n", "completion": "\n<execute_command>\nkubectl annotate namespace analytics owner=DataTeam\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get nodes in YAML format.\nAssistant: Retrieving nodes in YAML format.\n", "completion": "\n<execute_command>\nkubectl get nodes -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe replicationcontroller.\nAssistant: Which replication controller?\nUser: 'web-rc'.\nAssistant: Describing 'web-rc'.\n", "completion": "\n<execute_command>\nkubectl describe rc web-rc\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get endpointslices.\nAssistant: Listing all endpointslices.\n", "completion": "\n<execute_command>\nkubectl get endpointslices\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show kubeconfig.\nAssistant: Displaying the kubeconfig settings.\n", "completion": "\n<execute_command>\nkubectl config view\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete pod gracefully.\nAssistant: Which pod?\nUser: 'graceful-pod'.\nAssistant: Deleting 'graceful-pod' with default grace period.\n", "completion": "\n<execute_command>\nkubectl delete pod graceful-pod\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show quota.\nAssistant: In which namespace?\nUser: 'dev'.\nAssistant: Displaying resource quota in 'dev' namespace.\n", "completion": "\n<execute_command>\nkubectl get quota -n dev\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Copy from pod to local.\nAssistant: From which pod and path?\nUser: 'app-pod', path '/app/logs/'.\nAssistant: To which local path?\nUser: './logs/'.\nAssistant: Copying files.\n", "completion": "\n<execute_command>\nkubectl cp app-pod:/app/logs/. ./logs/\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete all CRDs.\nAssistant: Are you sure you want to delete all Custom Resource Definitions?\nUser: Yes.\nAssistant: Deleting all CRDs.\n", "completion": "\n<execute_command>\nkubectl delete crd --all\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get pod logs since 1 hour.\nAssistant: Which pod?\nUser: 'worker-pod'.\nAssistant: Retrieving logs since 1 hour.\n", "completion": "\n<execute_command>\nkubectl logs worker-pod --since=1h\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create priority class.\nAssistant: What's the name?\nUser: 'high-priority'.\nAssistant: What's the value?\nUser: 1000.\nAssistant: Is it global default?\nUser: No.\nAssistant: Creating priority class 'high-priority'.\n", "completion": "\n<execute_command>\nkubectl create priorityclass high-priority --value=1000 --description=\"High priority class\"\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Cordon node.\nAssistant: Which node?\nUser: 'node-6'.\nAssistant: Cordoning 'node-6'.\n", "completion": "\n<execute_command>\nkubectl cordon node-6\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List replicasets.\nAssistant: Do you want to list replicasets in all namespaces?\nUser: No, just 'default'.\nAssistant: Listing replicasets in 'default' namespace.\n", "completion": "\n<execute_command>\nkubectl get rs -n default\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get API resources in JSON format.\nAssistant: Displaying API resources in JSON.\n", "completion": "\n<execute_command>\nkubectl api-resources -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Retrieve logs for container 'sidecar' in pod 'frontend-pod'.\nAssistant: Which container's logs do you need?\nUser: 'sidecar'.\nAssistant: Fetching logs for container 'sidecar' in pod 'frontend-pod'.\n", "completion": "\n<execute_command>\nkubectl logs frontend-pod -c sidecar\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all deployments with labels.\nAssistant: Would you like the output to include labels?\nUser: Yes, please show labels.\nAssistant: Listing deployments with their labels.\n", "completion": "\n<execute_command>\nkubectl get deployments --show-labels\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the configuration of service 'cache-service'.\nAssistant: Could you confirm the service name?\nUser: It is 'cache-service'.\nAssistant: Describing the service 'cache-service'.\n", "completion": "\n<execute_command>\nkubectl describe service cache-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Scale deployment 'db-deploy'.\nAssistant: How many replicas should it have?\nUser: Increase to 4 replicas.\nAssistant: Scaling deployment 'db-deploy' to 4 replicas.\n", "completion": "\n<execute_command>\nkubectl scale deployment db-deploy --replicas=4\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods on a specific node.\nAssistant: Which node do you want to query?\nUser: 'worker-node-1'.\nAssistant: Listing pods running on node 'worker-node-1'.\n", "completion": "\n<execute_command>\nkubectl get pods --field-selector spec.nodeName=worker-node-1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get detailed logs of pod 'app-pod' with timestamps and tail 200 lines.\nAssistant: Retrieving logs with timestamps and tailing 200 lines for pod 'app-pod'.\nUser: Please do it.\n", "completion": "\n<execute_command>\nkubectl logs app-pod --timestamps --tail=200\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret from a file 'credentials.json'.\nAssistant: What should the secret be named?\nUser: 'json-secret'.\nAssistant: Creating secret 'json-secret' from file 'credentials.json'.\n", "completion": "\n<execute_command>\nkubectl create secret generic json-secret --from-file=credentials.json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Update deployment 'api-deploy' to use a new environment variable 'DEBUG=1'.\nAssistant: Updating environment variable 'DEBUG' for deployment 'api-deploy'.\nUser: Yes, update it.\n", "completion": "\n<execute_command>\nkubectl set env deployment/api-deploy DEBUG=1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Inspect current kubeconfig cluster information.\nAssistant: Displaying the current kubeconfig information (minified).\nUser: Show it.\n", "completion": "\n<execute_command>\nkubectl config view --minify\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Roll out restart for deployment 'notification'.\nAssistant: Which deployment should be restarted?\nUser: 'notification'.\nAssistant: Restarting deployment 'notification'.\n", "completion": "\n<execute_command>\nkubectl rollout restart deployment notification\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List persistent volume claims with status details.\nAssistant: Displaying all PVCs along with their status.\nUser: Show detailed status.\n", "completion": "\n<execute_command>\nkubectl get pvc --output=wide\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe node 'worker-node-2' for resource details.\nAssistant: Providing a detailed description for node 'worker-node-2'.\nUser: Show the details.\n", "completion": "\n<execute_command>\nkubectl describe node worker-node-2\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all pods in JSON format.\nAssistant: Displaying all pods with the JSON output.\nUser: Show output in JSON.\n", "completion": "\n<execute_command>\nkubectl get pods -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get a summary of all services across all namespaces.\nAssistant: Listing all services across every namespace.\nUser: Provide the summary.\n", "completion": "\n<execute_command>\nkubectl get services --all-namespaces\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Monitor logs of pod 'worker-pod' continuously.\nAssistant: Starting live tail of logs for 'worker-pod'.\nUser: Please start streaming.\n", "completion": "\n<execute_command>\nkubectl logs worker-pod -f\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe replica set 'backend-rs'.\nAssistant: Retrieving detailed information for replica set 'backend-rs'.\nUser: Show me the details.\n", "completion": "\n<execute_command>\nkubectl describe rs backend-rs\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods with label 'app=backend'.\nAssistant: Filtering pods with the label 'app=backend'.\nUser: List those pods.\n", "completion": "\n<execute_command>\nkubectl get pods -l app=backend\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a rolebinding for role 'pod-reader' to serviceaccount 'default' in namespace 'dev'.\nAssistant: Creating rolebinding for role 'pod-reader' bound to the 'default' service account in 'dev'.\nUser: Go ahead.\n", "completion": "\n<execute_command>\nkubectl create rolebinding pod-reader-binding --role=pod-reader --serviceaccount=dev:default -n dev\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Explain the deployment resource in Kubernetes.\nAssistant: Would you like an explanation for the deployment resource syntax?\nUser: Yes, please explain.\nAssistant: Here is an explanation of the deployment resource.\n", "completion": "\n<execute_command>\nkubectl explain deployment\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show the revision history for deployment 'cache-deploy'.\nAssistant: Retrieving rollout history for deployment 'cache-deploy'.\nUser: Show revisions.\n", "completion": "\n<execute_command>\nkubectl rollout history deployment cache-deploy\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret from an environment file '.env'.\nAssistant: What name should the secret have?\nUser: 'env-secret'.\nAssistant: Creating secret 'env-secret' from '.env'.\n", "completion": "\n<execute_command>\nkubectl create secret generic env-secret --from-env-file=.env\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all nodes with status details.\nAssistant: Displaying the list of nodes with their statuses.\nUser: Show statuses.\n", "completion": "\n<execute_command>\nkubectl get nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Apply a YAML file 'config.yaml'.\nAssistant: Applying the configuration from the file 'config.yaml'.\nUser: Execute the apply command.\n", "completion": "\n<execute_command>\nkubectl apply -f config.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete a service named 'old-service'.\nAssistant: Confirming deletion of service 'old-service'.\nUser: Yes, delete it.\n", "completion": "\n<execute_command>\nkubectl delete service old-service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Edit the replicaset 'frontend-rs' interactively.\nAssistant: Opening the editor for replicaset 'frontend-rs'.\nUser: Please open it.\n", "completion": "\n<execute_command>\nkubectl edit rs frontend-rs\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe the role 'pod-manager'.\nAssistant: Fetching details for role 'pod-manager'.\nUser: Show description.\n", "completion": "\n<execute_command>\nkubectl describe role pod-manager\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List deployments sorted alphabetically by name.\nAssistant: Sorting deployments by name.\nUser: List sorted deployments.\n", "completion": "\n<execute_command>\nkubectl get deployments --sort-by=.metadata.name\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get previous logs for pod 'test-pod'.\nAssistant: Which pod's previous logs do you need?\nUser: 'test-pod'.\nAssistant: Retrieving previous logs for 'test-pod'.\n", "completion": "\n<execute_command>\nkubectl logs test-pod --previous\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Annotate deployment 'analytics' with version '2.0'.\nAssistant: Annotating deployment 'analytics' with version=2.0.\nUser: Certainly.\n", "completion": "\n<execute_command>\nkubectl annotate deployment analytics version=2.0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Remove the environment variable 'DEBUG' from deployment 'web-app'.\nAssistant: Confirming removal of variable 'DEBUG'.\nUser: Yes, remove it.\n", "completion": "\n<execute_command>\nkubectl set env deployment web-app DEBUG-\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods with custom columns for name and pod IP.\nAssistant: Displaying pods with columns NAME and IP.\nUser: Show table output.\n", "completion": "\n<execute_command>\nkubectl get pods -o=custom-columns=NAME:.metadata.name,IP:.status.podIP\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Run an interactive shell in pod 'debug-helper' using busybox.\nAssistant: Launching interactive shell inside pod 'debug-helper'.\nUser: Start session.\n", "completion": "\n<execute_command>\nkubectl exec -it debug-helper -- /bin/sh\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe all secrets in JSON format.\nAssistant: Retrieving all secrets as JSON output.\nUser: Please show JSON.\n", "completion": "\n<execute_command>\nkubectl get secrets -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods on nodes with label 'disktype=ssd'.\nAssistant: Listing nodes with label 'disktype=ssd'.\nUser: Then list pods on those nodes.\n", "completion": "\n<execute_command>\nkubectl get nodes -l disktype=ssd\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Show diff between live configuration and 'deploy.yaml'.\nAssistant: Performing a diff on 'deploy.yaml'.\nUser: Show differences.\n", "completion": "\n<execute_command>\nkubectl diff -f deploy.yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get metrics for pod 'metrics-pod' in JSON.\nAssistant: Retrieving metrics in JSON for 'metrics-pod'.\nUser: Output JSON, please.\n", "completion": "\n<execute_command>\nkubectl top pod metrics-pod -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe clusterrolebinding 'admin-binding'.\nAssistant: Describing the clusterrolebinding 'admin-binding'.\nUser: Show me details.\n", "completion": "\n<execute_command>\nkubectl describe clusterrolebinding admin-binding\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pod logs with timestamps for 'exit-pod'.\nAssistant: Retrieving logs for 'exit-pod' with timestamps.\nUser: Show the logs.\n", "completion": "\n<execute_command>\nkubectl logs exit-pod --timestamps\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete deployment 'temp-deploy'.\nAssistant: Confirm deletion of 'temp-deploy'.\nUser: Yes, delete it.\n", "completion": "\n<execute_command>\nkubectl delete deployment temp-deploy\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get resource usage for all nodes.\nAssistant: Displaying resource usage for all cluster nodes.\nUser: Show me the metrics.\n", "completion": "\n<execute_command>\nkubectl top nodes\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get rollout history for deployment 'worker-deploy'.\nAssistant: Showing rollout history for 'worker-deploy'.\nUser: Provide history details.\n", "completion": "\n<execute_command>\nkubectl rollout history deployment worker-deploy\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a secret from file 'token.txt' with key override 'access-token'.\nAssistant: Creating secret 'token-secret' using the file with custom key.\nUser: Create it, please.\n", "completion": "\n<execute_command>\nkubectl create secret generic token-secret --from-file=access-token=token.txt\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe service account 'build-bot' in namespace 'ci'.\nAssistant: Describing service account 'build-bot' in the 'ci' namespace.\nUser: Show details.\n", "completion": "\n<execute_command>\nkubectl describe serviceaccount build-bot -n ci\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List pods that have restarted at least once.\nAssistant: Listing pods with non-zero restart counts.\nUser: Show those pods.\n", "completion": "\n<execute_command>\nkubectl get pods --field-selector=status.containerStatuses.restartCount>0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get YAML output of replication controller 'old-rc'.\nAssistant: Retrieving YAML for replication controller 'old-rc'.\nUser: Show YAML output.\n", "completion": "\n<execute_command>\nkubectl get rc old-rc -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch pod 'my-pod' to add an annotation 'env=staging'.\nAssistant: Patching pod 'my-pod' to add the annotation 'env=staging'.\nUser: Please update it.\n", "completion": "\n<execute_command>\nkubectl patch pod my-pod -p '{\"metadata\":{\"annotations\":{\"env\":\"staging\"}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Explain the service resource.\nAssistant: Providing an explanation for the service resource.\nUser: Explain it.\n", "completion": "\n<execute_command>\nkubectl explain service\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List ingress resources sorted by name.\nAssistant: Displaying ingress resources sorted alphabetically by their name.\nUser: List them.\n", "completion": "\n<execute_command>\nkubectl get ingress --sort-by=.metadata.name\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a cluster role 'resource-reader' for resources pods and services.\nAssistant: Creating cluster role 'resource-reader' with get, list, watch permissions on pods and services.\nUser: Proceed with creation.\n", "completion": "\n<execute_command>\nkubectl create clusterrole resource-reader --verb=get,list,watch --resource=pods,services\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete job 'old-job'.\nAssistant: Deleting job 'old-job' as requested.\nUser: Yes, delete it.\n", "completion": "\n<execute_command>\nkubectl delete job old-job\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all pods with custom JSON output using jsonpath.\nAssistant: Displaying pod names using a jsonpath query.\nUser: Show the output.\n", "completion": "\n<execute_command>\nkubectl get pods -o jsonpath='{.items[*].metadata.name}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Patch service 'web-service' to update its annotation 'version=updated'.\nAssistant: Patching service 'web-service' with the new annotation 'version=updated'.\nUser: Apply the patch.\n", "completion": "\n<execute_command>\nkubectl patch service web-service -p '{\"metadata\":{\"annotations\":{\"version\":\"updated\"}}}'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Describe custom resource instance 'instance1' of type 'myresource'.\nAssistant: Describing custom resource 'instance1' of type 'myresource'.\nUser: Show details.\n", "completion": "\n<execute_command>\nkubectl describe myresource instance1\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Check Horizontal Pod Autoscaler status for deployment 'api'.\nAssistant: Displaying HPA status for deployment 'api' in the default namespace.\nUser: Provide HPA details.\n", "completion": "\n<execute_command>\nkubectl get hpa -n default | grep api\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get list of namespaces in YAML format.\nAssistant: Retrieving namespaces as YAML output.\nUser: Show YAML.\n", "completion": "\n<execute_command>\nkubectl get namespaces -o yaml\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a configmap 'app-info' with literal values 'env=prod' and 'version=1.0'.\nAssistant: Creating configmap 'app-info' with specified literal values.\nUser: Create it.\n", "completion": "\n<execute_command>\nkubectl create configmap app-info --from-literal=env=prod --from-literal=version=1.0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Delete replication controller 'old-rc'.\nAssistant: Deleting replication controller 'old-rc'.\nUser: Confirm deletion.\n", "completion": "\n<execute_command>\nkubectl delete rc old-rc\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Switch kubeconfig context to 'dev-cluster'.\nAssistant: Switching context to 'dev-cluster'.\nUser: Execute context switch.\n", "completion": "\n<execute_command>\nkubectl config use-context dev-cluster\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Render pod details in table format with columns for name, status, and node.\nAssistant: Listing pods with custom columns for name, status, and node.\nUser: Show the table.\n", "completion": "\n<execute_command>\nkubectl get pods -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase,NODE:.spec.nodeName\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Check resource limits for deployment 'backend'.\nAssistant: Displaying resource limits for deployment 'backend'.\nUser: Show resource details.\n", "completion": "\n<execute_command>\nkubectl describe deployment backend | grep -A 5 'Limits'\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List services with their external IP addresses.\nAssistant: Displaying a table of services with external IP addresses.\nUser: List them in detail.\n", "completion": "\n<execute_command>\nkubectl get services -o=custom-columns=NAME:.metadata.name,EXTERNAL-IP:.status.loadBalancer.ingress[0].ip\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Create a pod 'test-po' with a restart policy set to Never using the 'nginx' image.\nAssistant: Creating pod 'test-po' with restart policy Never.\nUser: Create it.\n", "completion": "\n<execute_command>\nkubectl run test-po --restart=Never --image=nginx\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List nodes with the label 'zone=us-west-2' and output in JSON format.\nAssistant: Filtering nodes by 'zone=us-west-2' and returning JSON output.\nUser: List them.\n", "completion": "\n<execute_command>\nkubectl get nodes -l zone=us-west-2 -o json\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Copy local file 'backup.tar' to pod 'backup-pod' at path '/data/backup.tar'.\nAssistant: Copying 'backup.tar' from local system to pod 'backup-pod' at '/data/backup.tar'.\nUser: Execute copy.\n", "completion": "\n<execute_command>\nkubectl cp backup.tar backup-pod:/data/backup.tar\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Get scheduler information using events.\nAssistant: Displaying events related to the scheduler.\nUser: Show scheduler events.\n", "completion": "\n<execute_command>\nkubectl get events --field-selector involvedObject.kind=Pod,involvedObject.name=scheduler\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Render all deployments in table format with columns for name, ready replicas, and desired replicas.\nAssistant: Listing deployments with custom columns for name, ready replicas, and desired replicas.\nUser: Provide table output.\n", "completion": "\n<execute_command>\nkubectl get deployments -o=custom-columns=NAME:.metadata.name,READY:.status.readyReplicas,REPLICAS:.spec.replicas\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, Set a new image for container 'api-container' in deployment 'api-deploy' to 'api:2.0'.\nAssistant: Updating container image in deployment 'api-deploy'.\nUser: Update the image.\n", "completion": "\n<execute_command>\nkubectl set image deployment/api-deploy api-container=api:2.0\n</execute_command>\n"}
{"prompt": "User: Regarding kubernetes, List all pods in wide format.\nAssistant: Displaying all pods with extended details.\nUser: Show wide output.\n", "completion": "\n<execute_command>\nkubectl get pods -o wide\n</execute_command>\n"}
